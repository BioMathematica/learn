[
  {
    "length": 2,
    "abbreviation": "CbGaD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.6204777494724318,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.713766166780883,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.8766384792146424
  },
  {
    "length": 2,
    "abbreviation": "CbGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2067371022716822,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9661031251651176,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.9661031251651176
  },
  {
    "length": 2,
    "abbreviation": "CbGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2207708946997866,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9696730829745337,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.9696730829745337
  },
  {
    "length": 2,
    "abbreviation": "CdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.150244156953722,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.1799341826180645,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3811819731056756
  },
  {
    "length": 2,
    "abbreviation": "CdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7365035097529722,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4112087036917484,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.4112087036917484
  },
  {
    "length": 2,
    "abbreviation": "CdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7505373021810768,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4124931067968802,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.4124931067968802
  },
  {
    "length": 2,
    "abbreviation": "CpDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.29928214820075094,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.47595680501890014,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.9126628229048642
  },
  {
    "length": 2,
    "abbreviation": "CrCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.322288113183095,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.4914083139751846,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.9349797504955122
  },
  {
    "length": 2,
    "abbreviation": "CrCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.6091704577857842,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.7046676602776186,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.9466839167598713
  },
  {
    "length": 2,
    "abbreviation": "CtDrD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.58616449280344,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.6863004893624763,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.9249754793861352
  },
  {
    "length": 2,
    "abbreviation": "CuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0952759182334757,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.1288209288576179,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3276794609664286
  },
  {
    "length": 2,
    "abbreviation": "CuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6815352710327258,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3614932498585497,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3614932498585497
  },
  {
    "length": 2,
    "abbreviation": "CuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6955690634608305,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3629331719690907,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3629331719690907
  },
  {
    "length": 3,
    "abbreviation": "CbG<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8584777057953346,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.2392934734298464,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.2392934734298464
  },
  {
    "length": 3,
    "abbreviation": "CbG<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4447370585945847,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6733463078853064,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6733463078853064
  },
  {
    "length": 3,
    "abbreviation": "CbG<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.458770851022689,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6853466075964123,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6853466075964123
  },
  {
    "length": 3,
    "abbreviation": "CbGaDrD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5195870075688531,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0682605382512538,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.0682605382512538
  },
  {
    "length": 3,
    "abbreviation": "CbGbCpD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": -0.049224693761082294,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.27711469153034707,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.848407814452921
  },
  {
    "length": 3,
    "abbreviation": "CbGbCtD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.23765765084160678,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.4359165252975643,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.8557749011061198
  },
  {
    "length": 3,
    "abbreviation": "CbGcGaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3906632700180053,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.020151351512396,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.020151351512396
  },
  {
    "length": 3,
    "abbreviation": "CbGcGdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9769226228172556,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.314257308708381,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.314257308708381
  },
  {
    "length": 3,
    "abbreviation": "CbGcGuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.99095641524536,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3236283249149177,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3236283249149177
  },
  {
    "length": 3,
    "abbreviation": "CbGdAlD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4812536634709597,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6310549797455807,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7046869079399343
  },
  {
    "length": 3,
    "abbreviation": "CbGdCpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.48054171372020793,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.6046278578102682,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.866953112377671
  },
  {
    "length": 3,
    "abbreviation": "CbGdCtD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7674240583228971,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.8359196219038232,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.8904180994977381
  },
  {
    "length": 3,
    "abbreviation": "CbGdDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1058463603681035,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.380640196866612,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.404002836030452
  },
  {
    "length": 3,
    "abbreviation": "CbGeAlD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1929544784167136,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2624399102851784,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.365712035327455
  },
  {
    "length": 3,
    "abbreviation": "CbGiGaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.776776244472197,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1920644974224672,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.1920644974224672
  },
  {
    "length": 3,
    "abbreviation": "CbGiGdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3630355972714474,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6046540047134434,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6046540047134434
  },
  {
    "length": 3,
    "abbreviation": "CbGiGuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.377069389699552,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6163048769890471,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6163048769890471
  },
  {
    "length": 3,
    "abbreviation": "CbGr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8584777057953346,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.2392934734298464,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.2392934734298464
  },
  {
    "length": 3,
    "abbreviation": "CbGr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4447370585945847,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6733463078853064,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6733463078853064
  },
  {
    "length": 3,
    "abbreviation": "CbGr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.458770851022689,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6853466075964123,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6853466075964123
  },
  {
    "length": 3,
    "abbreviation": "CbGuAlD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4621847758203974,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6160516765503867,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6882743042181554
  },
  {
    "length": 3,
    "abbreviation": "CbGuCpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.42557347499996157,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.5639840062846688,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.8638795183034592
  },
  {
    "length": 3,
    "abbreviation": "CbGuCtD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7124558196026507,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.7894183103801278,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.8847641505262267
  },
  {
    "length": 3,
    "abbreviation": "CbGuDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.119880152796208,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.3900932617695414,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.4142481694189886
  },
  {
    "length": 3,
    "abbreviation": "CcSEcCpD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7365030794483083,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9805255739318952,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.9805255739318952
  },
  {
    "length": 3,
    "abbreviation": "CcSEcCtD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0233854240509976,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0056681660644258,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.0056681660644258
  },
  {
    "length": 3,
    "abbreviation": "CdG<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.388244113276625,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5298944010517255,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.5298944010517255
  },
  {
    "length": 3,
    "abbreviation": "CdG<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.974503466075875,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8038783751812335,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8038783751812335
  },
  {
    "length": 3,
    "abbreviation": "CdG<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9885372585039796,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8127951535907607,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8127951535907607
  },
  {
    "length": 3,
    "abbreviation": "CdGaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0493534150501436,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.3436119290299506,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.450686716704125
  },
  {
    "length": 3,
    "abbreviation": "CdGbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.48054171372020793,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.6046278578102682,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3725432221576113
  },
  {
    "length": 3,
    "abbreviation": "CdGbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7674240583228971,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.8359196219038232,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3747600920968097
  },
  {
    "length": 3,
    "abbreviation": "CdGcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9204296774992955,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4313855247022869,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.4313855247022869
  },
  {
    "length": 3,
    "abbreviation": "CdGcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5066890302985456,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5698995325260348,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.5698995325260348
  },
  {
    "length": 3,
    "abbreviation": "CdGcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.52072282272665,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5751261709666107,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.5751261709666107
  },
  {
    "length": 3,
    "abbreviation": "CdGdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0110200709522497,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.827297863835548,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.827297863835548
  },
  {
    "length": 3,
    "abbreviation": "CdGdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0103081212014982,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.0507737494164573,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3781742219342112
  },
  {
    "length": 3,
    "abbreviation": "CdGdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2971904658041873,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.3185633714060592,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.38554130858741
  },
  {
    "length": 3,
    "abbreviation": "CdGdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6356127678493935,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6219845779753492,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6219845779753492
  },
  {
    "length": 3,
    "abbreviation": "CdGeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7227208858980037,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.395581714772631,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.395581714772631
  },
  {
    "length": 3,
    "abbreviation": "CdGiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.306542651953487,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5063478568824977,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.5063478568824977
  },
  {
    "length": 3,
    "abbreviation": "CdGiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8928020047527374,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7540886748616393,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7540886748616393
  },
  {
    "length": 3,
    "abbreviation": "CdGiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.906835797180842,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7623797357568232,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7623797357568232
  },
  {
    "length": 3,
    "abbreviation": "CdGr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.388244113276625,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5298944010517255,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.5298944010517255
  },
  {
    "length": 3,
    "abbreviation": "CdGr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.974503466075875,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8038783751812335,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8038783751812335
  },
  {
    "length": 3,
    "abbreviation": "CdGr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9885372585039796,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8127951535907607,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8127951535907607
  },
  {
    "length": 3,
    "abbreviation": "CdGuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.991951183301688,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8149801425345338,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8149801425345338
  },
  {
    "length": 3,
    "abbreviation": "CdGuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.9553398824812518,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.0009877604313309,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3772293741515607
  },
  {
    "length": 3,
    "abbreviation": "CdGuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.242222227083941,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.2664000444681058,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3837411758778593
  },
  {
    "length": 3,
    "abbreviation": "CdGuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6496465602774983,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6282155796032154,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6282155796032154
  },
  {
    "length": 3,
    "abbreviation": "CpDaGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.144697122680368,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.1747558870728931,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.746485117725051
  },
  {
    "length": 3,
    "abbreviation": "CpDaGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7309564754796183,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4061648438602943,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.331292821228815
  },
  {
    "length": 3,
    "abbreviation": "CpDaGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7449902679077227,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4074642284510284,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.34531043042686
  },
  {
    "length": 3,
    "abbreviation": "CpDdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7309564754796183,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.738951580094705,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.331292821228815
  },
  {
    "length": 3,
    "abbreviation": "CpDdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3172158282788686,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9620341432946198,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.917175021568502
  },
  {
    "length": 3,
    "abbreviation": "CpDdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.331249620706973,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9623958340504615,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.9312046146955058
  },
  {
    "length": 3,
    "abbreviation": "CpDlAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7723136868304818,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.192206965100712,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.372603800874375
  },
  {
    "length": 3,
    "abbreviation": "CpDpCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": -0.7453101799212485,
    "optimal_join_index": 1,
    "optimal_join_complexity": -0.014737061839530627,
    "midpoint_index": 1,
    "midpoint_join_complexity": -0.014737061839530627
  },
  {
    "length": 3,
    "abbreviation": "CpDpCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": -0.4584278353185594,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.07983810871248691,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.2138171773240459
  },
  {
    "length": 3,
    "abbreviation": "CpDpSpD",
    "edges": [
      "compound - palliates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PRESENTS_DpS]-(n2)-[:PRESENTS_DpS]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.673880894939848,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.140566893133281,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.274288714173328
  },
  {
    "length": 3,
    "abbreviation": "CpDrDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.1983914062971723,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.9964667667462378,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7999518082662818
  },
  {
    "length": 3,
    "abbreviation": "CpDtCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": -0.45842783531855946,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.12968806462558177,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.21381717732404582
  },
  {
    "length": 3,
    "abbreviation": "CpDtCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": -0.17154549071587039,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.22367277059043383,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.467192828175489
  },
  {
    "length": 3,
    "abbreviation": "CpDuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7449902679077227,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.752733401007835,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.34531043042686
  },
  {
    "length": 3,
    "abbreviation": "CpDuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.331249620706973,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9757174585785242,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.9312046146955058
  },
  {
    "length": 3,
    "abbreviation": "CpDuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3452834131350775,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9760679357227242,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.9452343413110245
  },
  {
    "length": 3,
    "abbreviation": "CrCbGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5425929725511973,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0980040838858407,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.0980040838858407
  },
  {
    "length": 3,
    "abbreviation": "CrCbGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1288523253504477,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3883668994722436,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3883668994722436
  },
  {
    "length": 3,
    "abbreviation": "CrCbGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.142886117778552,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3976550382699318,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3976550382699318
  },
  {
    "length": 3,
    "abbreviation": "CrCdGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0723593800324873,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3520197000660596,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3520197000660596
  },
  {
    "length": 3,
    "abbreviation": "CrCdGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6586187328317377,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7984550483380086,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7984550483380086
  },
  {
    "length": 3,
    "abbreviation": "CrCdGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.672652525259842,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8106490994219122,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8106490994219122
  },
  {
    "length": 3,
    "abbreviation": "CrCpDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2213973712795165,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.0011857449426043,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.0149493487467038
  },
  {
    "length": 3,
    "abbreviation": "CrCrCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2444033362618605,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0194727317285819,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.0194727317285819
  },
  {
    "length": 3,
    "abbreviation": "CrCrCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5312856808645496,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0942711006776893,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.0942711006776893
  },
  {
    "length": 3,
    "abbreviation": "CrCtDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5082797158822054,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.0789291434029344,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.0868753848200747
  },
  {
    "length": 3,
    "abbreviation": "CrCuGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.017391141312241,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.318299267482447,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.318299267482447
  },
  {
    "length": 3,
    "abbreviation": "CrCuGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6036504941114913,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7512079187243061,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7512079187243061
  },
  {
    "length": 3,
    "abbreviation": "CrCuGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6176842865395957,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7631900303796861,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7631900303796861
  },
  {
    "length": 3,
    "abbreviation": "CtDaGaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.431579467283057,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.44736603262779,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.748312319128296
  },
  {
    "length": 3,
    "abbreviation": "CtDaGdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.017838820082307,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6734557720783154,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.331768873443323
  },
  {
    "length": 3,
    "abbreviation": "CtDaGuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0318726125104116,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6741584321260734,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.345771370575944
  },
  {
    "length": 3,
    "abbreviation": "CtDdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.017838820082307,
    "optimal_join_index": 0,
    "optimal_join_complexity": 2.0219871156497686,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.331768873443323
  },
  {
    "length": 3,
    "abbreviation": "CtDdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6040981728815575,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2435571074725034,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.9172986016979334
  },
  {
    "length": 3,
    "abbreviation": "CtDdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.618131965309662,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.243746298573197,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.93132426698598
  },
  {
    "length": 3,
    "abbreviation": "CtDlAlD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0591960314331708,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.337467840206392,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.373036678562151
  },
  {
    "length": 3,
    "abbreviation": "CtDpCpD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": -0.4584278353185594,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.07983810871248691,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.07983810871248691
  },
  {
    "length": 3,
    "abbreviation": "CtDpCtD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": -0.17154549071587033,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.22367277059043383,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.27214528276315847
  },
  {
    "length": 3,
    "abbreviation": "CtDpSpD",
    "edges": [
      "compound - treats - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PRESENTS_DpS]-(n2)-[:PRESENTS_DpS]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9607632395425374,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.2919158426514048,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.2748314960340044
  },
  {
    "length": 3,
    "abbreviation": "CtDrDrD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4852737508998612,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.0712651356953453,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8015677490042288
  },
  {
    "length": 3,
    "abbreviation": "CtDtCpD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": -0.17154549071587039,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.22367277059043383,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.2721452827631584
  },
  {
    "length": 3,
    "abbreviation": "CtDtCtD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.11533685388681869,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.3625160166680964,
    "midpoint_index": 1,
    "midpoint_join_complexity": 0.5006995219267348
  },
  {
    "length": 3,
    "abbreviation": "CtDuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0318726125104116,
    "optimal_join_index": 0,
    "optimal_join_complexity": 2.035889610843303,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.345771370575944
  },
  {
    "length": 3,
    "abbreviation": "CtDuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.618131965309662,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.25740764603938,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.93132426698598
  },
  {
    "length": 3,
    "abbreviation": "CtDuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6321657577377664,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.257590899900608,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.9453501905517077
  },
  {
    "length": 3,
    "abbreviation": "CuG<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.333275874556378,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.492595048275599,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.492595048275599
  },
  {
    "length": 3,
    "abbreviation": "CuG<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9195352273556283,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7844297394011994,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7844297394011994
  },
  {
    "length": 3,
    "abbreviation": "CuG<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9335690197837327,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.793750554327191,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.793750554327191
  },
  {
    "length": 3,
    "abbreviation": "CuGaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9943851763298972,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.309205514607558,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.405524175099386
  },
  {
    "length": 3,
    "abbreviation": "CuGbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.42557347499996157,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.5639840062846688,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.317895287302387
  },
  {
    "length": 3,
    "abbreviation": "CuGbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7124558196026507,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.7894183103801278,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3204085611537586
  },
  {
    "length": 3,
    "abbreviation": "CuGcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8654614387790491,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3840546540664371,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3840546540664371
  },
  {
    "length": 3,
    "abbreviation": "CuGcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4517207915782993,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5360141418948878,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.5360141418948878
  },
  {
    "length": 3,
    "abbreviation": "CuGcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4657545840064037,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5416621682592055,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.5416621682592055
  },
  {
    "length": 3,
    "abbreviation": "CuGdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9560518322320037,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8088921796262671,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8088921796262671
  },
  {
    "length": 3,
    "abbreviation": "CuGdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.9553398824812518,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.0009877604313309,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3242758327781488
  },
  {
    "length": 3,
    "abbreviation": "CuGdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.242222227083941,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.2664000444681058,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.332607091646456
  },
  {
    "length": 3,
    "abbreviation": "CuGdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.580644529129147,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5920640474230918,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.5920640474230918
  },
  {
    "length": 3,
    "abbreviation": "CuGeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6677526471777577,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.390684557489527,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.390684557489527
  },
  {
    "length": 3,
    "abbreviation": "CuGiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2515744132332407,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4668730946025073,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.4668730946025073
  },
  {
    "length": 3,
    "abbreviation": "CuGiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.837833766032491,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.732217066288149,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.732217066288149
  },
  {
    "length": 3,
    "abbreviation": "CuGiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8518675584605955,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7409320992833615,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7409320992833615
  },
  {
    "length": 3,
    "abbreviation": "CuGr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.333275874556378,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.492595048275599,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.492595048275599
  },
  {
    "length": 3,
    "abbreviation": "CuGr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9195352273556283,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7844297394011994,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7844297394011994
  },
  {
    "length": 3,
    "abbreviation": "CuGr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9335690197837327,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.793750554327191,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.793750554327191
  },
  {
    "length": 3,
    "abbreviation": "CuGuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.936982944581441,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7960332339177618,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.7960332339177618
  },
  {
    "length": 3,
    "abbreviation": "CuGuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.9003716437610054,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.9518270459418229,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3232059832139649
  },
  {
    "length": 3,
    "abbreviation": "CuGuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.1872539883636946,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.214593384440916,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3305730698671634
  },
  {
    "length": 3,
    "abbreviation": "CuGuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.594678321557252,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.598736067433219,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.598736067433219
  },
  {
    "length": 4,
    "abbreviation": "CbG<rG<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.096477662118237,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1146384355375454,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1146384355375454
  },
  {
    "length": 4,
    "abbreviation": "CbG<rG<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.682737014917487,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2041030814880203,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2041030814880203
  },
  {
    "length": 4,
    "abbreviation": "CbG<rG<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6967708073455916,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.207673039297436,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.207673039297436
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGaDrD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.757586963891756,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.9037253165197756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.095380280003639
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGbCpD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.1887752625618204,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9616582472391602,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0788627228380245
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGbCtD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4756576071645096,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0508593793808023,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0792995515615345
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGcGaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6286632263409078,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.83466644101732,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0910807229374977
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGcGdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.214922579140158,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.125406376672945,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.125406376672945
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGcGuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2289563715682625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.126867210888664,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.126867210888664
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGdAlD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7192536197938626,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2135735448778053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2135735448778053
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGdCpD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7185416700431106,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1607108807466773,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.079975806711376
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGdCtD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0054240146458,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3333937477733044,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0814496313856137
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGdDrD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.343846316691006,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1405392213940564,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1405392213940564
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGeAlD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.430954434739617,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.537791637423814,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.537791637423814
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGiGaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0147762007950996,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.108634144307385,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.108634144307385
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGiGdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.60103555359435,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1849698077871573,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1849698077871573
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGiGuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6150693460224543,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.188062479655994,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.188062479655994
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.096477662118237,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1146384355375454,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1146384355375454
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.682737014917487,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2041030814880203,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2041030814880203
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6967708073455916,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.207673039297436,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.207673039297436
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGuAlD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7001847321433,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2085545416685255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2085545416685255
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGuCpD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6635734313228643,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.132902030006726,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.079788228793536
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGuCtD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9504557759255534,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.2968602732481294,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.081087657350125
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGuDrD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3578801091191104,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.142436684629909,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.142436684629909
  },
  {
    "length": 4,
    "abbreviation": "CbGaDaGaD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.36500198204847,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.606282638933725,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7759950065921166
  },
  {
    "length": 4,
    "abbreviation": "CbGaDaGdD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9512613348477204,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.133560137884335,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3391643062496144
  },
  {
    "length": 4,
    "abbreviation": "CbGaDaGuD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.965295127275825,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.146890268106823,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3529340873934084
  },
  {
    "length": 4,
    "abbreviation": "CbGaDdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9512613348477204,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1335601378843347,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3391643062496144
  },
  {
    "length": 4,
    "abbreviation": "CbGaDdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5375206876469707,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.703123783567511,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.919231326900683
  },
  {
    "length": 4,
    "abbreviation": "CbGaDdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.551554480075075,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7169681046549066,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9331957035536513
  },
  {
    "length": 4,
    "abbreviation": "CbGaDlAlD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9926185461985844,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.074392218347013,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3797668991380023
  },
  {
    "length": 4,
    "abbreviation": "CbGaDpCpD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.4749946794468538,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.6004660368915704,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6891871193599659
  },
  {
    "length": 4,
    "abbreviation": "CbGaDpCtD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7618770240495429,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7449280073409322,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7449280073409322
  },
  {
    "length": 4,
    "abbreviation": "CbGaDpSpD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.89418575430795,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.041096583311046,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2832529370627657
  },
  {
    "length": 4,
    "abbreviation": "CbGaDrDrD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4186962656652744,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.6128754248773043,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8261443289071653
  },
  {
    "length": 4,
    "abbreviation": "CbGaDtCpD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7618770240495427,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7449280073409322,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7449280073409322
  },
  {
    "length": 4,
    "abbreviation": "CbGaDtCtD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0487593686522318,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.8359560355491715,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.8359560355491715
  },
  {
    "length": 4,
    "abbreviation": "CbGaDuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.965295127275825,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1468902681068225,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3529340873934084
  },
  {
    "length": 4,
    "abbreviation": "CbGaDuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.551554480075075,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7169681046549066,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9331957035536513
  },
  {
    "length": 4,
    "abbreviation": "CbGaDuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5655882725031796,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.730818371659735,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9471622768803227
  },
  {
    "length": 4,
    "abbreviation": "CbGbCbGaD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.17108016560702,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.8879738796498171,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.8879738796498171
  },
  {
    "length": 4,
    "abbreviation": "CbGbCbGdD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7573395184062703,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1813841236029818,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2933574342997276
  },
  {
    "length": 4,
    "abbreviation": "CbGbCbGuD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7713733108343748,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1890740128482418,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3048870006092586
  },
  {
    "length": 4,
    "abbreviation": "CbGbCdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7008465730883102,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1515690411373378,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2476388984928384
  },
  {
    "length": 4,
    "abbreviation": "CbGbCdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2871059258875603,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5427727611435127,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7639255678317272
  },
  {
    "length": 4,
    "abbreviation": "CbGbCdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3011397183156648,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5540575608514546,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7771135426242555
  },
  {
    "length": 4,
    "abbreviation": "CbGbCpDrD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.8498845643353391,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7439035880567442,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7439035880567442
  },
  {
    "length": 4,
    "abbreviation": "CbGbCrCpD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.8728905293176832,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7523090821924538,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7523090821924538
  },
  {
    "length": 4,
    "abbreviation": "CbGbCrCtD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.1597728739203723,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.8819029807653913,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.8819029807653913
  },
  {
    "length": 4,
    "abbreviation": "CbGbCtDrD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.1367669089380281,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.869777347265943,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.869777347265943
  },
  {
    "length": 4,
    "abbreviation": "CbGbCuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6458783343680639,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.124319895663959,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.204285914418498
  },
  {
    "length": 4,
    "abbreviation": "CbGbCuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.232137687167314,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4992796719041976,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7125282149900514
  },
  {
    "length": 4,
    "abbreviation": "CbGbCuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2461714795954184,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5102738967427,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7256098094273409
  },
  {
    "length": 4,
    "abbreviation": "CbGcG<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6286632263409078,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.709420201454087,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.709420201454087
  },
  {
    "length": 4,
    "abbreviation": "CbGcG<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.214922579140158,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9085024905767947,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9085024905767947
  },
  {
    "length": 4,
    "abbreviation": "CbGcG<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2289563715682625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9155256666392002,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9155256666392002
  },
  {
    "length": 4,
    "abbreviation": "CbGcGaDrD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2897725281144266,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.5120385339050275,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.658678715698893
  },
  {
    "length": 4,
    "abbreviation": "CbGcGbCpD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7209608267844911,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.7965533963475521,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6119516109884602
  },
  {
    "length": 4,
    "abbreviation": "CbGcGbCtD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0078431713871803,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9240235211049492,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6132304067178973
  },
  {
    "length": 4,
    "abbreviation": "CbGcGcGaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1608487905635787,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4446597365305354,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6468239997602159
  },
  {
    "length": 4,
    "abbreviation": "CbGcGcGdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.747108143362829,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.736288645710691,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.736288645710691
  },
  {
    "length": 4,
    "abbreviation": "CbGcGcGuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7611419357909335,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7398586035201071,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7398586035201071
  },
  {
    "length": 4,
    "abbreviation": "CbGcGdAlD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.251439184016533,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9270133821625453,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9270133821625453
  },
  {
    "length": 4,
    "abbreviation": "CbGcGdCpD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2507272342657814,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9775852093889017,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6152052385166247
  },
  {
    "length": 4,
    "abbreviation": "CbGcGdCtD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5376095788684705,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0757088978438563,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6194888487402148
  },
  {
    "length": 4,
    "abbreviation": "CbGcGdDrD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.876031880913677,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7724640545694967,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7724640545694967
  },
  {
    "length": 4,
    "abbreviation": "CbGcGeAlD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.963139998962287,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4248615112799876,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4248615112799876
  },
  {
    "length": 4,
    "abbreviation": "CbGcGiGaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5469617650177705,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.693989929171103,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.693989929171103
  },
  {
    "length": 4,
    "abbreviation": "CbGcGiGdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.133221117817021,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8698626760357557,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8698626760357557
  },
  {
    "length": 4,
    "abbreviation": "CbGcGiGuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1472549102451253,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8762277260040277,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8762277260040277
  },
  {
    "length": 4,
    "abbreviation": "CbGcGr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6286632263409078,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.709420201454087,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.709420201454087
  },
  {
    "length": 4,
    "abbreviation": "CbGcGr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.214922579140158,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9085024905767947,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9085024905767947
  },
  {
    "length": 4,
    "abbreviation": "CbGcGr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2289563715682625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9155256666392002,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9155256666392002
  },
  {
    "length": 4,
    "abbreviation": "CbGcGuAlD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2323702963659704,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9172513002088327,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9172513002088327
  },
  {
    "length": 4,
    "abbreviation": "CbGcGuCpD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.195758995545535,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9633700332826538,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6146580561974213
  },
  {
    "length": 4,
    "abbreviation": "CbGcGuCtD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4826413401482241,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0535548737164784,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.618439350121314
  },
  {
    "length": 4,
    "abbreviation": "CbGcGuDrD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8900656733417813,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7768796365492192,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7768796365492192
  },
  {
    "length": 4,
    "abbreviation": "CbGdAdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.714413013319373,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2720238965120045,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2720238965120045
  },
  {
    "length": 4,
    "abbreviation": "CbGdAdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.300672366118624,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7958828896690586,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7958828896690586
  },
  {
    "length": 4,
    "abbreviation": "CbGdAdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.314706158546728,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8091691947321054,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8091691947321054
  },
  {
    "length": 4,
    "abbreviation": "CbGdAeGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.426113828265128,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9153917519720736,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9153917519720736
  },
  {
    "length": 4,
    "abbreviation": "CbGdAeGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.012373181064378,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.488233214343265,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.488233214343265
  },
  {
    "length": 4,
    "abbreviation": "CbGdAeGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.026406973492483,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.502115317214056,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.502115317214056
  },
  {
    "length": 4,
    "abbreviation": "CbGdAlDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.380362921567381,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0204817148028384,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0204817148028384
  },
  {
    "length": 4,
    "abbreviation": "CbGdAuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.695344125668811,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2564629447904756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2564629447904756
  },
  {
    "length": 4,
    "abbreviation": "CbGdAuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.281603478468061,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7778669846561646,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7778669846561646
  },
  {
    "length": 4,
    "abbreviation": "CbGdAuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.295637270896166,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7911216010236894,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7911216010236894
  },
  {
    "length": 4,
    "abbreviation": "CbGdCbGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7008465730883102,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1515690411373378,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2096796145467268
  },
  {
    "length": 4,
    "abbreviation": "CbGdCbGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2871059258875603,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.449163066178603,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.449163066178603
  },
  {
    "length": 4,
    "abbreviation": "CbGdCbGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3011397183156648,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4572491006033377,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4572491006033377
  },
  {
    "length": 4,
    "abbreviation": "CbGdCdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2306129805696004,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4177402871311073,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4177402871311073
  },
  {
    "length": 4,
    "abbreviation": "CbGdCdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.816872333368851,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8231238417810178,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8231238417810178
  },
  {
    "length": 4,
    "abbreviation": "CbGdCdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.830906125796955,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8346534080905488,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8346534080905488
  },
  {
    "length": 4,
    "abbreviation": "CbGdCpDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3796509718166292,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.016450095301868,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1468974795984213
  },
  {
    "length": 4,
    "abbreviation": "CbGdCrCpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4026569367989732,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0242536403988736,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1502402490655856
  },
  {
    "length": 4,
    "abbreviation": "CbGdCrCtD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6895392814016623,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1458216634738994,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2067958724035313
  },
  {
    "length": 4,
    "abbreviation": "CbGdCtDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6665333164193186,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1343551609015938,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.201099374116664
  },
  {
    "length": 4,
    "abbreviation": "CbGdCuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1756447418493536,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.3889163239294928,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3889163239294928
  },
  {
    "length": 4,
    "abbreviation": "CbGdCuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.761904094648604,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7786241399580593,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7786241399580593
  },
  {
    "length": 4,
    "abbreviation": "CbGdCuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7759378870767084,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7898826406777792,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7898826406777792
  },
  {
    "length": 4,
    "abbreviation": "CbGdDaGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9512613348477204,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.855072331782778,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.855072331782778
  },
  {
    "length": 4,
    "abbreviation": "CbGdDaGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5375206876469707,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3622543593913665,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3622543593913665
  },
  {
    "length": 4,
    "abbreviation": "CbGdDaGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.551554480075075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3753217830521405,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3753217830521405
  },
  {
    "length": 4,
    "abbreviation": "CbGdDdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5375206876469707,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3622543593913665,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3622543593913665
  },
  {
    "length": 4,
    "abbreviation": "CbGdDdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.1237800404462215,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9254236590488647,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9254236590488647
  },
  {
    "length": 4,
    "abbreviation": "CbGdDdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.1378138328743255,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9391934401926587,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9391934401926587
  },
  {
    "length": 4,
    "abbreviation": "CbGdDlAlD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5788778989978347,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.400845254060716,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.400845254060716
  },
  {
    "length": 4,
    "abbreviation": "CbGdDpCpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0612540322461042,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9338659497877061,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.225620844192777
  },
  {
    "length": 4,
    "abbreviation": "CbGdDpCtD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3481363768487933,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.006198993953294,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2425798947946447
  },
  {
    "length": 4,
    "abbreviation": "CbGdDpSpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4804451071072005,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.309421653498105,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.309421653498105
  },
  {
    "length": 4,
    "abbreviation": "CbGdDrDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0049556184645247,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.897264959045513,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.897264959045513
  },
  {
    "length": 4,
    "abbreviation": "CbGdDtCpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.348136376848793,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.006198993953294,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2425798947946447
  },
  {
    "length": 4,
    "abbreviation": "CbGdDtCtD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6350187214514822,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1191420978616273,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2736404431329187
  },
  {
    "length": 4,
    "abbreviation": "CbGdDuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.551554480075075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3753217830521405,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3753217830521405
  },
  {
    "length": 4,
    "abbreviation": "CbGdDuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.1378138328743255,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9391934401926587,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9391934401926587
  },
  {
    "length": 4,
    "abbreviation": "CbGdDuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.15184762530243,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.952971463218747,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.952971463218747
  },
  {
    "length": 4,
    "abbreviation": "CbGeAdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.426113828265128,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5149620540634303,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5149620540634303
  },
  {
    "length": 4,
    "abbreviation": "CbGeAdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.012373181064378,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8837963697814075,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8837963697814075
  },
  {
    "length": 4,
    "abbreviation": "CbGeAdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.026406973492483,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8946781160361184,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8946781160361184
  },
  {
    "length": 4,
    "abbreviation": "CbGeAeGaD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.1378146432108815,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.983724711457759,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.983724711457759
  },
  {
    "length": 4,
    "abbreviation": "CbGeAeGdD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.724073996010132,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5075837046148126,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5075837046148126
  },
  {
    "length": 4,
    "abbreviation": "CbGeAeGuD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.738107788438237,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5208700096778593,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5208700096778593
  },
  {
    "length": 4,
    "abbreviation": "CbGeAlDrD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.092063736513135,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3892771312373084,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3892771312373084
  },
  {
    "length": 4,
    "abbreviation": "CbGeAuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.407044940614566,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.50613641628863,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.50613641628863
  },
  {
    "length": 4,
    "abbreviation": "CbGeAuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.993304293413816,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.869138388337707,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.869138388337707
  },
  {
    "length": 4,
    "abbreviation": "CbGeAuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.007338085841921,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8799115262187724,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8799115262187724
  },
  {
    "length": 4,
    "abbreviation": "CbGiG<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0147762007950996,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0400752039321866,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0400752039321866
  },
  {
    "length": 4,
    "abbreviation": "CbGiG<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.60103555359435,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.144425842488268,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.144425842488268
  },
  {
    "length": 4,
    "abbreviation": "CbGiG<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6150693460224543,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1485191864962654,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1485191864962654
  },
  {
    "length": 4,
    "abbreviation": "CbGiGaDrD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6758855025686183,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.830828161366644,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0171129254682567
  },
  {
    "length": 4,
    "abbreviation": "CbGiGbCpD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.107073801238683,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9431239990493521,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9972579087673288
  },
  {
    "length": 4,
    "abbreviation": "CbGiGbCtD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.393956145841372,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0212702215992453,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.99778498189057
  },
  {
    "length": 4,
    "abbreviation": "CbGiGcGaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5469617650177705,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.761979339733477,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.011959246544475
  },
  {
    "length": 4,
    "abbreviation": "CbGiGcGdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.133221117817021,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.052830708338435,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.052830708338435
  },
  {
    "length": 4,
    "abbreviation": "CbGiGcGuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1472549102451253,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0545567208141646,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0545567208141646
  },
  {
    "length": 4,
    "abbreviation": "CbGiGdAlD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.637552158470725,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.155274023521559,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.155274023521559
  },
  {
    "length": 4,
    "abbreviation": "CbGiGdCpD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6368402087199734,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1200058444574255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9986007287101635
  },
  {
    "length": 4,
    "abbreviation": "CbGiGdCtD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9237225533226625,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.2796604183636278,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.000377654358385
  },
  {
    "length": 4,
    "abbreviation": "CbGiGdDrD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2621448553678687,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.070660217365113,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.070660217365113
  },
  {
    "length": 4,
    "abbreviation": "CbGiGeAlD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.349252973416479,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.511130064677443,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.511130064677443
  },
  {
    "length": 4,
    "abbreviation": "CbGiGiGaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9330747394719623,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0329369742144077,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0329369742144077
  },
  {
    "length": 4,
    "abbreviation": "CbGiGiGdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5193340922712126,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.122401620164883,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.122401620164883
  },
  {
    "length": 4,
    "abbreviation": "CbGiGiGuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.533367884699317,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.125971577974299,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.125971577974299
  },
  {
    "length": 4,
    "abbreviation": "CbGiGr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0147762007950996,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0400752039321866,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0400752039321866
  },
  {
    "length": 4,
    "abbreviation": "CbGiGr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.60103555359435,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.144425842488268,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.144425842488268
  },
  {
    "length": 4,
    "abbreviation": "CbGiGr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6150693460224543,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1485191864962654,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1485191864962654
  },
  {
    "length": 4,
    "abbreviation": "CbGiGuAlD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.618483270820162,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1495291671970245,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1495291671970245
  },
  {
    "length": 4,
    "abbreviation": "CbGiGuCpD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5818719699997266,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0947762594434798,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9983744852053142
  },
  {
    "length": 4,
    "abbreviation": "CbGiGuCtD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8687543146024157,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.245497607891878,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9999413530106134
  },
  {
    "length": 4,
    "abbreviation": "CbGiGuDrD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.276178647795973,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0728880730100165,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0728880730100165
  },
  {
    "length": 4,
    "abbreviation": "CbGpBPpGaD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpBP",
      "BPpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpBP",
      "GpBP",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7388233528908983,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.331640746756921,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.331640746756921
  },
  {
    "length": 4,
    "abbreviation": "CbGpBPpGdD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpBP",
      "BPpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpBP",
      "GpBP",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.325082705690149,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.476042459242338,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.476042459242338
  },
  {
    "length": 4,
    "abbreviation": "CbGpBPpGuD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpBP",
      "BPpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpBP",
      "GpBP",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.339116498118253,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4814552782195167,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4814552782195167
  },
  {
    "length": 4,
    "abbreviation": "CbGpCCpGaD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpCC",
      "CCpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpCC",
      "GpCC",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8894245404129464,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.749699924945725,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.749699924945725
  },
  {
    "length": 4,
    "abbreviation": "CbGpCCpGdD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpCC",
      "CCpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpCC",
      "GpCC",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4756838932121967,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1680881854432417,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1680881854432417
  },
  {
    "length": 4,
    "abbreviation": "CbGpCCpGuD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpCC",
      "CCpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpCC",
      "GpCC",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.489717685640301,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.179835199585721,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.179835199585721
  },
  {
    "length": 4,
    "abbreviation": "CbGpMFpGaD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpMF",
      "MFpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpMF",
      "GpMF",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.814931230545307,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.719821062414273,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.719821062414273
  },
  {
    "length": 4,
    "abbreviation": "CbGpMFpGdD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpMF",
      "MFpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpMF",
      "GpMF",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4011905833445573,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0433837792008753,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0433837792008753
  },
  {
    "length": 4,
    "abbreviation": "CbGpMFpGuD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpMF",
      "MFpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpMF",
      "GpMF",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4152243757726617,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.053382147968374,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.053382147968374
  },
  {
    "length": 4,
    "abbreviation": "CbGpPWpGaD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpPW",
      "PWpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpPW",
      "GpPW",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.874572540135998,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.739071872931927,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.739071872931927
  },
  {
    "length": 4,
    "abbreviation": "CbGpPWpGdD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpPW",
      "PWpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpPW",
      "GpPW",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.460831892935248,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.139219112330904,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.139219112330904
  },
  {
    "length": 4,
    "abbreviation": "CbGpPWpGuD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpPW",
      "PWpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpPW",
      "GpPW",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4748656853633526,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1506592368055966,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1506592368055966
  },
  {
    "length": 4,
    "abbreviation": "CbGr>G<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.096477662118237,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1146384355375454,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1146384355375454
  },
  {
    "length": 4,
    "abbreviation": "CbGr>G<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.682737014917487,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2041030814880203,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2041030814880203
  },
  {
    "length": 4,
    "abbreviation": "CbGr>G<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6967708073455916,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.207673039297436,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.207673039297436
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GaDrD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.757586963891756,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.9037253165197756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.095380280003639
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GbCpD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.1887752625618204,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9616582472391602,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0788627228380245
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GbCtD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4756576071645096,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0508593793808023,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0792995515615345
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GcGaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6286632263409078,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.83466644101732,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0910807229374977
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GcGdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.214922579140158,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.125406376672945,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.125406376672945
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GcGuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2289563715682625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.126867210888664,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.126867210888664
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GdAlD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7192536197938626,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2135735448778053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2135735448778053
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GdCpD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7185416700431106,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1607108807466773,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.079975806711376
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GdCtD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0054240146458,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3333937477733044,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0814496313856137
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GdDrD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.343846316691006,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1405392213940564,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1405392213940564
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GeAlD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.430954434739617,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.537791637423814,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.537791637423814
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GiGaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0147762007950996,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.108634144307385,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.108634144307385
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GiGdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.60103555359435,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1849698077871573,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1849698077871573
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GiGuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6150693460224543,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.188062479655994,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.188062479655994
  },
  {
    "length": 4,
    "abbreviation": "CbGr>Gr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.096477662118237,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1146384355375454,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1146384355375454
  },
  {
    "length": 4,
    "abbreviation": "CbGr>Gr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.682737014917487,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2041030814880203,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2041030814880203
  },
  {
    "length": 4,
    "abbreviation": "CbGr>Gr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6967708073455916,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.207673039297436,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.207673039297436
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GuAlD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7001847321433,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2085545416685255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2085545416685255
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GuCpD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6635734313228643,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.132902030006726,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.079788228793536
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GuCtD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9504557759255534,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.2968602732481294,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.081087657350125
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GuDrD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3578801091191104,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.142436684629909,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.142436684629909
  },
  {
    "length": 4,
    "abbreviation": "CbGrPBrGaD",
    "edges": [
      "compound - binds - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GrPB",
      "PBrG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "PBrG",
      "PBrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.896625058989229,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2700256078170593,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2700256078170593
  },
  {
    "length": 4,
    "abbreviation": "CbGrPBrGdD",
    "edges": [
      "compound - binds - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GrPB",
      "PBrG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "PBrG",
      "PBrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.482884411788479,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5706108116524535,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5706108116524535
  },
  {
    "length": 4,
    "abbreviation": "CbGrPBrGuD",
    "edges": [
      "compound - binds - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GrPB",
      "PBrG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "PBrG",
      "PBrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.496918204216584,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.580123571503959,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.580123571503959
  },
  {
    "length": 4,
    "abbreviation": "CbGuAdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.695344125668811,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2686399085548796,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2686399085548796
  },
  {
    "length": 4,
    "abbreviation": "CbGuAdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.281603478468061,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.794872744258242,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.794872744258242
  },
  {
    "length": 4,
    "abbreviation": "CbGuAdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.295637270896166,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.808189518975308,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.808189518975308
  },
  {
    "length": 4,
    "abbreviation": "CbGuAeGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.407044940614565,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.914624825966221,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.914624825966221
  },
  {
    "length": 4,
    "abbreviation": "CbGuAeGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.993304293413815,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.488028272299596,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.488028272299596
  },
  {
    "length": 4,
    "abbreviation": "CbGuAeGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.00733808584192,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5019168239672633,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5019168239672633
  },
  {
    "length": 4,
    "abbreviation": "CbGuAlDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3612940339168187,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.014424047629376,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.014424047629376
  },
  {
    "length": 4,
    "abbreviation": "CbGuAuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.676275238018249,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2529550088614423,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2529550088614423
  },
  {
    "length": 4,
    "abbreviation": "CbGuAuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.262534590817499,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7768140020184964,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7768140020184964
  },
  {
    "length": 4,
    "abbreviation": "CbGuAuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.276568383245604,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.790100307081543,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.790100307081543
  },
  {
    "length": 4,
    "abbreviation": "CbGuCbGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6458783343680639,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.124319895663959,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1695449573515702
  },
  {
    "length": 4,
    "abbreviation": "CbGuCbGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.232137687167314,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4264953444478956,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4264953444478956
  },
  {
    "length": 4,
    "abbreviation": "CbGuCbGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2461714795954184,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4350104121958864,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4350104121958864
  },
  {
    "length": 4,
    "abbreviation": "CbGuCdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1756447418493536,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.39332299300069,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.39332299300069
  },
  {
    "length": 4,
    "abbreviation": "CbGuCdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.761904094648604,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8136859952823197,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8136859952823197
  },
  {
    "length": 4,
    "abbreviation": "CbGuCdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7759378870767084,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8254654534215582,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8254654534215582
  },
  {
    "length": 4,
    "abbreviation": "CbGuCpDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3246827330963828,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9988922077938254,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1001733152252646
  },
  {
    "length": 4,
    "abbreviation": "CbGuCrCpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.347688698078727,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0060569719810075,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1038941578208514
  },
  {
    "length": 4,
    "abbreviation": "CbGuCrCtD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6345710426814162,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1189301008371613,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1663809970336447
  },
  {
    "length": 4,
    "abbreviation": "CbGuCtDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6115650776990722,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1081903934810413,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.160124921357645
  },
  {
    "length": 4,
    "abbreviation": "CbGuCuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1206765031291077,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.362772048410861,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.362772048410861
  },
  {
    "length": 4,
    "abbreviation": "CbGuCuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.706935855928358,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7681556030607715,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7681556030607715
  },
  {
    "length": 4,
    "abbreviation": "CbGuCuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7209696483564625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7796851693703024,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7796851693703024
  },
  {
    "length": 4,
    "abbreviation": "CbGuDaGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.965295127275825,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8582659120919944,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8582659120919944
  },
  {
    "length": 4,
    "abbreviation": "CbGuDaGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.551554480075075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.363250213136328,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.363250213136328
  },
  {
    "length": 4,
    "abbreviation": "CbGuDaGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5655882725031796,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3762881518194714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3762881518194714
  },
  {
    "length": 4,
    "abbreviation": "CbGuDdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.551554480075075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.363250213136328,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.363250213136328
  },
  {
    "length": 4,
    "abbreviation": "CbGuDdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.1378138328743255,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.925696172547481,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.925696172547481
  },
  {
    "length": 4,
    "abbreviation": "CbGuDdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.15184762530243,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9394574514769687,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9394574514769687
  },
  {
    "length": 4,
    "abbreviation": "CbGuDlAlD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5929116914259387,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.401756523852179,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.401756523852179
  },
  {
    "length": 4,
    "abbreviation": "CbGuDpCpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0752878246742086,
    "optimal_join_index": 1,
    "optimal_join_complexity": 0.9366190758666574,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.239066650475093
  },
  {
    "length": 4,
    "abbreviation": "CbGuDpCtD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3621701692768977,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0107019660886645,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2555183597617687
  },
  {
    "length": 4,
    "abbreviation": "CbGuDpSpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4944788995353053,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.310546165025409,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.310546165025409
  },
  {
    "length": 4,
    "abbreviation": "CbGuDrDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.018989410892629,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9001638556709008,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9001638556709008
  },
  {
    "length": 4,
    "abbreviation": "CbGuDtCpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3621701692768975,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0107019660886645,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2555183597617687
  },
  {
    "length": 4,
    "abbreviation": "CbGuDtCtD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6490525138795866,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1258461225867062,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2856981493298572
  },
  {
    "length": 4,
    "abbreviation": "CbGuDuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5655882725031796,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3762881518194714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3762881518194714
  },
  {
    "length": 4,
    "abbreviation": "CbGuDuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.15184762530243,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9394574514769687,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9394574514769687
  },
  {
    "length": 4,
    "abbreviation": "CbGuDuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.165881417730534,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.953227232620763,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.953227232620763
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCbGaD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.956807938816411,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.280239273028042,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3371648587014744
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCbGdD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.543067291615661,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.6808563644780365,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3395407800187438
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCbGuD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.557101084043766,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.692304559395279,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.339645820001367
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCdGaD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.486574346297701,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.6354824561413825,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3391504379388386
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCdGdD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.072833699096951,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.149364918619457,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.347108662616405
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCdGuD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.086867491525056,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.16252130860949,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3474581495409397
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCpDrD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6356123375447296,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.139231327540852,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3367287890325708
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCrCpD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.658618302527074,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1474295852704794,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.33675046291619
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCrCtD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9455006471297636,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.274278331481458,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3371434277811183
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCtDrD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.922494682147419,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.262376888589339,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3371015063364657
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCuGaD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.431606107577454,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.592491247374274,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3388161055706296
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCuGdD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.017865460376704,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.0981002099235497,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.345841168388499
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCuGuD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.031899252804809,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.111146544531479,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.346150020452145
  },
  {
    "length": 4,
    "abbreviation": "CdG<rG<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6262440695995277,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3091762744185456,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6191819294285783
  },
  {
    "length": 4,
    "abbreviation": "CdG<rG<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.212503422398778,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.649208660014651,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.649208660014651
  },
  {
    "length": 4,
    "abbreviation": "CdG<rG<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.226537214826883,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.650493063119783,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.650493063119783
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.287353371373046,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.025679544735927,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.613246639131834
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.718541670043111,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4096189554707381,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.608299912948508
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0054240146458002,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4435575267980965,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6084290431603088
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.158429633822198,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9287289979727111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6119462918179916
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7446889866214486,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4155247123728607,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6225804032477997
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.758722779049553,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4283127372640307,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.623045908680867
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.249020027275153,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6526307962586184,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6526307962586184
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.248308077524401,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4914246547204504,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.608629130319315
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5351904221270902,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5806257868620928,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.609065959042825
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8736127241722964,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.5342818643519314,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6274545163911145
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.960720842220907,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7999294350751267,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7999294350751267
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.54454260827639,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.237697965773471,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6173118749441
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.13080196107564,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6424395377961734,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6424395377961734
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.144835753503745,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6435206498247936,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6435206498247936
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6262440695995277,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3091762744185456,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6191819294285783
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.212503422398778,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.649208660014651,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.649208660014651
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.226537214826883,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.650493063119783,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.650493063119783
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.229951139624591,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6508112521350067,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6508112521350067
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.193339838804155,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4786600997169612,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6085736086695634
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.480222183406844,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.560328912678981,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6089585764693948
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.887646516600401,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.547368262553718,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6280738112402067
  },
  {
    "length": 4,
    "abbreviation": "CdGaDaGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8947683895297605,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7552437913177872,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8430014181845258
  },
  {
    "length": 4,
    "abbreviation": "CdGaDaGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.481027742329011,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1833639991815126,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.358535629159421
  },
  {
    "length": 4,
    "abbreviation": "CdGaDaGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4950615347571152,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.195269462830092,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.371713737714265
  },
  {
    "length": 4,
    "abbreviation": "CdGaDdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.481027742329011,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.183363999181512,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.358535629159421
  },
  {
    "length": 4,
    "abbreviation": "CdGaDdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.067287095128261,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7171140294479046,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9244100416735668
  },
  {
    "length": 4,
    "abbreviation": "CdGaDdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.081320887556366,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.730526186475805,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9382114923129077
  },
  {
    "length": 4,
    "abbreviation": "CdGaDlAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5223849536798744,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.218613407952814,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3974439513683663
  },
  {
    "length": 4,
    "abbreviation": "CdGaDpCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.004761086928144,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.0457230963775777,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1716874424286228
  },
  {
    "length": 4,
    "abbreviation": "CdGaDpCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2916434315308332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1908401643051254,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1908401643051254
  },
  {
    "length": 4,
    "abbreviation": "CdGaDpSpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4239521617892406,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.135566353876699,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3052195309946506
  },
  {
    "length": 4,
    "abbreviation": "CdGaDrDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.948462673146565,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7876128001326057,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.886325794934152
  },
  {
    "length": 4,
    "abbreviation": "CdGaDtCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2916434315308332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1908401643051254,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1908401643051254
  },
  {
    "length": 4,
    "abbreviation": "CdGaDtCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5785257761335223,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.2256768560601217,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2256768560601217
  },
  {
    "length": 4,
    "abbreviation": "CdGaDuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.495061534757115,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1952694628300917,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.371713737714265
  },
  {
    "length": 4,
    "abbreviation": "CdGaDuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.081320887556365,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.730526186475805,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9382114923129077
  },
  {
    "length": 4,
    "abbreviation": "CdGaDuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.09535467998447,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.743957260955334,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9520202123401624
  },
  {
    "length": 4,
    "abbreviation": "CdGbCbGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7008465730883102,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.2096796145467268,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2096796145467268
  },
  {
    "length": 4,
    "abbreviation": "CdGbCbGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2871059258875603,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.449163066178603,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.449163066178603
  },
  {
    "length": 4,
    "abbreviation": "CdGbCbGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3011397183156648,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4572491006033377,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4572491006033377
  },
  {
    "length": 4,
    "abbreviation": "CdGbCdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2306129805696004,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4177402871311073,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4177402871311073
  },
  {
    "length": 4,
    "abbreviation": "CdGbCdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.816872333368851,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.711150531084272,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8231238417810178
  },
  {
    "length": 4,
    "abbreviation": "CdGbCdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.830906125796955,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.718840420329532,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8346534080905488
  },
  {
    "length": 4,
    "abbreviation": "CdGbCpDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3796509718166292,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.039443003057968,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1468974795984213
  },
  {
    "length": 4,
    "abbreviation": "CdGbCrCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4026569367989732,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1502402490655856,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1502402490655856
  },
  {
    "length": 4,
    "abbreviation": "CdGbCrCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6895392814016623,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.2067958724035313,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2067958724035313
  },
  {
    "length": 4,
    "abbreviation": "CdGbCtDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6665333164193186,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.139268788663876,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.201099374116664
  },
  {
    "length": 4,
    "abbreviation": "CdGbCuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1756447418493536,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.3889163239294928,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3889163239294928
  },
  {
    "length": 4,
    "abbreviation": "CdGbCuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.761904094648604,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.68211607007945,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7786241399580593
  },
  {
    "length": 4,
    "abbreviation": "CdGbCuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7759378870767084,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6893638996162423,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7898826406777792
  },
  {
    "length": 4,
    "abbreviation": "CdGcG<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.158429633822198,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9287289979727111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1719429790179414
  },
  {
    "length": 4,
    "abbreviation": "CdGcG<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7446889866214486,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2512964878825317,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2512964878825317
  },
  {
    "length": 4,
    "abbreviation": "CdGcG<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.758722779049553,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2545001967230696,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2545001967230696
  },
  {
    "length": 4,
    "abbreviation": "CdGcGaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.819538935595717,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7126030627714632,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1551121745304473
  },
  {
    "length": 4,
    "abbreviation": "CdGcGbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2507272342657814,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.274448744567014,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1407526082954504
  },
  {
    "length": 4,
    "abbreviation": "CdGcGbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5376095788684705,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3965736914386975,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.141131443476327
  },
  {
    "length": 4,
    "abbreviation": "CdGcGcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6906151980448687,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6470484042363305,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.151367493651249
  },
  {
    "length": 4,
    "abbreviation": "CdGcGcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.276874550844119,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.017538889098277,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.181394224237322
  },
  {
    "length": 4,
    "abbreviation": "CdGcGcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2909083432722235,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.028451206240522,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1826786273424537
  },
  {
    "length": 4,
    "abbreviation": "CdGcGdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.781205591497823,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.259801253267891,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.259801253267891
  },
  {
    "length": 4,
    "abbreviation": "CdGcGdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7804936417470716,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.415363881330498,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1417180184697506
  },
  {
    "length": 4,
    "abbreviation": "CdGcGdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0673759863497607,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4537899285862395,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1429968141991873
  },
  {
    "length": 4,
    "abbreviation": "CdGcGdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.405798288394967,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1205826856965175,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1947244939935877
  },
  {
    "length": 4,
    "abbreviation": "CdGcGeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.492906406443577,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5603180100650738,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5603180100650738
  },
  {
    "length": 4,
    "abbreviation": "CdGcGiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0767281724990605,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8711832512252522,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1666854140356624
  },
  {
    "length": 4,
    "abbreviation": "CdGcGiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.662987525298311,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2341727689621322,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2341727689621322
  },
  {
    "length": 4,
    "abbreviation": "CdGcGiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6770213177264153,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2369352300782244,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2369352300782244
  },
  {
    "length": 4,
    "abbreviation": "CdGcGr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.158429633822198,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9287289979727111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1719429790179414
  },
  {
    "length": 4,
    "abbreviation": "CdGcGr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7446889866214486,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2512964878825317,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2512964878825317
  },
  {
    "length": 4,
    "abbreviation": "CdGcGr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.758722779049553,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2545001967230696,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2545001967230696
  },
  {
    "length": 4,
    "abbreviation": "CdGcGuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7621367038472613,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2552916792866076,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2552916792866076
  },
  {
    "length": 4,
    "abbreviation": "CdGcGuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7255254030268252,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4102299529415898,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1415553036654136
  },
  {
    "length": 4,
    "abbreviation": "CdGcGuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0124077476295144,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4446508333542294,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1426826864396995
  },
  {
    "length": 4,
    "abbreviation": "CdGcGuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4198320808230713,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1321561906004023,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.19639981966113
  },
  {
    "length": 4,
    "abbreviation": "CdGdAdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.244179420800664,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4277292098314267,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4277292098314267
  },
  {
    "length": 4,
    "abbreviation": "CdGdAdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.830438773599914,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8486050149296287,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8486050149296287
  },
  {
    "length": 4,
    "abbreviation": "CdGdAdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.844472566028019,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.860392873660863,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.860392873660863
  },
  {
    "length": 4,
    "abbreviation": "CdGdAeGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.955880235746418,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9560031405622134,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9560031405622134
  },
  {
    "length": 4,
    "abbreviation": "CdGdAeGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.542139588545668,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.499469941003853,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.499469941003853
  },
  {
    "length": 4,
    "abbreviation": "CdGdAeGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.556173380973773,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5130029385341612,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5130029385341612
  },
  {
    "length": 4,
    "abbreviation": "CdGdAlDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.910129329048671,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2683448313561545,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2683448313561545
  },
  {
    "length": 4,
    "abbreviation": "CdGdAuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.225110533150102,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4169156381227777,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4169156381227777
  },
  {
    "length": 4,
    "abbreviation": "CdGdAuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.811369885949352,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8326868904195965,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8326868904195965
  },
  {
    "length": 4,
    "abbreviation": "CdGdAuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.825403678377457,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8443906767643097,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8443906767643097
  },
  {
    "length": 4,
    "abbreviation": "CdGdCbGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2306129805696004,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4871796547369667,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6524783893213144
  },
  {
    "length": 4,
    "abbreviation": "CdGdCbGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.816872333368851,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.711150531084272,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7547107909282298
  },
  {
    "length": 4,
    "abbreviation": "CdGdCbGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.830906125796955,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.718840420329532,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7587307867622382
  },
  {
    "length": 4,
    "abbreviation": "CdGdCdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7603793880508904,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.681335448618628,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7394460220280172
  },
  {
    "length": 4,
    "abbreviation": "CdGdCdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.346638740850141,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9789294736598932,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9789294736598932
  },
  {
    "length": 4,
    "abbreviation": "CdGdCdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.360672533278245,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.987015508084628,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.987015508084628
  },
  {
    "length": 4,
    "abbreviation": "CdGdCpDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9094173792979197,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.2592879927327643,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6308617680699986
  },
  {
    "length": 4,
    "abbreviation": "CdGdCrCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9324233442802636,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4329815749384571,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6319614438022316
  },
  {
    "length": 4,
    "abbreviation": "CdGdCrCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2193056888829528,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4845353586659278,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6514402980997918
  },
  {
    "length": 4,
    "abbreviation": "CdGdCtDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1962997239006086,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.4432781635849614,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6494026140159181
  },
  {
    "length": 4,
    "abbreviation": "CdGdCuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.705411149330644,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6540863031452495,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7259424085834782
  },
  {
    "length": 4,
    "abbreviation": "CdGdCuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2916705021298944,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.948330909686382,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.948330909686382
  },
  {
    "length": 4,
    "abbreviation": "CdGdCuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.305704294557999,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9559795679870278,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9559795679870278
  },
  {
    "length": 4,
    "abbreviation": "CdGdDaGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4810277423290104,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.041562382801817,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.041562382801817
  },
  {
    "length": 4,
    "abbreviation": "CdGdDaGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.067287095128261,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4292607709837757,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4292607709837757
  },
  {
    "length": 4,
    "abbreviation": "CdGdDaGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.081320887556365,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4404837992307002,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4404837992307002
  },
  {
    "length": 4,
    "abbreviation": "CdGdDdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.06728709512826,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4292607709837757,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4292607709837757
  },
  {
    "length": 4,
    "abbreviation": "CdGdDdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.653546447927511,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9447949819586707,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9447949819586707
  },
  {
    "length": 4,
    "abbreviation": "CdGdDdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6675802403556155,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.957973090513515,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.957973090513515
  },
  {
    "length": 4,
    "abbreviation": "CdGdDlAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.108644306479125,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.462539825416742,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.462539825416742
  },
  {
    "length": 4,
    "abbreviation": "CdGdDpCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5910204397273942,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3999141900444199,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7421654293280764
  },
  {
    "length": 4,
    "abbreviation": "CdGdDpCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8779027843300833,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4260259174054817,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7473983599494018
  },
  {
    "length": 4,
    "abbreviation": "CdGdDpSpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.010211514588491,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3843871088855355,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3843871088855355
  },
  {
    "length": 4,
    "abbreviation": "CdGdDrDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5347220259458147,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.069486331573447,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.069486331573447
  },
  {
    "length": 4,
    "abbreviation": "CdGdDtCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.877902784330083,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4260259174054817,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7473983599494018
  },
  {
    "length": 4,
    "abbreviation": "CdGdDtCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.164785128932772,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4725073512104772,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7573530248157332
  },
  {
    "length": 4,
    "abbreviation": "CdGdDuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.081320887556365,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4404837992307002,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4404837992307002
  },
  {
    "length": 4,
    "abbreviation": "CdGdDuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6675802403556155,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.957973090513515,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.957973090513515
  },
  {
    "length": 4,
    "abbreviation": "CdGdDuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.68161403278372,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9711767981765624,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9711767981765624
  },
  {
    "length": 4,
    "abbreviation": "CdGeAdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.955880235746418,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8707945005040694,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8707945005040694
  },
  {
    "length": 4,
    "abbreviation": "CdGeAdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.542139588545668,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0721003014642565,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0721003014642565
  },
  {
    "length": 4,
    "abbreviation": "CdGeAdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.556173380973773,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.079184649802732,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.079184649802732
  },
  {
    "length": 4,
    "abbreviation": "CdGeAeGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.6675810506921716,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1394300247771807,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1394300247771807
  },
  {
    "length": 4,
    "abbreviation": "CdGeAeGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.253840403491422,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5603058298753822,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5603058298753822
  },
  {
    "length": 4,
    "abbreviation": "CdGeAeGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.267874195919527,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.572093688606617,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.572093688606617
  },
  {
    "length": 4,
    "abbreviation": "CdGeAlDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.621830143994425,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8198190314097547,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8198190314097547
  },
  {
    "length": 4,
    "abbreviation": "CdGeAuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.936811348095856,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8669269083759277,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8669269083759277
  },
  {
    "length": 4,
    "abbreviation": "CdGeAuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.523070700895106,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.06265587665691,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.06265587665691
  },
  {
    "length": 4,
    "abbreviation": "CdGeAuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.537104493323211,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.069586186804432,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.069586186804432
  },
  {
    "length": 4,
    "abbreviation": "CdGiG<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.54454260827639,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.237697965773471,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5397269210133344
  },
  {
    "length": 4,
    "abbreviation": "CdGiG<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.13080196107564,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.575539340937186,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.575539340937186
  },
  {
    "length": 4,
    "abbreviation": "CdGiG<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.144835753503745,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5770607713327327,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5770607713327327
  },
  {
    "length": 4,
    "abbreviation": "CdGiGaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2056519100499083,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9634071716062624,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.532590242042564
  },
  {
    "length": 4,
    "abbreviation": "CdGiGbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6368402087199734,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4031021549904672,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.526627013477442
  },
  {
    "length": 4,
    "abbreviation": "CdGiGbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9237225533226625,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4318199227131558,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5267828565154224
  },
  {
    "length": 4,
    "abbreviation": "CdGiGcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0767281724990605,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8711832512252522,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.531024037000643
  },
  {
    "length": 4,
    "abbreviation": "CdGiGcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.662987525298311,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.341846315928172,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5438044674311873
  },
  {
    "length": 4,
    "abbreviation": "CdGiGcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6770213177264153,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.354403617685231,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.54436249341344
  },
  {
    "length": 4,
    "abbreviation": "CdGiGdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.167318565952015,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.579591171874475,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.579591171874475
  },
  {
    "length": 4,
    "abbreviation": "CdGiGdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.166606616201263,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4728904065306423,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.527024316248619
  },
  {
    "length": 4,
    "abbreviation": "CdGiGdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4534889608039525,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5510366290805355,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5275513893718604
  },
  {
    "length": 4,
    "abbreviation": "CdGiGdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7919112628491587,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4586974070830805,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.549641459632957
  },
  {
    "length": 4,
    "abbreviation": "CdGiGeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.879019380897769,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7491864178634158,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7491864178634158
  },
  {
    "length": 4,
    "abbreviation": "CdGiGiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4628411469532523,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.168023506367959,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5374804681054406
  },
  {
    "length": 4,
    "abbreviation": "CdGiGiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.049100499752503,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5675071986915134,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5675071986915134
  },
  {
    "length": 4,
    "abbreviation": "CdGiGiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.0631342921806075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5687916017966455,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5687916017966455
  },
  {
    "length": 4,
    "abbreviation": "CdGiGr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.54454260827639,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.237697965773471,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5397269210133344
  },
  {
    "length": 4,
    "abbreviation": "CdGiGr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.13080196107564,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.575539340937186,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.575539340937186
  },
  {
    "length": 4,
    "abbreviation": "CdGiGr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.144835753503745,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5770607713327327,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5770607713327327
  },
  {
    "length": 4,
    "abbreviation": "CdGiGuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.148249678301453,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.577437551621603,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.577437551621603
  },
  {
    "length": 4,
    "abbreviation": "CdGiGuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1116383774810172,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4618758386243504,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5269573165398276
  },
  {
    "length": 4,
    "abbreviation": "CdGiGuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.398520722083706,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5330829331459113,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5274218327952265
  },
  {
    "length": 4,
    "abbreviation": "CdGiGuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.805945055277263,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4716034690192403,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.550382172348035
  },
  {
    "length": 4,
    "abbreviation": "CdGpBPpGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpBP",
      "BPpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpBP",
      "GpBP",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.268589760372188,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.816954025925181,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.816954025925181
  },
  {
    "length": 4,
    "abbreviation": "CdGpBPpGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpBP",
      "BPpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpBP",
      "GpBP",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.854849113171438,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.869657636027823,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.869657636027823
  },
  {
    "length": 4,
    "abbreviation": "CdGpBPpGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpBP",
      "BPpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpBP",
      "GpBP",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.868882905599543,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8718525607096614,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8718525607096614
  },
  {
    "length": 4,
    "abbreviation": "CdGpCCpGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpCC",
      "CCpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpCC",
      "GpCC",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4191909478942364,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.057824729050066,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.057824729050066
  },
  {
    "length": 4,
    "abbreviation": "CdGpCCpGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpCC",
      "CCpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpCC",
      "GpCC",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.005450300693487,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3124049778052758,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3124049778052758
  },
  {
    "length": 4,
    "abbreviation": "CdGpCCpGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpCC",
      "CCpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpCC",
      "GpCC",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.019484093121592,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3208628601788863,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3208628601788863
  },
  {
    "length": 4,
    "abbreviation": "CdGpMFpGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpMF",
      "MFpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpMF",
      "GpMF",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.344697638026597,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.070983943137687,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1111652133211543
  },
  {
    "length": 4,
    "abbreviation": "CdGpMFpGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpMF",
      "MFpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpMF",
      "GpMF",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9309569908258473,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2723462104877723,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2723462104877723
  },
  {
    "length": 4,
    "abbreviation": "CdGpMFpGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpMF",
      "MFpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpMF",
      "GpMF",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9449907832539517,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2782755653680904,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2782755653680904
  },
  {
    "length": 4,
    "abbreviation": "CdGpPWpGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpPW",
      "PWpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpPW",
      "GpPW",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4043389476172883,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.066017535763792,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.066017535763792
  },
  {
    "length": 4,
    "abbreviation": "CdGpPWpGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpPW",
      "PWpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpPW",
      "GpPW",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9905983004165386,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2996619451002953,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2996619451002953
  },
  {
    "length": 4,
    "abbreviation": "CdGpPWpGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpPW",
      "PWpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpPW",
      "GpPW",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.004632092844643,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3076005680954053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3076005680954053
  },
  {
    "length": 4,
    "abbreviation": "CdGr>G<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6262440695995277,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3091762744185456,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6191819294285783
  },
  {
    "length": 4,
    "abbreviation": "CdGr>G<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.212503422398778,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.649208660014651,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.649208660014651
  },
  {
    "length": 4,
    "abbreviation": "CdGr>G<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.226537214826883,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.650493063119783,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.650493063119783
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.287353371373046,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.025679544735927,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.613246639131834
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.718541670043111,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4096189554707381,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.608299912948508
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0054240146458002,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4435575267980965,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6084290431603088
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.158429633822198,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9287289979727111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6119462918179916
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7446889866214486,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4155247123728607,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6225804032477997
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.758722779049553,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4283127372640307,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.623045908680867
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.249020027275153,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6526307962586184,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6526307962586184
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.248308077524401,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4914246547204504,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.608629130319315
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5351904221270902,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5806257868620928,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.609065959042825
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8736127241722964,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.5342818643519314,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6274545163911145
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.960720842220907,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7999294350751267,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7999294350751267
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.54454260827639,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.237697965773471,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6173118749441
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.13080196107564,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6424395377961734,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6424395377961734
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.144835753503745,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6435206498247936,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6435206498247936
  },
  {
    "length": 4,
    "abbreviation": "CdGr>Gr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6262440695995277,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3091762744185456,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6191819294285783
  },
  {
    "length": 4,
    "abbreviation": "CdGr>Gr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.212503422398778,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.649208660014651,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.649208660014651
  },
  {
    "length": 4,
    "abbreviation": "CdGr>Gr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.226537214826883,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.650493063119783,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.650493063119783
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.229951139624591,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6508112521350067,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6508112521350067
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.193339838804155,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4786600997169612,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6085736086695634
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.480222183406844,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.560328912678981,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6089585764693948
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.887646516600401,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.547368262553718,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6280738112402067
  },
  {
    "length": 4,
    "abbreviation": "CdGrPBrGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GrPB",
      "PBrG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "PBrG",
      "PBrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.426391466470519,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6770757962430953,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6770757962430953
  },
  {
    "length": 4,
    "abbreviation": "CdGrPBrGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GrPB",
      "PBrG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "PBrG",
      "PBrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.012650819269769,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.820370045647464,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.820370045647464
  },
  {
    "length": 4,
    "abbreviation": "CdGrPBrGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GrPB",
      "PBrG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "PBrG",
      "PBrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.026684611697874,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.82574804304144,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.82574804304144
  },
  {
    "length": 4,
    "abbreviation": "CdGuAdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.225110533150102,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4196787999125515,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4196787999125515
  },
  {
    "length": 4,
    "abbreviation": "CdGuAdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.811369885949352,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8455680428187455,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8455680428187455
  },
  {
    "length": 4,
    "abbreviation": "CdGuAdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.825403678377457,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.857437501405015,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.857437501405015
  },
  {
    "length": 4,
    "abbreviation": "CdGuAeGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.936811348095856,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.953633352911655,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.953633352911655
  },
  {
    "length": 4,
    "abbreviation": "CdGuAeGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.523070700895106,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4987932403706523,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4987932403706523
  },
  {
    "length": 4,
    "abbreviation": "CdGuAeGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.537104493323211,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5123470150211333,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5123470150211333
  },
  {
    "length": 4,
    "abbreviation": "CdGuAlDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.891060441398109,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2566766161190546,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2566766161190546
  },
  {
    "length": 4,
    "abbreviation": "CdGuAuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.206041645499539,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4086603221808645,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4086603221808645
  },
  {
    "length": 4,
    "abbreviation": "CdGuAuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.792300998298789,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8295361272790664,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8295361272790664
  },
  {
    "length": 4,
    "abbreviation": "CdGuAuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.806334790726894,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8413239860103006,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8413239860103006
  },
  {
    "length": 4,
    "abbreviation": "CdGuCbGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1756447418493536,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4748099564747297,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6029199039518771
  },
  {
    "length": 4,
    "abbreviation": "CdGuCbGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.761904094648604,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.68211607007945,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7160259474392627
  },
  {
    "length": 4,
    "abbreviation": "CdGuCbGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7759378870767084,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6893638996162423,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7204185694423795
  },
  {
    "length": 4,
    "abbreviation": "CdGuCdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.705411149330644,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6540863031452495,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6993113648328604
  },
  {
    "length": 4,
    "abbreviation": "CdGuCdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2916705021298944,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9562617519291858,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9562617519291858
  },
  {
    "length": 4,
    "abbreviation": "CdGuCdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.305704294557999,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9647768196771767,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9647768196771767
  },
  {
    "length": 4,
    "abbreviation": "CdGuCpDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8544491405776733,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.2291639941008048,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5786158813697329
  },
  {
    "length": 4,
    "abbreviation": "CdGuCrCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8774551055600173,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4259719061077334,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5798559345416738
  },
  {
    "length": 4,
    "abbreviation": "CdGuCrCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1643374501627064,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4724133993265802,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6017561616990514
  },
  {
    "length": 4,
    "abbreviation": "CdGuCtDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.141331485180362,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.404733927367326,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5994708539155766
  },
  {
    "length": 4,
    "abbreviation": "CdGuCuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6504429106103977,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.628572517747889,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6844777833077706
  },
  {
    "length": 4,
    "abbreviation": "CdGuCuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.236702263409648,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9239612349396469,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9239612349396469
  },
  {
    "length": 4,
    "abbreviation": "CdGuCuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2507360558377525,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9320472693643815,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9320472693643815
  },
  {
    "length": 4,
    "abbreviation": "CdGuDaGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.495061534757115,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0485711697823143,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0485711697823143
  },
  {
    "length": 4,
    "abbreviation": "CdGuDaGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.081320887556365,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.432144873738692,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.432144873738692
  },
  {
    "length": 4,
    "abbreviation": "CdGuDaGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.09535467998447,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4432945634118806,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4432945634118806
  },
  {
    "length": 4,
    "abbreviation": "CdGuDdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.081320887556365,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.432144873738692,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.432144873738692
  },
  {
    "length": 4,
    "abbreviation": "CdGuDdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6675802403556155,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.94567700165479,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.94567700165479
  },
  {
    "length": 4,
    "abbreviation": "CdGuDdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.68161403278372,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9588287743867756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9588287743867756
  },
  {
    "length": 4,
    "abbreviation": "CdGuDlAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.122678098907229,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.465211833915416,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.465211833915416
  },
  {
    "length": 4,
    "abbreviation": "CdGuDpCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6050542321554986,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4008575629058173,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.75602031860232
  },
  {
    "length": 4,
    "abbreviation": "CdGuDpCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8919365767581877,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.427744088461679,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7610898979474765
  },
  {
    "length": 4,
    "abbreviation": "CdGuDpSpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.024245307016596,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3875839997820547,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3875839997820547
  },
  {
    "length": 4,
    "abbreviation": "CdGuDrDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5487558183739196,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.076061941838021,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.076061941838021
  },
  {
    "length": 4,
    "abbreviation": "CdGuDtCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.891936576758188,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.427744088461679,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7610898979474765
  },
  {
    "length": 4,
    "abbreviation": "CdGuDtCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.178818921360877,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4754915909136272,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7707390343233524
  },
  {
    "length": 4,
    "abbreviation": "CdGuDuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.09535467998447,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4432945634118806,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4432945634118806
  },
  {
    "length": 4,
    "abbreviation": "CdGuDuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.68161403278372,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9588287743867756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9588287743867756
  },
  {
    "length": 4,
    "abbreviation": "CdGuDuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.695647825211825,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9720068829416197,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9720068829416197
  },
  {
    "length": 4,
    "abbreviation": "CpDaG<rGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3826970790032704,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.5260619852573531,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5260619852573531
  },
  {
    "length": 4,
    "abbreviation": "CpDaG<rGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.968956431802521,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.801843250536962,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.801843250536962
  },
  {
    "length": 4,
    "abbreviation": "CpDaG<rGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.982990224230625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8108014824410659,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8108014824410659
  },
  {
    "length": 4,
    "abbreviation": "CpDaGaDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0438063807767892,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.3400662932290701,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4460834609809146
  },
  {
    "length": 4,
    "abbreviation": "CpDaGbCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.4749946794468538,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.6004660368915704,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3670267130905676
  },
  {
    "length": 4,
    "abbreviation": "CpDaGbCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7618770240495429,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.8311863746148603,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3692718487019098
  },
  {
    "length": 4,
    "abbreviation": "CpDaGcGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9148826432259416,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.426571910465085,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.426571910465085
  },
  {
    "length": 4,
    "abbreviation": "CpDaGcGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5011419960251917,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.5664057294608795,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5664057294608795
  },
  {
    "length": 4,
    "abbreviation": "CpDaGcGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.515175788453296,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.5716743295905629,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5716743295905629
  },
  {
    "length": 4,
    "abbreviation": "CpDaGdAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0054730366788958,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8253698150106832,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8253698150106832
  },
  {
    "length": 4,
    "abbreviation": "CpDaGdCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.004761086928144,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.0457230963775777,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3727292247964997
  },
  {
    "length": 4,
    "abbreviation": "CpDaGdCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2916434315308332,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.3132843403073824,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3801884645714961
  },
  {
    "length": 4,
    "abbreviation": "CpDaGdDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6300657335760396,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6188870481983395,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6188870481983395
  },
  {
    "length": 4,
    "abbreviation": "CpDaGeAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7171738516246497,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.395061562429665,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.395061562429665
  },
  {
    "length": 4,
    "abbreviation": "CpDaGiGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.300995617680133,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.5023009215648238,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5023009215648238
  },
  {
    "length": 4,
    "abbreviation": "CpDaGiGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8872549704793835,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.751805682044402,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.751805682044402
  },
  {
    "length": 4,
    "abbreviation": "CpDaGiGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.901288762907488,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.760140025381858,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.760140025381858
  },
  {
    "length": 4,
    "abbreviation": "CpDaGr>GaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3826970790032704,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.5260619852573531,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5260619852573531
  },
  {
    "length": 4,
    "abbreviation": "CpDaGr>GdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.968956431802521,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.801843250536962,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.801843250536962
  },
  {
    "length": 4,
    "abbreviation": "CpDaGr>GuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.982990224230625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8108014824410659,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8108014824410659
  },
  {
    "length": 4,
    "abbreviation": "CpDaGuAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.986404149028333,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8129964994840782,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8129964994840782
  },
  {
    "length": 4,
    "abbreviation": "CpDaGuCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.9497928482078977,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.9959973620551621,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3717724432067875
  },
  {
    "length": 4,
    "abbreviation": "CpDaGuCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2366751928105868,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.261155204424965,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.3783659603398082
  },
  {
    "length": 4,
    "abbreviation": "CpDaGuDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.644099526004144,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6251623295407949,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6251623295407949
  },
  {
    "length": 4,
    "abbreviation": "CpDdG<rGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.968956431802521,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9988250994720647,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9988250994720647
  },
  {
    "length": 4,
    "abbreviation": "CpDdG<rGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.555215784601771,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1123213380566037,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1123213380566037
  },
  {
    "length": 4,
    "abbreviation": "CpDdG<rGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5692495770298756,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1167271530727207,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1167271530727207
  },
  {
    "length": 4,
    "abbreviation": "CpDdGaDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6300657335760396,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.790627054559474,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9735069411281665
  },
  {
    "length": 4,
    "abbreviation": "CpDdGbCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0612540322461042,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.0974217357525158,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9515008379210246
  },
  {
    "length": 4,
    "abbreviation": "CpDdGbCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3481363768487933,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.3671946673366437,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.952086434692651
  },
  {
    "length": 4,
    "abbreviation": "CpDdGcGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5011419960251917,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9678053413027328,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9678053413027328
  },
  {
    "length": 4,
    "abbreviation": "CpDdGcGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.087401348824442,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0128312632643355,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0128312632643355
  },
  {
    "length": 4,
    "abbreviation": "CpDdGcGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1014351412525465,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.014723433640769,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.014723433640769
  },
  {
    "length": 4,
    "abbreviation": "CpDdGdAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.591732389478146,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.123990751794516,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.123990751794516
  },
  {
    "length": 4,
    "abbreviation": "CpDdGdCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5910204397273946,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.6020169282660806,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9529926026703106
  },
  {
    "length": 4,
    "abbreviation": "CpDdGdCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8779027843300837,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.8836178452338033,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9549658392418192
  },
  {
    "length": 4,
    "abbreviation": "CpDdGdDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.21632508637529,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.032342813780165,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.032342813780165
  },
  {
    "length": 4,
    "abbreviation": "CpDdGeAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.3034332044239,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.497620364278623,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.497620364278623
  },
  {
    "length": 4,
    "abbreviation": "CpDdGiGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8872549704793835,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9909691541911545,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9909691541911545
  },
  {
    "length": 4,
    "abbreviation": "CpDdGiGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.473514323278634,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.088560274364074,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.088560274364074
  },
  {
    "length": 4,
    "abbreviation": "CpDdGiGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4875481157067383,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.092418256496304,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.092418256496304
  },
  {
    "length": 4,
    "abbreviation": "CpDdGr>GaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.968956431802521,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9988250994720647,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9988250994720647
  },
  {
    "length": 4,
    "abbreviation": "CpDdGr>GdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.555215784601771,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1123213380566037,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1123213380566037
  },
  {
    "length": 4,
    "abbreviation": "CpDdGr>GuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5692495770298756,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1167271530727207,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1167271530727207
  },
  {
    "length": 4,
    "abbreviation": "CpDdGuAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5726635018275834,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1178137457830655,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1178137457830655
  },
  {
    "length": 4,
    "abbreviation": "CpDdGuCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5360522010071478,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.5485113291729458,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9527413001903504
  },
  {
    "length": 4,
    "abbreviation": "CpDdGuCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.822934545609837,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.829415000754788,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9544814188406932
  },
  {
    "length": 4,
    "abbreviation": "CpDdGuDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2303588788033943,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.034775588529597,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.034775588529597
  },
  {
    "length": 4,
    "abbreviation": "CpDlAdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0054730366788958,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.20380467605307,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.20380467605307
  },
  {
    "length": 4,
    "abbreviation": "CpDlAdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.591732389478146,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.776562815930362,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.776562815930362
  },
  {
    "length": 4,
    "abbreviation": "CpDlAdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6057661819062505,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7904439619522514,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7904439619522514
  },
  {
    "length": 4,
    "abbreviation": "CpDlAeGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7171738516246497,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9007985066836524,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9007985066836524
  },
  {
    "length": 4,
    "abbreviation": "CpDlAeGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.3034332044239,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.484378785629446,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.484378785629446
  },
  {
    "length": 4,
    "abbreviation": "CpDlAeGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.317466996852005,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4983826685509993,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4983826685509993
  },
  {
    "length": 4,
    "abbreviation": "CpDlAlDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.671422944926903,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.8268902127939421,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8900544079977193
  },
  {
    "length": 4,
    "abbreviation": "CpDlAuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.986404149028333,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.185540580284332,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.185540580284332
  },
  {
    "length": 4,
    "abbreviation": "CpDlAuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5726635018275834,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.757709315636724,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.757709315636724
  },
  {
    "length": 4,
    "abbreviation": "CpDlAuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.586697294255688,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.771583687820248,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.771583687820248
  },
  {
    "length": 4,
    "abbreviation": "CpDpCbGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.4749946794468538,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.6004660368915704,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6891871193599659
  },
  {
    "length": 4,
    "abbreviation": "CpDpCbGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.061254032246104,
    "optimal_join_index": 3,
    "optimal_join_complexity": 0.862016090763098,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.225620844192777
  },
  {
    "length": 4,
    "abbreviation": "CpDpCbGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0752878246742086,
    "optimal_join_index": 3,
    "optimal_join_complexity": 0.8665478670346206,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.239066650475093
  },
  {
    "length": 4,
    "abbreviation": "CpDpCdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.004761086928144,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.0457230963775777,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1716874424286228
  },
  {
    "length": 4,
    "abbreviation": "CpDpCdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5910204397273944,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.2810378128467539,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7421654293280764
  },
  {
    "length": 4,
    "abbreviation": "CpDpCdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6050542321554988,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.282770212586018,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.75602031860232
  },
  {
    "length": 4,
    "abbreviation": "CpDpCpDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.1537990781751729,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.38470246659900903,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.43253868043494553
  },
  {
    "length": 4,
    "abbreviation": "CpDpCrCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.176805043157517,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.3983684198943664,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.44958330724511425
  },
  {
    "length": 4,
    "abbreviation": "CpDpCrCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.46368738776020607,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.592023748868094,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6795529107577436
  },
  {
    "length": 4,
    "abbreviation": "CpDpCtDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.440681422777862,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.5750207449730972,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6600673847915243
  },
  {
    "length": 4,
    "abbreviation": "CpDpCuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.9497928482078977,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.9959973620551621,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1195330966512007
  },
  {
    "length": 4,
    "abbreviation": "CpDpCuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.536052201007148,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.233143294459445,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.68795552031483
  },
  {
    "length": 4,
    "abbreviation": "CpDpCuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5500859934352524,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.2350772290875789,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.701786619253128
  },
  {
    "length": 4,
    "abbreviation": "CpDpSpDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - presents - symptom",
      "disease - presents - symptom",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpS",
      "SpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DpS",
      "DpS",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PRESENTS_DpS]-(n2)-[:PRESENTS_DpS]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5729901530362693,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.7413120996722296,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8255112396764626
  },
  {
    "length": 4,
    "abbreviation": "CpDrDaGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0438063807767892,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7598304071690676,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7598304071690676
  },
  {
    "length": 4,
    "abbreviation": "CpDrDaGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6300657335760396,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.2691901160397365,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3348040025057832
  },
  {
    "length": 4,
    "abbreviation": "CpDrDaGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.644099526004144,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.2693684660407976,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.348710527049229
  },
  {
    "length": 4,
    "abbreviation": "CpDrDdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6300657335760396,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3348040025057832,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3348040025057832
  },
  {
    "length": 4,
    "abbreviation": "CpDrDdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.21632508637529,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.8514072547962797,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9180888629583337
  },
  {
    "length": 4,
    "abbreviation": "CpDrDdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2303588788033943,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.851453933825537,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9320894363567893
  },
  {
    "length": 4,
    "abbreviation": "CpDrDlAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6714229449269036,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.7876937708942535,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.375797552887228
  },
  {
    "length": 4,
    "abbreviation": "CpDrDpCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.1537990781751729,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.38470246659900903,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.43253868043494553
  },
  {
    "length": 4,
    "abbreviation": "CpDrDpCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.440681422777862,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.5285061114519375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.5285061114519375
  },
  {
    "length": 4,
    "abbreviation": "CpDrDpSpD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5729901530362693,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.7518550553597103,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2782901135182234
  },
  {
    "length": 4,
    "abbreviation": "CpDrDrDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n1 <> n4 AND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0975006643935936,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.3750660631153215,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8117720810012856
  },
  {
    "length": 4,
    "abbreviation": "CpDrDtCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.44068142277786193,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.5285061114519375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.5285061114519375
  },
  {
    "length": 4,
    "abbreviation": "CpDrDtCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7275637673805511,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.6695840002690335,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6695840002690335
  },
  {
    "length": 4,
    "abbreviation": "CpDrDuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.644099526004144,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.348710527049229,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.348710527049229
  },
  {
    "length": 4,
    "abbreviation": "CpDrDuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2303588788033943,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.8653958476898254,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9320894363567893
  },
  {
    "length": 4,
    "abbreviation": "CpDrDuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2443926712314988,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.865441047224384,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9460910636155715
  },
  {
    "length": 4,
    "abbreviation": "CpDtCbGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7618770240495428,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7449280073409322,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7449280073409322
  },
  {
    "length": 4,
    "abbreviation": "CpDtCbGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.348136376848793,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.0760590097085116,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2425798947946447
  },
  {
    "length": 4,
    "abbreviation": "CpDtCbGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3621701692768975,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.0788330046507528,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2555183597617687
  },
  {
    "length": 4,
    "abbreviation": "CpDtCdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2916434315308332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1908401643051254,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1908401643051254
  },
  {
    "length": 4,
    "abbreviation": "CpDtCdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8779027843300833,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.5415850560041542,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7473983599494018
  },
  {
    "length": 4,
    "abbreviation": "CpDtCdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.891936576758188,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.5425367370656657,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7610898979474765
  },
  {
    "length": 4,
    "abbreviation": "CpDtCpDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.44068142277786193,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.5285061114519375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.5285061114519375
  },
  {
    "length": 4,
    "abbreviation": "CpDtCrCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.4636873877602061,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.5422241860356918,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.5422241860356918
  },
  {
    "length": 4,
    "abbreviation": "CpDtCrCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7505697323628953,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7364656518478034,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7364656518478034
  },
  {
    "length": 4,
    "abbreviation": "CpDtCtDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7275637673805511,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7194210250376346,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7194210250376346
  },
  {
    "length": 4,
    "abbreviation": "CpDtCuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2366751928105868,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.141070009245414,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.141070009245414
  },
  {
    "length": 4,
    "abbreviation": "CpDtCuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.822934545609837,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.4905134773105906,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6938794330888143
  },
  {
    "length": 4,
    "abbreviation": "CpDtCuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8369683380379416,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.4915837727513266,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7075260655405304
  },
  {
    "length": 4,
    "abbreviation": "CpDuG<rGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.982990224230625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.011412929824915,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.011412929824915
  },
  {
    "length": 4,
    "abbreviation": "CpDuG<rGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5692495770298756,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1220463951056696,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1220463951056696
  },
  {
    "length": 4,
    "abbreviation": "CpDuG<rGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.58328336945798,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.126355130484708,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.126355130484708
  },
  {
    "length": 4,
    "abbreviation": "CpDuGaDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.644099526004144,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.8028844208218118,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9868389350587727
  },
  {
    "length": 4,
    "abbreviation": "CpDuGbCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0752878246742086,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.110350667228104,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.965514720593076
  },
  {
    "length": 4,
    "abbreviation": "CpDuGbCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3621701692768977,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.3806351534104149,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9660817349877553
  },
  {
    "length": 4,
    "abbreviation": "CpDuGcGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5151757884532957,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9813108057870525,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9813108057870525
  },
  {
    "length": 4,
    "abbreviation": "CpDuGcGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.101435141252546,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0250251629904077,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0250251629904077
  },
  {
    "length": 4,
    "abbreviation": "CpDuGcGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1154689336806505,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.02686505569244,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.02686505569244
  },
  {
    "length": 4,
    "abbreviation": "CpDuGdAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.60576618190625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1334607682552997,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1334607682552997
  },
  {
    "length": 4,
    "abbreviation": "CpDuGdCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.605054232155499,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.6157053123601377,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.966959195879379
  },
  {
    "length": 4,
    "abbreviation": "CpDuGdCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8919365767581882,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.8974710660457696,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.96887012131657
  },
  {
    "length": 4,
    "abbreviation": "CpDuGdDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2303588788033943,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0440081314457847,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0440081314457847
  },
  {
    "length": 4,
    "abbreviation": "CpDuGeAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.317466996852004,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.501651686508819,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.501651686508819
  },
  {
    "length": 4,
    "abbreviation": "CpDuGiGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9012887629074875,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.003783400478246,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.003783400478246
  },
  {
    "length": 4,
    "abbreviation": "CpDuGiGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.487548115706738,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.098825817721114,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.098825817721114
  },
  {
    "length": 4,
    "abbreviation": "CpDuGiGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5015819081348423,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1025940667921788,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1025940667921788
  },
  {
    "length": 4,
    "abbreviation": "CpDuGr>GaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.982990224230625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.011412929824915,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.011412929824915
  },
  {
    "length": 4,
    "abbreviation": "CpDuGr>GdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5692495770298756,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1220463951056696,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1220463951056696
  },
  {
    "length": 4,
    "abbreviation": "CpDuGr>GuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.58328336945798,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.126355130484708,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.126355130484708
  },
  {
    "length": 4,
    "abbreviation": "CpDuGuAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5866972942556883,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.12741792844443,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.12741792844443
  },
  {
    "length": 4,
    "abbreviation": "CpDuGuCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5500859934352522,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.5621544057219845,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.96671584876322
  },
  {
    "length": 4,
    "abbreviation": "CpDuGuCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8369683380379414,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.8432442126370077,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.968400972626101
  },
  {
    "length": 4,
    "abbreviation": "CpDuGuDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2443926712314988,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0463766062082693,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0463766062082693
  },
  {
    "length": 4,
    "abbreviation": "CrCbG<rGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7805929288741,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8344383726454592,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8344383726454592
  },
  {
    "length": 4,
    "abbreviation": "CrCbG<rGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.36685228167335,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9916173061132136,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9916173061132136
  },
  {
    "length": 4,
    "abbreviation": "CrCbG<rGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3808860741014546,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.99742532227377,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.99742532227377
  },
  {
    "length": 4,
    "abbreviation": "CrCbGaDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4417022306476186,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.617418547995352,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7969559470847771
  },
  {
    "length": 4,
    "abbreviation": "CrCbGbCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.8728905293176832,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.9275041359852554,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7634771841957089
  },
  {
    "length": 4,
    "abbreviation": "CrCbGbCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.1597728739203723,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0037491354168762,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7643797186984473
  },
  {
    "length": 4,
    "abbreviation": "CrCbGcGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3127784930967703,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5177612269340641,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7883660509124302
  },
  {
    "length": 4,
    "abbreviation": "CrCbGcGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8990378458960206,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8547403024726887,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8547403024726887
  },
  {
    "length": 4,
    "abbreviation": "CrCbGcGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.913071638324125,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8574607271520027,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8574607271520027
  },
  {
    "length": 4,
    "abbreviation": "CrCbGdAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4033688865497247,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.00696018363132,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.00696018363132
  },
  {
    "length": 4,
    "abbreviation": "CrCbGdCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4026569367989736,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0562173757543727,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7657750288303982
  },
  {
    "length": 4,
    "abbreviation": "CrCbGdCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6895392814016628,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.152650954884255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.768807986578611
  },
  {
    "length": 4,
    "abbreviation": "CrCbGdDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.027961583446869,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8825499834128143,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8825499834128143
  },
  {
    "length": 4,
    "abbreviation": "CrCbGeAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.115069701495479,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4518980445050187,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4518980445050187
  },
  {
    "length": 4,
    "abbreviation": "CrCbGiGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.698891467550962,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8229195039002306,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8229195039002306
  },
  {
    "length": 4,
    "abbreviation": "CrCbGiGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2851508203502124,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9599598415596236,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9599598415596236
  },
  {
    "length": 4,
    "abbreviation": "CrCbGiGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.299184612778317,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9651394708154306,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9651394708154306
  },
  {
    "length": 4,
    "abbreviation": "CrCbGr>GaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7805929288741,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8344383726454592,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8344383726454592
  },
  {
    "length": 4,
    "abbreviation": "CrCbGr>GdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.36685228167335,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9916173061132136,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9916173061132136
  },
  {
    "length": 4,
    "abbreviation": "CrCbGr>GuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3808860741014546,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.99742532227377,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.99742532227377
  },
  {
    "length": 4,
    "abbreviation": "CrCbGuAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.384299998899163,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9988548647372577,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9988548647372577
  },
  {
    "length": 4,
    "abbreviation": "CrCbGuCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.347688698078727,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0422796435183048,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7653882327301686
  },
  {
    "length": 4,
    "abbreviation": "CrCbGuCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6345710426814162,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1308463952403327,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7680640944164057
  },
  {
    "length": 4,
    "abbreviation": "CrCbGuDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0419953758749734,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8859807814800118,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8859807814800118
  },
  {
    "length": 4,
    "abbreviation": "CrCcSEcCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CcSE",
      "SEcC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CcSE",
      "CcSE",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:CAUSES_CcSE]-(n2)-[:CAUSES_CcSE]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.658618302527074,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7431113547522714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.877583078822951
  },
  {
    "length": 4,
    "abbreviation": "CrCcSEcCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CcSE",
      "SEcC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CcSE",
      "CcSE",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:CAUSES_CcSE]-(n2)-[:CAUSES_CcSE]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9455006471297636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.880851584255759,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.880851584255759
  },
  {
    "length": 4,
    "abbreviation": "CrCdG<rGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.31035933635539,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3147826278610726,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3147826278610726
  },
  {
    "length": 4,
    "abbreviation": "CrCdG<rGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.89661868915464,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3733170492728393,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3733170492728393
  },
  {
    "length": 4,
    "abbreviation": "CrCdG<rGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9106524815827446,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.37573821307923,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.37573821307923
  },
  {
    "length": 4,
    "abbreviation": "CrCdGaDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9714686381289086,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.080601846659408,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3027354121974173
  },
  {
    "length": 4,
    "abbreviation": "CrCdGbCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4026569367989736,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0562173757543727,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.292562753253645
  },
  {
    "length": 4,
    "abbreviation": "CrCdGbCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6895392814016628,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.152650954884255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2928298668693685
  },
  {
    "length": 4,
    "abbreviation": "CrCdGcGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8425449005780608,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9619758646820968,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3000731487332726
  },
  {
    "length": 4,
    "abbreviation": "CrCdGcGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.428804253377311,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3216055068623147,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3216055068623147
  },
  {
    "length": 4,
    "abbreviation": "CrCdGcGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4428380458054155,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3225359013822686,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3225359013822686
  },
  {
    "length": 4,
    "abbreviation": "CrCdGdAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9331352940310156,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3797539773869976,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3797539773869976
  },
  {
    "length": 4,
    "abbreviation": "CrCdGdCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9324233442802636,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.269476516412713,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2932435916769993
  },
  {
    "length": 4,
    "abbreviation": "CrCdGdCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2193056888829528,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4499750443442343,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2941461261797373
  },
  {
    "length": 4,
    "abbreviation": "CrCdGdDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.557727990928159,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3312984210421854,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3312984210421854
  },
  {
    "length": 4,
    "abbreviation": "CrCdGeAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.64483610897677,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.624493130213223,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.624493130213223
  },
  {
    "length": 4,
    "abbreviation": "CrCdGiGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2286578750322525,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3110051123303292,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3110051123303292
  },
  {
    "length": 4,
    "abbreviation": "CrCdGiGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.814917227831503,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.360450526893252,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.360450526893252
  },
  {
    "length": 4,
    "abbreviation": "CrCdGiGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8289510202596073,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3625176503100858,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3625176503100858
  },
  {
    "length": 4,
    "abbreviation": "CrCdGr>GaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.31035933635539,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3147826278610726,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3147826278610726
  },
  {
    "length": 4,
    "abbreviation": "CrCdGr>GdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.89661868915464,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3733170492728393,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3733170492728393
  },
  {
    "length": 4,
    "abbreviation": "CrCdGr>GuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9106524815827446,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.37573821307923,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.37573821307923
  },
  {
    "length": 4,
    "abbreviation": "CrCdGuAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.914066406380453,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3763370377577737,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3763370377577737
  },
  {
    "length": 4,
    "abbreviation": "CrCdGuCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8774551055600173,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.2400751926207232,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.293128808687819
  },
  {
    "length": 4,
    "abbreviation": "CrCdGuCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1643374501627064,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4120471334422198,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.293924352076067
  },
  {
    "length": 4,
    "abbreviation": "CrCdGuDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5717617833562634,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3325223357291445,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3325223357291445
  },
  {
    "length": 4,
    "abbreviation": "CrCpDaGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.066812345759133,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3485423191096868,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7606478119798217
  },
  {
    "length": 4,
    "abbreviation": "CrCpDaGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6530716985583833,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7936495405665767,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3350216549405687
  },
  {
    "length": 4,
    "abbreviation": "CrCpDaGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6671054909864877,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.805823077801091,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.348921322111792
  },
  {
    "length": 4,
    "abbreviation": "CrCpDdGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6530716985583833,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7936495405665767,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3350216549405687
  },
  {
    "length": 4,
    "abbreviation": "CrCpDdGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2393310513576337,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3343587193629154,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.918145690528386
  },
  {
    "length": 4,
    "abbreviation": "CrCpDdGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.253364843785738,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.347857700054009,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9321444612760468
  },
  {
    "length": 4,
    "abbreviation": "CrCpDlAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6944289099092473,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.807413838108685,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.375995605137069
  },
  {
    "length": 4,
    "abbreviation": "CrCpDpCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.176805043157517,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.3983684198943664,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.44958330724511425
  },
  {
    "length": 4,
    "abbreviation": "CrCpDpCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.46368738776020607,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.5422241860356919,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.5422241860356919
  },
  {
    "length": 4,
    "abbreviation": "CrCpDpSpD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5959961180186135,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7446966268876587,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2785380053962525
  },
  {
    "length": 4,
    "abbreviation": "CrCpDrDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.120506629375938,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3828916825614406,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8124974208905034
  },
  {
    "length": 4,
    "abbreviation": "CrCpDtCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.4636873877602061,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.5422241860356918,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.5422241860356918
  },
  {
    "length": 4,
    "abbreviation": "CrCpDtCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7505697323628953,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.6795404527620004,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6795404527620004
  },
  {
    "length": 4,
    "abbreviation": "CrCpDuGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.667105490986488,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.805823077801091,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.348921322111792
  },
  {
    "length": 4,
    "abbreviation": "CrCpDuGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2533648437857385,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.347857700054009,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9321444612760468
  },
  {
    "length": 4,
    "abbreviation": "CrCpDuGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.267398636213843,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3613730581403876,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9461443429338763
  },
  {
    "length": 4,
    "abbreviation": "CrCrCbGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.464708195629963,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6358813898596485,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.869428763406392
  },
  {
    "length": 4,
    "abbreviation": "CrCrCbGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.050967548429213,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.934281296826926,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.934281296826926
  },
  {
    "length": 4,
    "abbreviation": "CrCrCbGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0650013408573176,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.936944072480247,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.936944072480247
  },
  {
    "length": 4,
    "abbreviation": "CrCrCdGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.994474603111253,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9242462930750797,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9242462930750797
  },
  {
    "length": 4,
    "abbreviation": "CrCrCdGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.580733955910503,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0947286594628145,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0947286594628145
  },
  {
    "length": 4,
    "abbreviation": "CrCrCdGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5947677483386076,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.100935613324533,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.100935613324533
  },
  {
    "length": 4,
    "abbreviation": "CrCrCpDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.143512594358282,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3980720280976657,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8564404751616363
  },
  {
    "length": 4,
    "abbreviation": "CrCrCrCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n0 <> n3 AND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.166518559340626,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.41352353705395,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8570949735742777
  },
  {
    "length": 4,
    "abbreviation": "CrCrCrCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n0 <> n3 AND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.453400903943315,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6267828833563842,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8687991398386368
  },
  {
    "length": 4,
    "abbreviation": "CrCrCtDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.430394938960971,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.608415712441242,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.867564965509455
  },
  {
    "length": 4,
    "abbreviation": "CrCrCuGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9395063643910064,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9154703051131765,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9154703051131765
  },
  {
    "length": 4,
    "abbreviation": "CrCrCuGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5257657171902568,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.07148731484006,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.07148731484006
  },
  {
    "length": 4,
    "abbreviation": "CrCrCuGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.539799509618361,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0772598862425204,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0772598862425204
  },
  {
    "length": 4,
    "abbreviation": "CrCtDaGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3536946903618223,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.548655453778214,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7752141157207502
  },
  {
    "length": 4,
    "abbreviation": "CrCtDaGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9399540431610727,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.051350569470647,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3389509342923773
  },
  {
    "length": 4,
    "abbreviation": "CrCtDaGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.953987835589177,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.06435763494445,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3527273760879277
  },
  {
    "length": 4,
    "abbreviation": "CrCtDdGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9399540431610727,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.051350569470647,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3389509342923773
  },
  {
    "length": 4,
    "abbreviation": "CrCtDdGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.526213395960323,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.6130378912013663,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9191752231765715
  },
  {
    "length": 4,
    "abbreviation": "CrCtDdGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5402471883884274,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.6267902376202827,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9331413752148334
  },
  {
    "length": 4,
    "abbreviation": "CrCtDlAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9813112545119367,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.0639489348701345,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3795725756825057
  },
  {
    "length": 4,
    "abbreviation": "CrCtDpCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.4636873877602061,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.592023748868094,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6795529107577436
  },
  {
    "length": 4,
    "abbreviation": "CrCtDpCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7505697323628953,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7364656518478034,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7364656518478034
  },
  {
    "length": 4,
    "abbreviation": "CrCtDpSpD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.882878462621303,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9987811865024303,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2830102406422212
  },
  {
    "length": 4,
    "abbreviation": "CrCtDrDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4073889739786267,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.590247820750426,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.825448666682308
  },
  {
    "length": 4,
    "abbreviation": "CrCtDtCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.750569732362895,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7364656518478034,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7364656518478034
  },
  {
    "length": 4,
    "abbreviation": "CrCtDtCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0374520769655842,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.8291065306383809,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.8291065306383809
  },
  {
    "length": 4,
    "abbreviation": "CrCtDuGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.953987835589177,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.06435763494445,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3527273760879277
  },
  {
    "length": 4,
    "abbreviation": "CrCtDuGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5402471883884274,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.6267902376202827,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9331413752148334
  },
  {
    "length": 4,
    "abbreviation": "CrCtDuGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.554280980816532,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.640551359418593,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9471096680079816
  },
  {
    "length": 4,
    "abbreviation": "CrCuG<rGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.255391097635144,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2627636275491385,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2627636275491385
  },
  {
    "length": 4,
    "abbreviation": "CrCuG<rGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8416504504343942,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3282109213983744,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3282109213983744
  },
  {
    "length": 4,
    "abbreviation": "CrCuG<rGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8556842428624987,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3308962540163565,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3308962540163565
  },
  {
    "length": 4,
    "abbreviation": "CrCuGaDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9165003994086622,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0296828428708507,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2491591940572815
  },
  {
    "length": 4,
    "abbreviation": "CrCuGbCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.347688698078727,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.0422796435183048,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2376330342913864
  },
  {
    "length": 4,
    "abbreviation": "CrCuGbCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6345710426814162,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1308463952403327,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.237936149510423
  },
  {
    "length": 4,
    "abbreviation": "CrCuGcGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7875766618578144,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9123209436052522,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2461461711119135
  },
  {
    "length": 4,
    "abbreviation": "CrCuGcGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3738360146570647,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2704470585595637,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2704470585595637
  },
  {
    "length": 4,
    "abbreviation": "CrCuGcGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.387869807085169,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2714936266358365,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2714936266358365
  },
  {
    "length": 4,
    "abbreviation": "CrCuGdAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8781670553107688,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3353465873065775,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3353465873065775
  },
  {
    "length": 4,
    "abbreviation": "CrCuGdCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8774551055600173,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.2400751926207232,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.238405586621142
  },
  {
    "length": 4,
    "abbreviation": "CrCuGdCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1643374501627064,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4120471334422198,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.239429447932547
  },
  {
    "length": 4,
    "abbreviation": "CrCuGdDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5027597522079126,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2813366630774046,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2813366630774046
  },
  {
    "length": 4,
    "abbreviation": "CrCuGeAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.589867870256523,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.59977579562614,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.59977579562614
  },
  {
    "length": 4,
    "abbreviation": "CrCuGiGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.173689636312006,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2585030702810998,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2585030702810998
  },
  {
    "length": 4,
    "abbreviation": "CrCuGiGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7599489891112565,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.313912786745173,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.313912786745173
  },
  {
    "length": 4,
    "abbreviation": "CrCuGiGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.773982781539361,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3162131024954737,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3162131024954737
  },
  {
    "length": 4,
    "abbreviation": "CrCuGr>GaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.255391097635144,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2627636275491385,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2627636275491385
  },
  {
    "length": 4,
    "abbreviation": "CrCuGr>GdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8416504504343942,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3282109213983744,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3282109213983744
  },
  {
    "length": 4,
    "abbreviation": "CrCuGr>GuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8556842428624987,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3308962540163565,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3308962540163565
  },
  {
    "length": 4,
    "abbreviation": "CrCuGuAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.859098167660207,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.331560163845853,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.331560163845853
  },
  {
    "length": 4,
    "abbreviation": "CrCuGuCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.822486866839771,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.212409492829283,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2382753529567525
  },
  {
    "length": 4,
    "abbreviation": "CrCuGuCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.10936921144246,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3756415246091036,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.239177887459491
  },
  {
    "length": 4,
    "abbreviation": "CrCuGuDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n3 <> n4\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.516793544636017,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.282709561403061,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.282709561403061
  },
  {
    "length": 4,
    "abbreviation": "CtDaG<rGaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.66957942360596,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7423147359217934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7423147359217934
  },
  {
    "length": 4,
    "abbreviation": "CtDaG<rGdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.25583877640521,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9295890911487614,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9295890911487614
  },
  {
    "length": 4,
    "abbreviation": "CtDaG<rGuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2698725688333146,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.936281963494688,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.936281963494688
  },
  {
    "length": 4,
    "abbreviation": "CtDaGaDrD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3306887253794786,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.5433281316592111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6954818492196897
  },
  {
    "length": 4,
    "abbreviation": "CtDaGbCpD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7618770240495429,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.8311863746148603,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6527447565985063
  },
  {
    "length": 4,
    "abbreviation": "CtDaGbCtD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.048759368652232,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.08593878947825,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6539090576932567
  },
  {
    "length": 4,
    "abbreviation": "CtDaGcGaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2017649878286303,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6846025115448786,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6846025115448786
  },
  {
    "length": 4,
    "abbreviation": "CtDaGcGdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7880243406278806,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7672784847868024,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7672784847868024
  },
  {
    "length": 4,
    "abbreviation": "CtDaGcGuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.802058133055985,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7706035170926804,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7706035170926804
  },
  {
    "length": 4,
    "abbreviation": "CtDaGdAlD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2923553812815847,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.947240264431939,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.947240264431939
  },
  {
    "length": 4,
    "abbreviation": "CtDaGdCpD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2916434315308332,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.3132843403073824,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6557076785695468
  },
  {
    "length": 4,
    "abbreviation": "CtDaGdCtD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5785257761335223,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.589839083899098,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6596115693991886
  },
  {
    "length": 4,
    "abbreviation": "CtDaGdDrD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9169480781787285,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8010568193112548,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8010568193112548
  },
  {
    "length": 4,
    "abbreviation": "CtDaGeAlD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.004056196227339,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4313922759659765,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4313922759659765
  },
  {
    "length": 4,
    "abbreviation": "CtDaGiGaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.587877962282822,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7280287514530348,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7280287514530348
  },
  {
    "length": 4,
    "abbreviation": "CtDaGiGdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1741373150820724,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8928602909029622,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8928602909029622
  },
  {
    "length": 4,
    "abbreviation": "CtDaGiGuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.188171107510177,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8988993266122365,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8988993266122365
  },
  {
    "length": 4,
    "abbreviation": "CtDaGr>GaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.66957942360596,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7423147359217934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7423147359217934
  },
  {
    "length": 4,
    "abbreviation": "CtDaGr>GdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.25583877640521,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9295890911487614,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9295890911487614
  },
  {
    "length": 4,
    "abbreviation": "CtDaGr>GuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2698725688333146,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.936281963494688,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.936281963494688
  },
  {
    "length": 4,
    "abbreviation": "CtDaGuAlD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.273286493631023,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9379272157716412,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9379272157716412
  },
  {
    "length": 4,
    "abbreviation": "CtDaGuCpD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2366751928105868,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.261155204424965,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.655209247340462
  },
  {
    "length": 4,
    "abbreviation": "CtDaGuCtD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.523557537413276,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.5363750064669546,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6586547878094766
  },
  {
    "length": 4,
    "abbreviation": "CtDaGuDrD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.930981870606833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8051923897569635,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8051923897569635
  },
  {
    "length": 4,
    "abbreviation": "CtDdG<rGaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.25583877640521,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.263185833678958,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.263185833678958
  },
  {
    "length": 4,
    "abbreviation": "CtDdG<rGdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8420981292044605,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3285740887210435,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3285740887210435
  },
  {
    "length": 4,
    "abbreviation": "CtDdG<rGuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.856131921632565,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.331257183658339,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.331257183658339
  },
  {
    "length": 4,
    "abbreviation": "CtDdGaDrD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9169480781787285,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.0496833751046624,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.249594828543467
  },
  {
    "length": 4,
    "abbreviation": "CtDdGbCpD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3481363768487933,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.3671946673366437,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2380803792589514
  },
  {
    "length": 4,
    "abbreviation": "CtDdGbCtD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6350187214514824,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.6449677704286274,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2383831825237137
  },
  {
    "length": 4,
    "abbreviation": "CtDdGcGaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7880243406278806,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.246584836894808,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.246584836894808
  },
  {
    "length": 4,
    "abbreviation": "CtDdGcGdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.374283693427131,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2708618643441287,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2708618643441287
  },
  {
    "length": 4,
    "abbreviation": "CtDdGcGuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3883174858552354,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2719074344953856,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2719074344953856
  },
  {
    "length": 4,
    "abbreviation": "CtDdGdAlD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.878614734080835,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.335703838803131,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.335703838803131
  },
  {
    "length": 4,
    "abbreviation": "CtDdGdCpD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8779027843300835,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.883617845233803,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2388521369372643
  },
  {
    "length": 4,
    "abbreviation": "CtDdGdCtD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1647851289327726,
    "optimal_join_index": 0,
    "optimal_join_complexity": 2.1677466687158917,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2398749472729995
  },
  {
    "length": 4,
    "abbreviation": "CtDdGdDrD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.503207430977979,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.28174120201894,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.28174120201894
  },
  {
    "length": 4,
    "abbreviation": "CtDdGeAlD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.590315549026589,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5999701643120376,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5999701643120376
  },
  {
    "length": 4,
    "abbreviation": "CtDdGiGaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1741373150820724,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2589294367189234,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2589294367189234
  },
  {
    "length": 4,
    "abbreviation": "CtDdGiGdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7603966678813228,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3142881042522854,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3142881042522854
  },
  {
    "length": 4,
    "abbreviation": "CtDdGiGuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.774430460309427,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3165864381759533,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3165864381759533
  },
  {
    "length": 4,
    "abbreviation": "CtDdGr>GaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.25583877640521,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.263185833678958,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.263185833678958
  },
  {
    "length": 4,
    "abbreviation": "CtDdGr>GdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8420981292044605,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3285740887210435,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3285740887210435
  },
  {
    "length": 4,
    "abbreviation": "CtDdGr>GuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.856131921632565,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.331257183658339,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.331257183658339
  },
  {
    "length": 4,
    "abbreviation": "CtDdGuAlD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.859545846430273,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3319205423816967,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3319205423816967
  },
  {
    "length": 4,
    "abbreviation": "CtDdGuCpD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8229345456098371,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.8294150007547882,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.238722037132975
  },
  {
    "length": 4,
    "abbreviation": "CtDdGuCtD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1098168902125263,
    "optimal_join_index": 0,
    "optimal_join_complexity": 2.113176482241703,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2396236447930393
  },
  {
    "length": 4,
    "abbreviation": "CtDdGuDrD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5172412234060833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.283112824121753,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.283112824121753
  },
  {
    "length": 4,
    "abbreviation": "CtDlAdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2923553812815847,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2202839559456664,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2202839559456664
  },
  {
    "length": 4,
    "abbreviation": "CtDlAdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.878614734080835,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7810318058304975,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7810318058304975
  },
  {
    "length": 4,
    "abbreviation": "CtDlAdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8926485265089394,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.794773068620137,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.794773068620137
  },
  {
    "length": 4,
    "abbreviation": "CtDlAeGaD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.004056196227339,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.904159969241168,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.904159969241168
  },
  {
    "length": 4,
    "abbreviation": "CtDlAeGdD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.590315549026589,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4852581928693445,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4852581928693445
  },
  {
    "length": 4,
    "abbreviation": "CtDlAeGuD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.604349341454694,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4992341988330193,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4992341988330193
  },
  {
    "length": 4,
    "abbreviation": "CtDlAlDrD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.958305289529592,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9233362241603151,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9233362241603151
  },
  {
    "length": 4,
    "abbreviation": "CtDlAuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2732864936310224,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.202713853858974,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.202713853858974
  },
  {
    "length": 4,
    "abbreviation": "CtDlAuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8595458464302728,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.762375523611479,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.762375523611479
  },
  {
    "length": 4,
    "abbreviation": "CtDlAuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.873579638858377,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7761039416736275,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7761039416736275
  },
  {
    "length": 4,
    "abbreviation": "CtDpCbGaD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7618770240495429,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7449280073409322,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7449280073409322
  },
  {
    "length": 4,
    "abbreviation": "CtDpCbGdD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3481363768487933,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.0760590097085119,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2425798947946447
  },
  {
    "length": 4,
    "abbreviation": "CtDpCbGuD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3621701692768977,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.078833004650753,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2555183597617687
  },
  {
    "length": 4,
    "abbreviation": "CtDpCdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2916434315308332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1908401643051254,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1908401643051254
  },
  {
    "length": 4,
    "abbreviation": "CtDpCdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8779027843300833,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.5415850560041542,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7473983599494018
  },
  {
    "length": 4,
    "abbreviation": "CtDpCdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.891936576758188,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.5425367370656657,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7610898979474765
  },
  {
    "length": 4,
    "abbreviation": "CtDpCpDrD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.440681422777862,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.5285061114519375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.5285061114519375
  },
  {
    "length": 4,
    "abbreviation": "CtDpCrCpD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.4636873877602061,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.5422241860356919,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.5422241860356919
  },
  {
    "length": 4,
    "abbreviation": "CtDpCrCtD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7505697323628953,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7364656518478034,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7364656518478034
  },
  {
    "length": 4,
    "abbreviation": "CtDpCtDrD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7275637673805511,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7194210250376346,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7194210250376346
  },
  {
    "length": 4,
    "abbreviation": "CtDpCuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2366751928105868,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.141070009245414,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.141070009245414
  },
  {
    "length": 4,
    "abbreviation": "CtDpCuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.822934545609837,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.4905134773105906,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6938794330888143
  },
  {
    "length": 4,
    "abbreviation": "CtDpCuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8369683380379416,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.4915837727513266,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7075260655405304
  },
  {
    "length": 4,
    "abbreviation": "CtDpSpDrD",
    "edges": [
      "compound - treats - disease",
      "disease - presents - symptom",
      "symptom - presents - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - presents - symptom",
      "disease - presents - symptom",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpS",
      "SpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DpS",
      "DpS",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PRESENTS_DpS]-(n2)-[:PRESENTS_DpS]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8598724976389587,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8613903717004452,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8613903717004452
  },
  {
    "length": 4,
    "abbreviation": "CtDrDaGaD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.330688725379478,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7736826400400314,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7736826400400314
  },
  {
    "length": 4,
    "abbreviation": "CtDrDaGdD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9169480781787285,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.33853328035155,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.33853328035155
  },
  {
    "length": 4,
    "abbreviation": "CtDrDaGuD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.930981870606833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3523227688761126,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3523227688761126
  },
  {
    "length": 4,
    "abbreviation": "CtDrDdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9169480781787285,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.33853328035155,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.33853328035155
  },
  {
    "length": 4,
    "abbreviation": "CtDrDdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.503207430977979,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9190654646261702,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9190654646261702
  },
  {
    "length": 4,
    "abbreviation": "CtDrDdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5172412234060833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.933035090582711,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.933035090582711
  },
  {
    "length": 4,
    "abbreviation": "CtDrDlAlD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.9583052895295925,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.04276623986801,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3791922319273633
  },
  {
    "length": 4,
    "abbreviation": "CtDrDpCpD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.44068142277786193,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.5750207449730971,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6600673847915243
  },
  {
    "length": 4,
    "abbreviation": "CtDrDpCtD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7275637673805511,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7194210250376346,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7194210250376346
  },
  {
    "length": 4,
    "abbreviation": "CtDrDpSpD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8598724976389587,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.009265718753309,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2825351395860354
  },
  {
    "length": 4,
    "abbreviation": "CtDrDrDrD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n1 <> n4 AND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.3843830089962825,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.5854097474588977,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8240847374825564
  },
  {
    "length": 4,
    "abbreviation": "CtDrDtCpD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7275637673805508,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.7194210250376346,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.7194210250376346
  },
  {
    "length": 4,
    "abbreviation": "CtDrDtCtD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.01444611198324,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.8153884560546265,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.8153884560546265
  },
  {
    "length": 4,
    "abbreviation": "CtDrDuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.930981870606833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3523227688761126,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3523227688761126
  },
  {
    "length": 4,
    "abbreviation": "CtDrDuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5172412234060833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.933035090582711,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.933035090582711
  },
  {
    "length": 4,
    "abbreviation": "CtDrDuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5312750158341877,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.947006747837074,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.947006747837074
  },
  {
    "length": 4,
    "abbreviation": "CtDtCbGaD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0487593686522318,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.8359560355491715,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.8359560355491715
  },
  {
    "length": 4,
    "abbreviation": "CtDtCbGdD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6350187214514822,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.2736404431329187,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2736404431329187
  },
  {
    "length": 4,
    "abbreviation": "CtDtCbGuD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6490525138795866,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.2856981493298572,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2856981493298572
  },
  {
    "length": 4,
    "abbreviation": "CtDtCdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.578525776133522,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.2256768560601217,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.2256768560601217
  },
  {
    "length": 4,
    "abbreviation": "CtDtCdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.164785128932772,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7573530248157332,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7573530248157332
  },
  {
    "length": 4,
    "abbreviation": "CtDtCdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1788189213608766,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7707390343233524,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7707390343233524
  },
  {
    "length": 4,
    "abbreviation": "CtDtCpDrD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.7275637673805511,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.6695840002690335,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6695840002690335
  },
  {
    "length": 4,
    "abbreviation": "CtDtCrCpD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.750569732362895,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.6795404527620004,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.6795404527620004
  },
  {
    "length": 4,
    "abbreviation": "CtDtCrCtD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.0374520769655842,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.8291065306383809,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.8291065306383809
  },
  {
    "length": 4,
    "abbreviation": "CtDtCtDrD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.01444611198324,
    "optimal_join_index": 2,
    "optimal_join_complexity": 0.8153884560546265,
    "midpoint_index": 2,
    "midpoint_join_complexity": 0.8153884560546265
  },
  {
    "length": 4,
    "abbreviation": "CtDtCuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5235575374132757,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1799526261197595,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1799526261197595
  },
  {
    "length": 4,
    "abbreviation": "CtDtCuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.109816890212526,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.70512285661133,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.70512285661133
  },
  {
    "length": 4,
    "abbreviation": "CtDtCuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1238506826406303,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.7184260130227065,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7184260130227065
  },
  {
    "length": 4,
    "abbreviation": "CtDuG<rGaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.269872568833314,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2764335467924273,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2764335467924273
  },
  {
    "length": 4,
    "abbreviation": "CtDuG<rGdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8561319216325645,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.339994211679673,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.339994211679673
  },
  {
    "length": 4,
    "abbreviation": "CtDuG<rGuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.870165714060669,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.342607881149148,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.342607881149148
  },
  {
    "length": 4,
    "abbreviation": "CtDuGaDrD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.930981870606833,
    "optimal_join_index": 3,
    "optimal_join_complexity": 2.062739724263075,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.263257120446691
  },
  {
    "length": 4,
    "abbreviation": "CtDuGbCpD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3621701692768977,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.3806351534104149,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2521038801180966
  },
  {
    "length": 4,
    "abbreviation": "CtDuGbCtD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6490525138795868,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.6586886915735002,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.252397065195765
  },
  {
    "length": 4,
    "abbreviation": "CtDuGcGaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.802058133055985,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.260340658683117,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.260340658683117
  },
  {
    "length": 4,
    "abbreviation": "CtDuGcGdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3883174858552354,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.283880929017744,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.283880929017744
  },
  {
    "length": 4,
    "abbreviation": "CtDuGcGuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.40235127828334,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.284895656772233,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.284895656772233
  },
  {
    "length": 4,
    "abbreviation": "CtDuGdAlD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.89264852650894,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.346940394593363,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.346940394593363
  },
  {
    "length": 4,
    "abbreviation": "CtDuGdCpD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.891936576758188,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.8974710660457694,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2528511366368247
  },
  {
    "length": 4,
    "abbreviation": "CtDuGdCtD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.178818921360877,
    "optimal_join_index": 0,
    "optimal_join_complexity": 2.1816866018446963,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.253841540482068
  },
  {
    "length": 4,
    "abbreviation": "CtDuGdDrD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5172412234060833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2944428461378563,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2944428461378563
  },
  {
    "length": 4,
    "abbreviation": "CtDuGeAlD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.604349341454694,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6061207764753953,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6061207764753953
  },
  {
    "length": 4,
    "abbreviation": "CtDuGiGaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.188171107510177,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2723056363032983,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2723056363032983
  },
  {
    "length": 4,
    "abbreviation": "CtDuGiGdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.774430460309427,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.326084994567864,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.326084994567864
  },
  {
    "length": 4,
    "abbreviation": "CtDuGiGuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7884642527375316,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.32832189668039,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.32832189668039
  },
  {
    "length": 4,
    "abbreviation": "CtDuGr>GaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.269872568833314,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2764335467924273,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2764335467924273
  },
  {
    "length": 4,
    "abbreviation": "CtDuGr>GdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8561319216325645,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.339994211679673,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.339994211679673
  },
  {
    "length": 4,
    "abbreviation": "CtDuGr>GuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.870165714060669,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.342607881149148,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.342607881149148
  },
  {
    "length": 4,
    "abbreviation": "CtDuGuAlD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.873579638858377,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.343254139695428,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.343254139695428
  },
  {
    "length": 4,
    "abbreviation": "CtDuGuCpD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8369683380379416,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.8432442126370079,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2527251641856436
  },
  {
    "length": 4,
    "abbreviation": "CtDuGuCtD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1238506826406307,
    "optimal_join_index": 0,
    "optimal_join_complexity": 2.1271038471900505,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.253598193365909
  },
  {
    "length": 4,
    "abbreviation": "CtDuGuDrD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5312750158341877,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2957749944470445,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2957749944470445
  },
  {
    "length": 4,
    "abbreviation": "CuG<rG<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.571275830879281,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3031936589574737,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5656794172893314
  },
  {
    "length": 4,
    "abbreviation": "CuG<rG<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.157535183678531,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.599493206181452,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.599493206181452
  },
  {
    "length": 4,
    "abbreviation": "CuG<rG<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.171568976106636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6009331282919934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6009331282919934
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2323851326527993,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0141138976804305,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5589599379980936
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6635734313228643,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.359710295022228,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5533502932277785
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9504557759255534,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3976065339836488,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.553496837475428
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1034613951019514,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9142217877223153,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5574861577343793
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6897207479012017,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4108485372529262,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.569521479021943
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.703754540329306,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.423772958758613,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.570047439903831
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.194051788554906,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6033285636807997,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6033285636807997
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.193339838804154,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.450502819546053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5537238960654567
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4802221834068434,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5475993059406405,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.554219559633775
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8186444854520496,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.5307290474795185,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5750249820395132
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.90575260350066,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7653908236839353,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7653908236839353
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.489574369556143,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.2306362932180255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5635635931729164
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.0758337223553935,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5918958800515197,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5918958800515197
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.089867514783498,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.593110240750494,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.593110240750494
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.571275830879281,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3031936589574737,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5656794172893314
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.157535183678531,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.599493206181452,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.599493206181452
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.171568976106636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6009331282919934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6009331282919934
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.174982900904344,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.601289764875781,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.601289764875781
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.138371600083908,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.436456416000204,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.553660891599068
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.425253944686597,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5256575481418462,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.554097720322578
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.832678277880154,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.543921323882144,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5757236764876588
  },
  {
    "length": 4,
    "abbreviation": "CuGaDaGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8398001508095136,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7334317622180202,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.832397868475896
  },
  {
    "length": 4,
    "abbreviation": "CuGaDaGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.426059503608764,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.175352475992395,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3553276682239987
  },
  {
    "length": 4,
    "abbreviation": "CuGaDaGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4400932960368684,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1874765348202865,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3686020005342536
  },
  {
    "length": 4,
    "abbreviation": "CuGaDdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.426059503608764,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1753524759923946,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3553276682239987
  },
  {
    "length": 4,
    "abbreviation": "CuGaDdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.012318856408014,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7147852447854266,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.923540708486022
  },
  {
    "length": 4,
    "abbreviation": "CuGaDdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.026352648836119,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7282684060462743,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.937369377699073
  },
  {
    "length": 4,
    "abbreviation": "CuGaDlAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4674167149596276,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.2112317883012302,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.39451182289633
  },
  {
    "length": 4,
    "abbreviation": "CuGaDpCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 0.9497928482078977,
    "optimal_join_index": 0,
    "optimal_join_complexity": 0.9959973620551621,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1195330966512007
  },
  {
    "length": 4,
    "abbreviation": "CuGaDpCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2366751928105868,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.141070009245414,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.141070009245414
  },
  {
    "length": 4,
    "abbreviation": "CuGaDpSpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.368983923068994,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1266130755767776,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.30159079577093
  },
  {
    "length": 4,
    "abbreviation": "CuGaDrDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.8934944344263185,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.7674044106024285,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.876740181666011
  },
  {
    "length": 4,
    "abbreviation": "CuGaDtCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.2366751928105868,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.141070009245414,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.141070009245414
  },
  {
    "length": 4,
    "abbreviation": "CuGaDtCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.523557537413276,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1799526261197595,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1799526261197595
  },
  {
    "length": 4,
    "abbreviation": "CuGaDuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.440093296036869,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.187476534820286,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3686020005342536
  },
  {
    "length": 4,
    "abbreviation": "CuGaDuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.026352648836119,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7282684060462743,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.937369377699073
  },
  {
    "length": 4,
    "abbreviation": "CuGaDuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.040386441264224,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7417684099791444,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9512044769607133
  },
  {
    "length": 4,
    "abbreviation": "CuGbCbGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6458783343680639,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1695449573515702,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1695449573515702
  },
  {
    "length": 4,
    "abbreviation": "CuGbCbGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.232137687167314,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4264953444478956,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4264953444478956
  },
  {
    "length": 4,
    "abbreviation": "CuGbCbGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2461714795954184,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.4350104121958864,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.4350104121958864
  },
  {
    "length": 4,
    "abbreviation": "CuGbCdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1756447418493536,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.39332299300069,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.39332299300069
  },
  {
    "length": 4,
    "abbreviation": "CuGbCdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.761904094648604,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6869415092541977,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8136859952823197
  },
  {
    "length": 4,
    "abbreviation": "CuGbCdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7759378870767084,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6950681315888667,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8254654534215582
  },
  {
    "length": 4,
    "abbreviation": "CuGbCpDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.3246827330963828,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.024947141532809,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1001733152252646
  },
  {
    "length": 4,
    "abbreviation": "CuGbCrCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.347688698078727,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1038941578208514,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1038941578208514
  },
  {
    "length": 4,
    "abbreviation": "CuGbCrCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6345710426814162,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.1663809970336447,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.1663809970336447
  },
  {
    "length": 4,
    "abbreviation": "CuGbCtDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6115650776990722,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.1167639103596247,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.160124921357645
  },
  {
    "length": 4,
    "abbreviation": "CuGbCuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1206765031291077,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.362772048410861,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.362772048410861
  },
  {
    "length": 4,
    "abbreviation": "CuGbCuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.706935855928358,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6561822923640257,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7681556030607715
  },
  {
    "length": 4,
    "abbreviation": "CuGbCuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7209696483564625,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6638721816092854,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7796851693703024
  },
  {
    "length": 4,
    "abbreviation": "CuGcG<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1034613951019514,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9142217877223153,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.121067131865147
  },
  {
    "length": 4,
    "abbreviation": "CuGcG<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6897207479012017,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.20934215399665,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.20934215399665
  },
  {
    "length": 4,
    "abbreviation": "CuGcG<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.703754540329306,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2128694780261426,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2128694780261426
  },
  {
    "length": 4,
    "abbreviation": "CuGcGaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7645706968754706,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6884771621136978,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1020982193841853
  },
  {
    "length": 4,
    "abbreviation": "CuGcGbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.195758995545535,
    "optimal_join_index": 0,
    "optimal_join_complexity": 1.2225842381329495,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0858390064231025
  },
  {
    "length": 4,
    "abbreviation": "CuGcGbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.4826413401482241,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3450492430614023,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0862688776562615
  },
  {
    "length": 4,
    "abbreviation": "CuGcGcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6356469593246223,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6188614373144514,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0978649815120023
  },
  {
    "length": 4,
    "abbreviation": "CuGcGcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2219063121238727,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0057514079649876,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.131678770404123
  },
  {
    "length": 4,
    "abbreviation": "CuGcGcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.235940104551977,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0169601180171877,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1331186925146643
  },
  {
    "length": 4,
    "abbreviation": "CuGcGdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.726237352777577,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.218700272329416,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.218700272329416
  },
  {
    "length": 4,
    "abbreviation": "CuGcGdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7255254030268252,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3661496896743683,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0869343754795704
  },
  {
    "length": 4,
    "abbreviation": "CuGcGdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0124077476295144,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4089661237742792,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0883848127622815
  },
  {
    "length": 4,
    "abbreviation": "CuGcGdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3508300496747205,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1113117401438943,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.146598310953055
  },
  {
    "length": 4,
    "abbreviation": "CuGcGeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.437938167723331,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5402292721903166,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5402292721903166
  },
  {
    "length": 4,
    "abbreviation": "CuGcGiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.021759933778814,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8545808465315248,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1151516688950873
  },
  {
    "length": 4,
    "abbreviation": "CuGcGiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6080192865780645,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1904433717320204,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1904433717320204
  },
  {
    "length": 4,
    "abbreviation": "CuGcGiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.622053079006169,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1934974460541405,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1934974460541405
  },
  {
    "length": 4,
    "abbreviation": "CuGcGr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1034613951019514,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9142217877223153,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.121067131865147
  },
  {
    "length": 4,
    "abbreviation": "CuGcGr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6897207479012017,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.20934215399665,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.20934215399665
  },
  {
    "length": 4,
    "abbreviation": "CuGcGr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.703754540329306,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2128694780261426,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2128694780261426
  },
  {
    "length": 4,
    "abbreviation": "CuGcGuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7071684651270145,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2137405063647573,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2137405063647573
  },
  {
    "length": 4,
    "abbreviation": "CuGcGuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6705571643065789,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3603956426102517,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0867497797495043
  },
  {
    "length": 4,
    "abbreviation": "CuGcGuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.957439508909268,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.398821689865993,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.088028575478941
  },
  {
    "length": 4,
    "abbreviation": "CuGcGuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.364863842102825,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1231315943043882,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1484695419633573
  },
  {
    "length": 4,
    "abbreviation": "CuGdAdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.189211182080418,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4050739448225547,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4050739448225547
  },
  {
    "length": 4,
    "abbreviation": "CuGdAdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.775470534879668,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.840147616562895,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.840147616562895
  },
  {
    "length": 4,
    "abbreviation": "CuGdAdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.789504327307773,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.852164102571003,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.852164102571003
  },
  {
    "length": 4,
    "abbreviation": "CuGdAeGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.900911997026172,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.949412800448129,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.949412800448129
  },
  {
    "length": 4,
    "abbreviation": "CuGdAeGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.487171349825422,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4975945692387467,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4975945692387467
  },
  {
    "length": 4,
    "abbreviation": "CuGdAeGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.501205142253527,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.511185224471225,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.511185224471225
  },
  {
    "length": 4,
    "abbreviation": "CuGdAlDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.855161090328425,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.235253380780483,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.235253380780483
  },
  {
    "length": 4,
    "abbreviation": "CuGdAuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.170142294429855,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.393673637819849,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.393673637819849
  },
  {
    "length": 4,
    "abbreviation": "CuGdAuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.756401647229105,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.823910541930804,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.823910541930804
  },
  {
    "length": 4,
    "abbreviation": "CuGdAuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.77043543965721,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.835849993178206,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.835849993178206
  },
  {
    "length": 4,
    "abbreviation": "CuGdCbGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1756447418493536,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4458361180933177,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6029199039518771
  },
  {
    "length": 4,
    "abbreviation": "CuGdCbGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.761904094648604,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6869415092541977,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7160259474392627
  },
  {
    "length": 4,
    "abbreviation": "CuGdCbGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7759378870767084,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6950681315888667,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7204185694423795
  },
  {
    "length": 4,
    "abbreviation": "CuGdCdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.705411149330644,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6553535905353414,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6993113648328604
  },
  {
    "length": 4,
    "abbreviation": "CuGdCdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2916705021298944,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9562617519291858,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9562617519291858
  },
  {
    "length": 4,
    "abbreviation": "CuGdCdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.305704294557999,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9647768196771767,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9647768196771767
  },
  {
    "length": 4,
    "abbreviation": "CuGdCpDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8544491405776733,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.2291639941008048,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5786158813697329
  },
  {
    "length": 4,
    "abbreviation": "CuGdCrCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8774551055600173,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3858341035703834,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5798559345416738
  },
  {
    "length": 4,
    "abbreviation": "CuGdCrCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1643374501627064,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.442926835097262,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6017561616990514
  },
  {
    "length": 4,
    "abbreviation": "CuGdCtDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.141331485180362,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.404733927367326,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5994708539155766
  },
  {
    "length": 4,
    "abbreviation": "CuGdCuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6504429106103977,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6263672098983817,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6844777833077706
  },
  {
    "length": 4,
    "abbreviation": "CuGdCuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.236702263409648,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9239612349396469,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9239612349396469
  },
  {
    "length": 4,
    "abbreviation": "CuGdCuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2507360558377525,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9320472693643815,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9320472693643815
  },
  {
    "length": 4,
    "abbreviation": "CuGdDaGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.426059503608764,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.015200717686799,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.015200717686799
  },
  {
    "length": 4,
    "abbreviation": "CuGdDaGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.012318856408014,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4186572212751463,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4186572212751463
  },
  {
    "length": 4,
    "abbreviation": "CuGdDaGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.026352648836119,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4301539989823344,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4301539989823344
  },
  {
    "length": 4,
    "abbreviation": "CuGdDdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.012318856408014,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4186572212751463,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4186572212751463
  },
  {
    "length": 4,
    "abbreviation": "CuGdDdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.598578209207265,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.941587021023249,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.941587021023249
  },
  {
    "length": 4,
    "abbreviation": "CuGdDdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6126120016353696,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.954861353333504,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.954861353333504
  },
  {
    "length": 4,
    "abbreviation": "CuGdDlAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.053676067758878,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4527273579326057,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4527273579326057
  },
  {
    "length": 4,
    "abbreviation": "CuGdDpCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5360522010071478,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3488087074463477,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.68795552031483
  },
  {
    "length": 4,
    "abbreviation": "CuGdDpCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.822934545609837,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3780736532593905,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6938794330888143
  },
  {
    "length": 4,
    "abbreviation": "CuGdDpSpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9552432758682445,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.372613559034701,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.372613559034701
  },
  {
    "length": 4,
    "abbreviation": "CuGdDrDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4797537872255684,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0448138654870034,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0448138654870034
  },
  {
    "length": 4,
    "abbreviation": "CuGdDtCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8229345456098367,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3780736532593905,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6938794330888143
  },
  {
    "length": 4,
    "abbreviation": "CuGdDtCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.109816890212526,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4296708123397868,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.70512285661133
  },
  {
    "length": 4,
    "abbreviation": "CuGdDuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.026352648836119,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4301539989823344,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4301539989823344
  },
  {
    "length": 4,
    "abbreviation": "CuGdDuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6126120016353696,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.954861353333504,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.954861353333504
  },
  {
    "length": 4,
    "abbreviation": "CuGdDuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.626645794063474,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9681585669825017,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9681585669825017
  },
  {
    "length": 4,
    "abbreviation": "CuGeAdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.900911997026172,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8277548852571073,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8277548852571073
  },
  {
    "length": 4,
    "abbreviation": "CuGeAdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.487171349825422,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0455273868059245,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0455273868059245
  },
  {
    "length": 4,
    "abbreviation": "CuGeAdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.501205142253527,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0530548844134895,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0530548844134895
  },
  {
    "length": 4,
    "abbreviation": "CuGeAeGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.612612811971926,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1167747597683086,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1167747597683086
  },
  {
    "length": 4,
    "abbreviation": "CuGeAeGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.198872164771176,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.551848431508649,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.551848431508649
  },
  {
    "length": 4,
    "abbreviation": "CuGeAeGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.212905957199281,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.563864917516757,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.563864917516757
  },
  {
    "length": 4,
    "abbreviation": "CuGeAlDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.5668619052741795,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7711077248872487,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7711077248872487
  },
  {
    "length": 4,
    "abbreviation": "CuGeAuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.881843109375609,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8234823818048453,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8234823818048453
  },
  {
    "length": 4,
    "abbreviation": "CuGeAuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.468102462174859,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.035480101593277,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.035480101593277
  },
  {
    "length": 4,
    "abbreviation": "CuGeAuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.482136254602964,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0428541497222907,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0428541497222907
  },
  {
    "length": 4,
    "abbreviation": "CuGiG<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.489574369556143,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.2306362932180255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.486518067969172
  },
  {
    "length": 4,
    "abbreviation": "CuGiG<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.0758337223553935,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.526788029715503,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.526788029715503
  },
  {
    "length": 4,
    "abbreviation": "CuGiG<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.089867514783498,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5284898478611813,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5284898478611813
  },
  {
    "length": 4,
    "abbreviation": "CuGiGaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.150683671329662,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9500306432224153,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.478442499778481
  },
  {
    "length": 4,
    "abbreviation": "CuGiGbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.581871969999727,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.352393140950578,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4716812460114674
  },
  {
    "length": 4,
    "abbreviation": "CuGiGbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8687543146024161,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3845390424271233,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.471858103179063
  },
  {
    "length": 4,
    "abbreviation": "CuGiGcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.021759933778814,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8545808465315248,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.476667899723294
  },
  {
    "length": 4,
    "abbreviation": "CuGiGcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6080192865780645,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3363000157295644,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4911242701686254
  },
  {
    "length": 4,
    "abbreviation": "CuGiGcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.622053079006169,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.349016372894843,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.491754209395423
  },
  {
    "length": 4,
    "abbreviation": "CuGiGdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.112350327231769,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5313187036889064,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5313187036889064
  },
  {
    "length": 4,
    "abbreviation": "CuGiGdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1116383774810172,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4300935570574365,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.472132104841108
  },
  {
    "length": 4,
    "abbreviation": "CuGiGdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.398520722083706,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5155839874486734,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.472730141206213
  },
  {
    "length": 4,
    "abbreviation": "CuGiGdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7369430241289123,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.454465889758801,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.497708346813671
  },
  {
    "length": 4,
    "abbreviation": "CuGiGeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.824051142177523,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.717114200061878,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.717114200061878
  },
  {
    "length": 4,
    "abbreviation": "CuGiGiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.407872908233006,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1597211658785977,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4839779559661936
  },
  {
    "length": 4,
    "abbreviation": "CuGiGiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9941322610322563,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.517791744858315,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.517791744858315
  },
  {
    "length": 4,
    "abbreviation": "CuGiGiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.008166053460361,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5192316669688557,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5192316669688557
  },
  {
    "length": 4,
    "abbreviation": "CuGiGr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.489574369556143,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.2306362932180255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.486518067969172
  },
  {
    "length": 4,
    "abbreviation": "CuGiGr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.0758337223553935,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.526788029715503,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.526788029715503
  },
  {
    "length": 4,
    "abbreviation": "CuGiGr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.089867514783498,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5284898478611813,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5284898478611813
  },
  {
    "length": 4,
    "abbreviation": "CuGiGuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.093281439581206,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.528911191860279,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.528911191860279
  },
  {
    "length": 4,
    "abbreviation": "CuGiGuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0566701387607704,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.417922167810396,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.472056077528373
  },
  {
    "length": 4,
    "abbreviation": "CuGiGuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.34355248336346,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4960683903602892,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.472583150651614
  },
  {
    "length": 4,
    "abbreviation": "CuGiGuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7509768165570168,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.46749643861956,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4985430573576775
  },
  {
    "length": 4,
    "abbreviation": "CuGpBPpGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpBP",
      "BPpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpBP",
      "GpBP",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.213621521651942,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.764624043341537,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.764624043341537
  },
  {
    "length": 4,
    "abbreviation": "CuGpBPpGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpBP",
      "BPpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpBP",
      "GpBP",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.799880874451192,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.823637088127614,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.823637088127614
  },
  {
    "length": 4,
    "abbreviation": "CuGpBPpGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpBP",
      "BPpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpBP",
      "GpBP",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.813914666879297,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.826076683080071,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.826076683080071
  },
  {
    "length": 4,
    "abbreviation": "CuGpCCpGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpCC",
      "CCpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpCC",
      "GpCC",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3642227091739896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.018905348905118,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.018905348905118
  },
  {
    "length": 4,
    "abbreviation": "CuGpCCpGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpCC",
      "CCpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpCC",
      "GpCC",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.95048206197324,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2911803349009796,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2911803349009796
  },
  {
    "length": 4,
    "abbreviation": "CuGpCCpGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpCC",
      "CCpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpCC",
      "GpCC",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9645158544013444,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.300057533347314,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.300057533347314
  },
  {
    "length": 4,
    "abbreviation": "CuGpMFpGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpMF",
      "MFpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpMF",
      "GpMF",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.289729399306351,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0605778379896282,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.065317167234721
  },
  {
    "length": 4,
    "abbreviation": "CuGpMFpGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpMF",
      "MFpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpMF",
      "GpMF",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8759887521056013,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2412377251356372,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2412377251356372
  },
  {
    "length": 4,
    "abbreviation": "CuGpMFpGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpMF",
      "MFpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpMF",
      "GpMF",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8900225445337058,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.24760416835145,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.24760416835145
  },
  {
    "length": 4,
    "abbreviation": "CuGpPWpGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpPW",
      "PWpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpPW",
      "GpPW",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.349370708897042,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.025423169364976,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.025423169364976
  },
  {
    "length": 4,
    "abbreviation": "CuGpPWpGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpPW",
      "PWpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpPW",
      "GpPW",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9356300616962923,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2764211576605042,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2764211576605042
  },
  {
    "length": 4,
    "abbreviation": "CuGpPWpGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpPW",
      "PWpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpPW",
      "GpPW",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9496638541243967,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2847920003239786,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2847920003239786
  },
  {
    "length": 4,
    "abbreviation": "CuGr>G<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.571275830879281,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3031936589574737,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5656794172893314
  },
  {
    "length": 4,
    "abbreviation": "CuGr>G<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.157535183678531,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.599493206181452,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.599493206181452
  },
  {
    "length": 4,
    "abbreviation": "CuGr>G<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.171568976106636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6009331282919934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6009331282919934
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2323851326527993,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0141138976804305,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5589599379980936
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.6635734313228643,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.359710295022228,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5533502932277785
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9504557759255534,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3976065339836488,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.553496837475428
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1034613951019514,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9142217877223153,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5574861577343793
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6897207479012017,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4108485372529262,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.569521479021943
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.703754540329306,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.423772958758613,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.570047439903831
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.194051788554906,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6033285636807997,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6033285636807997
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.193339838804154,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.450502819546053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5537238960654567
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4802221834068434,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5475993059406405,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.554219559633775
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8186444854520496,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.5307290474795185,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5750249820395132
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.90575260350066,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7653908236839353,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7653908236839353
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.489574369556143,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.2306362932180255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5635635931729164
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.0758337223553935,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5918958800515197,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5918958800515197
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.089867514783498,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.593110240750494,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.593110240750494
  },
  {
    "length": 4,
    "abbreviation": "CuGr>Gr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.571275830879281,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.3031936589574737,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5656794172893314
  },
  {
    "length": 4,
    "abbreviation": "CuGr>Gr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.157535183678531,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.599493206181452,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.599493206181452
  },
  {
    "length": 4,
    "abbreviation": "CuGr>Gr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.171568976106636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6009331282919934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6009331282919934
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.174982900904344,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.601289764875781,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.601289764875781
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.138371600083908,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.436456416000204,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.553660891599068
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.425253944686597,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.5256575481418462,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.554097720322578
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.832678277880154,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.543921323882144,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5757236764876588
  },
  {
    "length": 4,
    "abbreviation": "CuGrPBrGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GrPB",
      "PBrG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "PBrG",
      "PBrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.371423227750272,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6300516466357373,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6300516466357373
  },
  {
    "length": 4,
    "abbreviation": "CuGrPBrGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GrPB",
      "PBrG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "PBrG",
      "PBrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.957682580549522,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.787083897894143,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.787083897894143
  },
  {
    "length": 4,
    "abbreviation": "CuGrPBrGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GrPB",
      "PBrG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "PBrG",
      "PBrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.971716372977627,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.792887444866966,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.792887444866966
  },
  {
    "length": 4,
    "abbreviation": "CuGuAdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.170142294429855,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3976057648904985,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3976057648904985
  },
  {
    "length": 4,
    "abbreviation": "CuGuAdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.756401647229105,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8374200495343844,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8374200495343844
  },
  {
    "length": 4,
    "abbreviation": "CuGuAdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.77043543965721,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.849511197845475,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.849511197845475
  },
  {
    "length": 4,
    "abbreviation": "CuGuAeGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.881843109375609,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9472934321611324,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9472934321611324
  },
  {
    "length": 4,
    "abbreviation": "CuGuAeGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.468102462174859,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4969957927166813,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4969957927166813
  },
  {
    "length": 4,
    "abbreviation": "CuGuAeGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.482136254602964,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5106049080229726,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5106049080229726
  },
  {
    "length": 4,
    "abbreviation": "CuGuAlDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8360922026778623,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2241657535317496,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2241657535317496
  },
  {
    "length": 4,
    "abbreviation": "CuGuAuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.151073406779292,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3860050571719924,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3860050571719924
  },
  {
    "length": 4,
    "abbreviation": "CuGuAuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.737332759578543,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8210787289123327,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8210787289123327
  },
  {
    "length": 4,
    "abbreviation": "CuGuAuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.7513665520066475,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8330952149204407,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8330952149204407
  },
  {
    "length": 4,
    "abbreviation": "CuGuCbGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1206765031291077,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4322114160167203,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.554010799064088
  },
  {
    "length": 4,
    "abbreviation": "CuGuCbGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.706935855928358,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6561822923640257,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.678827477022923
  },
  {
    "length": 4,
    "abbreviation": "CuGuCbGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.7209696483564625,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6638721816092854,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6836107660722492
  },
  {
    "length": 4,
    "abbreviation": "CuGuCdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.6504429106103977,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6263672098983817,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.6605863289136584
  },
  {
    "length": 4,
    "abbreviation": "CuGuCdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.236702263409648,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9352587203684237,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9352587203684237
  },
  {
    "length": 4,
    "abbreviation": "CuGuCdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2507360558377525,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9441913974720644,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9441913974720644
  },
  {
    "length": 4,
    "abbreviation": "CuGuCpDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.799480901857427,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.2007709052725397,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.526716781822547
  },
  {
    "length": 4,
    "abbreviation": "CuGuCrCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.822486866839771,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3780133362182105,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5281139889434974
  },
  {
    "length": 4,
    "abbreviation": "CuGuCrCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.10936921144246,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4295671199456814,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5527081262790272
  },
  {
    "length": 4,
    "abbreviation": "CuGuCtDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.086363246460116,
    "optimal_join_index": 3,
    "optimal_join_complexity": 1.3676829524623368,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.5501487765939752
  },
  {
    "length": 4,
    "abbreviation": "CuGuCuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5954746718901514,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.599118064425003,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.644343126112614
  },
  {
    "length": 4,
    "abbreviation": "CuGuCuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1817340246894017,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9012935132089395,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9012935132089395
  },
  {
    "length": 4,
    "abbreviation": "CuGuCuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.195767817117506,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9098085809569303,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9098085809569303
  },
  {
    "length": 4,
    "abbreviation": "CuGuDaGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.440093296036869,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0217660781833238,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0217660781833238
  },
  {
    "length": 4,
    "abbreviation": "CuGuDaGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.026352648836119,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.421262089778641,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.421262089778641
  },
  {
    "length": 4,
    "abbreviation": "CuGuDaGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.040386441264224,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4326910137032507,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4326910137032507
  },
  {
    "length": 4,
    "abbreviation": "CuGuDdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.026352648836119,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.421262089778641,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.421262089778641
  },
  {
    "length": 4,
    "abbreviation": "CuGuDdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6126120016353696,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9423700314153116,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9423700314153116
  },
  {
    "length": 4,
    "abbreviation": "CuGuDdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.626645794063474,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9556208134513535,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9556208134513535
  },
  {
    "length": 4,
    "abbreviation": "CuGuDlAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.067709860186983,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.455136230136555,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.455136230136555
  },
  {
    "length": 4,
    "abbreviation": "CuGuDpCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5500859934352527,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3498697431718163,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.701786619253128
  },
  {
    "length": 4,
    "abbreviation": "CuGuDpCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8369683380379418,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.379991962082053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7075260655405304
  },
  {
    "length": 4,
    "abbreviation": "CuGuDpSpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.969277068296349,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.375508796094934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.375508796094934
  },
  {
    "length": 4,
    "abbreviation": "CuGuDrDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4937875796536733,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0509495187258064,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0509495187258064
  },
  {
    "length": 4,
    "abbreviation": "CuGuDtCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8369683380379416,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.379991962082053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7075260655405304
  },
  {
    "length": 4,
    "abbreviation": "CuGuDtCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.1238506826406307,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.4329632378984756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.7184260130227065
  },
  {
    "length": 4,
    "abbreviation": "CuGuDuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.040386441264223,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4326910137032507,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4326910137032507
  },
  {
    "length": 4,
    "abbreviation": "CuGuDuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6266457940634735,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9556208134513535,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9556208134513535
  },
  {
    "length": 4,
    "abbreviation": "CuGuDuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.640679586491578,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9688951457616084,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9688951457616084
  }
]