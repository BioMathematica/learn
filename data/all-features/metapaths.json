[
  {
    "length": 2,
    "abbreviation": "CbGaD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.082963335852802,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3959087280383646,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3959087280383646
  },
  {
    "length": 2,
    "abbreviation": "CbGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.8717815854346191,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3488744763407403,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3488744763407403
  },
  {
    "length": 2,
    "abbreviation": "CbGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9164611457159242,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.357385924832316,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.357385924832316
  },
  {
    "length": 2,
    "abbreviation": "CdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.526662574462757,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.71062533140962,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.71062533140962
  },
  {
    "length": 2,
    "abbreviation": "CdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.315480824044574,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7084602470427557,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7084602470427557
  },
  {
    "length": 2,
    "abbreviation": "CdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.360160384325879,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.708835645658109,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.708835645658109
  },
  {
    "length": 2,
    "abbreviation": "CpDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.5416683378268923,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.1958835854620087,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.1958835854620087
  },
  {
    "length": 2,
    "abbreviation": "CrCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.7170299725496232,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3459699388623085,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3459699388623085
  },
  {
    "length": 2,
    "abbreviation": "CrCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.9679788037023296,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.3850737736275085,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.3850737736275085
  },
  {
    "length": 2,
    "abbreviation": "CtDrD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 1.792617168979599,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.250156752609329,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.250156752609329
  },
  {
    "length": 2,
    "abbreviation": "CuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5191598864690627,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7032203630064022,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7032203630064022
  },
  {
    "length": 2,
    "abbreviation": "CuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.30797813605088,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7010179516364325,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7010179516364325
  },
  {
    "length": 2,
    "abbreviation": "CuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n2:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n2.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.352657696332185,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.701399835861232,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.701399835861232
  },
  {
    "length": 3,
    "abbreviation": "CbG<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.50133920441116,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2445947368791552,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.2445947368791552
  },
  {
    "length": 3,
    "abbreviation": "CbG<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.290157453992977,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.0362300375708196,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.0362300375708196
  },
  {
    "length": 3,
    "abbreviation": "CbG<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.3348370142742825,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.0801961398789772,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.0801961398789772
  },
  {
    "length": 3,
    "abbreviation": "CbGaDrD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.197828561742688,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0197702273715628,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.0197702273715628
  },
  {
    "length": 3,
    "abbreviation": "CbGbCpD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6295573952900893,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4009609479462504,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.4009609479462504
  },
  {
    "length": 3,
    "abbreviation": "CbGbCtD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.880506226442796,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.637866817573285,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.637866817573285
  },
  {
    "length": 3,
    "abbreviation": "CbGcGaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.868446745626131,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.626320824230534,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.626320824230534
  },
  {
    "length": 3,
    "abbreviation": "CbGcGdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6572649952079486,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4267181924434977,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.4267181924434977
  },
  {
    "length": 3,
    "abbreviation": "CbGcGuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7019445554892534,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.4684871828304455,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.4684871828304455
  },
  {
    "length": 3,
    "abbreviation": "CbGdAlD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.371704318660668,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1679116831394225,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.1679116831394225
  },
  {
    "length": 3,
    "abbreviation": "CbGdCpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.088102211219884,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.931284914002119,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.931284914002119
  },
  {
    "length": 3,
    "abbreviation": "CbGdCtD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3390510423725908,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1394427883650238,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.1394427883650238
  },
  {
    "length": 3,
    "abbreviation": "CbGdDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.986646811324505,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.853600461777398,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.853600461777398
  },
  {
    "length": 3,
    "abbreviation": "CbGeAlD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.965473125538696,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7195791037680785,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7195791037680785
  },
  {
    "length": 3,
    "abbreviation": "CbGiGaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.653401518628016,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.395321807614762,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.395321807614762
  },
  {
    "length": 3,
    "abbreviation": "CbGiGdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.442219768209832,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.186132932494263,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.186132932494263
  },
  {
    "length": 3,
    "abbreviation": "CbGiGuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.486899328491138,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2303074114206267,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.2303074114206267
  },
  {
    "length": 3,
    "abbreviation": "CbGr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.632224793068201,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.3743044385772554,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.3743044385772554
  },
  {
    "length": 3,
    "abbreviation": "CbGr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.421043042650019,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.1652141414288546,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.1652141414288546
  },
  {
    "length": 3,
    "abbreviation": "CbGr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.465722602931324,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2093636812986364,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.2093636812986364
  },
  {
    "length": 3,
    "abbreviation": "CbGuAlD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.265645576186369,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.076497658742992,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.076497658742992
  },
  {
    "length": 3,
    "abbreviation": "CbGuCpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.959094186652505,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8332602667274367,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8332602667274367
  },
  {
    "length": 3,
    "abbreviation": "CbGuCtD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2100430178052117,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.029879235895361,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.029879235895361
  },
  {
    "length": 3,
    "abbreviation": "CbGuDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.03132637160581,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8872867664873438,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8872867664873438
  },
  {
    "length": 3,
    "abbreviation": "CcSEcCpD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.201547776206945,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9508982409963163,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.9508982409963163
  },
  {
    "length": 3,
    "abbreviation": "CcSEcCtD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.452496607359651,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.145969464998353,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.145969464998353
  },
  {
    "length": 3,
    "abbreviation": "CdG<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.945038443021115,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.351216538541713,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.351216538541713
  },
  {
    "length": 3,
    "abbreviation": "CdG<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.733856692602933,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.197478569502733,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.197478569502733
  },
  {
    "length": 3,
    "abbreviation": "CdG<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.778536252884238,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.228278309284098,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.228278309284098
  },
  {
    "length": 3,
    "abbreviation": "CdGaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.641527800352643,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.773328878717237,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.773328878717237
  },
  {
    "length": 3,
    "abbreviation": "CdGbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.073256633900044,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.8695028259855553,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.8695028259855553
  },
  {
    "length": 3,
    "abbreviation": "CdGbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.32420546505275,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.965245940825157,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.965245940825157
  },
  {
    "length": 3,
    "abbreviation": "CdGcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.3121459842360865,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.959851000434775,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.959851000434775
  },
  {
    "length": 3,
    "abbreviation": "CdGcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.100964233817904,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.878432331113841,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.878432331113841
  },
  {
    "length": 3,
    "abbreviation": "CdGcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.145643794099209,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.893657319561701,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.893657319561701
  },
  {
    "length": 3,
    "abbreviation": "CdGdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.815403557270622,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.8034013528719806,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.8034013528719806
  },
  {
    "length": 3,
    "abbreviation": "CdGdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.531801449829839,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7589747072950974,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7589747072950974
  },
  {
    "length": 3,
    "abbreviation": "CdGdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.782750280982545,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7969754637382356,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7969754637382356
  },
  {
    "length": 3,
    "abbreviation": "CdGdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.43034604993446,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7482663187958365,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7482663187958365
  },
  {
    "length": 3,
    "abbreviation": "CdGeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.4091723641486515,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.0056163566353082,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.0056163566353082
  },
  {
    "length": 3,
    "abbreviation": "CdGiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.09710075723797,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.4732958082848695,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.4732958082848695
  },
  {
    "length": 3,
    "abbreviation": "CdGiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.885919006819788,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.306168410058718,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.306168410058718
  },
  {
    "length": 3,
    "abbreviation": "CdGiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.930598567101093,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.340079708989423,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.340079708989423
  },
  {
    "length": 3,
    "abbreviation": "CdGr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.075924031678156,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.4558031827238933,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.4558031827238933
  },
  {
    "length": 3,
    "abbreviation": "CdGr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.864742281259973,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.290394225722415,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.290394225722415
  },
  {
    "length": 3,
    "abbreviation": "CdGr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.9094218415412785,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.32390205011837,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.32390205011837
  },
  {
    "length": 3,
    "abbreviation": "CdGuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.709344814796324,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.783887731991405,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.783887731991405
  },
  {
    "length": 3,
    "abbreviation": "CdGuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.40279342526246,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7457263509664864,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7457263509664864
  },
  {
    "length": 3,
    "abbreviation": "CdGuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.653742256415166,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7751290499757393,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7751290499757393
  },
  {
    "length": 3,
    "abbreviation": "CdGuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.475025610215765,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.752707688807407,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.752707688807407
  },
  {
    "length": 3,
    "abbreviation": "CpDaGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.649124315396717,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.831706833557198,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.223016097722919
  },
  {
    "length": 3,
    "abbreviation": "CpDaGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4379425649785347,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8300695284181656,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.01226894489235
  },
  {
    "length": 3,
    "abbreviation": "CpDaGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4826221252598395,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.830353274071474,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.0568382116709003
  },
  {
    "length": 3,
    "abbreviation": "CpDdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.739670699850734,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9183362798903314,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.312924041509369
  },
  {
    "length": 3,
    "abbreviation": "CpDdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.528488949432551,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.918202389709963,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.10177764024399
  },
  {
    "length": 3,
    "abbreviation": "CpDdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.573168509713856,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9182255597429183,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.146448226432094
  },
  {
    "length": 3,
    "abbreviation": "CpDlAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.125728912027803,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.088258648129686,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7012405481841455
  },
  {
    "length": 3,
    "abbreviation": "CpDpCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.0481561417943377,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6482507892004898,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6482507892004898
  },
  {
    "length": 3,
    "abbreviation": "CpDpCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2991049729470445,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6681864731229175,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8875991498549793
  },
  {
    "length": 3,
    "abbreviation": "CpDpSpD",
    "edges": [
      "compound - palliates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PRESENTS_DpS]-(n2)-[:PRESENTS_DpS]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1967690625674177,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.079628005487753,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7719321972020863
  },
  {
    "length": 3,
    "abbreviation": "CpDrDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.656533563716778,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.6797436368352234,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.236514059916746
  },
  {
    "length": 3,
    "abbreviation": "CpDtCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.20341746835574,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.79560087003166,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.79560087003166
  },
  {
    "length": 3,
    "abbreviation": "CpDtCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4543662995084468,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8098937902753462,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.0383188045602503
  },
  {
    "length": 3,
    "abbreviation": "CpDuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.747446909055903,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9261063198132904,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.320699248951037
  },
  {
    "length": 3,
    "abbreviation": "CpDuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.536265158637719,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9259748041439857,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.109552220483535
  },
  {
    "length": 3,
    "abbreviation": "CpDuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.580944718919024,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.925997563210368,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.1542229658947605
  },
  {
    "length": 3,
    "abbreviation": "CrCbGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3731901964654183,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.1478562722426657,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.1478562722426657
  },
  {
    "length": 3,
    "abbreviation": "CrCbGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1620084460472357,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9728708363223815,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.9728708363223815
  },
  {
    "length": 3,
    "abbreviation": "CrCbGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2066880063285406,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.008642752629002,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.008642752629002
  },
  {
    "length": 3,
    "abbreviation": "CrCdGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.816889435075374,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.529174991808851,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.529174991808851
  },
  {
    "length": 3,
    "abbreviation": "CrCdGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.605707684657191,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.319559221557586,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.319559221557586
  },
  {
    "length": 3,
    "abbreviation": "CrCdGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.650387244938496,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.363841748699895,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.363841748699895
  },
  {
    "length": 3,
    "abbreviation": "CrCpDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.831895198439509,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.734925971034852,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.734925971034852
  },
  {
    "length": 3,
    "abbreviation": "CrCrCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0072568331622396,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8551052715579541,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8551052715579541
  },
  {
    "length": 3,
    "abbreviation": "CrCrCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.2582056643149464,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0507691659380654,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.0507691659380654
  },
  {
    "length": 3,
    "abbreviation": "CrCtDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.0828440295922155,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.9113751376611936,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.9113751376611936
  },
  {
    "length": 3,
    "abbreviation": "CrCuGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.809386747081679,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.5217159557676077,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.5217159557676077
  },
  {
    "length": 3,
    "abbreviation": "CrCuGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.598204996663497,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.312127263929702,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.312127263929702
  },
  {
    "length": 3,
    "abbreviation": "CrCuGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.642884556944802,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.356402935102009,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.356402935102009
  },
  {
    "length": 3,
    "abbreviation": "CtDaGaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.900073146549424,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0807890947442083,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.2235588484307316
  },
  {
    "length": 3,
    "abbreviation": "CtDaGdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6888913961312415,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.013150355301775,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.013150355301775
  },
  {
    "length": 3,
    "abbreviation": "CtDaGuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7335709564125463,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.0576337330705905,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.0576337330705905
  },
  {
    "length": 3,
    "abbreviation": "CtDdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.99061953100344,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.169132509763604,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.312968192635224
  },
  {
    "length": 3,
    "abbreviation": "CtDdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.7794377805852575,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.101849431964794,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.101849431964794
  },
  {
    "length": 3,
    "abbreviation": "CtDdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.824117340866563,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.146513001411789,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.146513001411789
  },
  {
    "length": 3,
    "abbreviation": "CtDlAlD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.376677743180509,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3199737879728417,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7030425119680888
  },
  {
    "length": 3,
    "abbreviation": "CtDpCpD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.2991049729470445,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.6681864731229175,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.6681864731229175
  },
  {
    "length": 3,
    "abbreviation": "CtDpCtD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.5500538040997514,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8991996203531967,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8991996203531967
  },
  {
    "length": 3,
    "abbreviation": "CtDpSpD",
    "edges": [
      "compound - treats - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PRESENTS_DpS]-(n2)-[:PRESENTS_DpS]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4477178937201245,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.306167563378457,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7734639532350474
  },
  {
    "length": 3,
    "abbreviation": "CtDrDrD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.907482394869485,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.875407531215335,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.24174710756086
  },
  {
    "length": 3,
    "abbreviation": "CtDtCpD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.4543662995084463,
    "optimal_join_index": 1,
    "optimal_join_complexity": 1.8098937902753462,
    "midpoint_index": 1,
    "midpoint_join_complexity": 1.8098937902753462
  },
  {
    "length": 3,
    "abbreviation": "CtDtCtD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 2.705315130661153,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.0465497011843663,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.0465497011843663
  },
  {
    "length": 3,
    "abbreviation": "CtDuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.9983957402086086,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1769052560918665,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.320742616708636
  },
  {
    "length": 3,
    "abbreviation": "CtDuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.787213989790426,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.1096227385538935,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.1096227385538935
  },
  {
    "length": 3,
    "abbreviation": "CtDuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.831893550071731,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.154286591674936,
    "midpoint_index": 1,
    "midpoint_join_complexity": 4.154286591674936
  },
  {
    "length": 3,
    "abbreviation": "CuG<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.937535755027421,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.349533570025031,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.349533570025031
  },
  {
    "length": 3,
    "abbreviation": "CuG<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.726354004609238,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.1950787858670497,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.1950787858670497
  },
  {
    "length": 3,
    "abbreviation": "CuG<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.771033564890543,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2260432447799863,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.2260432447799863
  },
  {
    "length": 3,
    "abbreviation": "CuGaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.634025112358948,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.766926821736188,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.766926821736188
  },
  {
    "length": 3,
    "abbreviation": "CuGbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.0657539459063505,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.8643800263047297,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.8643800263047297
  },
  {
    "length": 3,
    "abbreviation": "CuGbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.3167027770590565,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.961141481176377,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.961141481176377
  },
  {
    "length": 3,
    "abbreviation": "CuGcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.304643296242392,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9556949896531286,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.9556949896531286
  },
  {
    "length": 3,
    "abbreviation": "CuGcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.093461545824209,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.873414390222079,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.873414390222079
  },
  {
    "length": 3,
    "abbreviation": "CuGcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.138141106105515,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.888813211745185,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.888813211745185
  },
  {
    "length": 3,
    "abbreviation": "CuGdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.807900869276929,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7974305608959296,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7974305608959296
  },
  {
    "length": 3,
    "abbreviation": "CuGdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.524298761836145,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.752355868147129,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.752355868147129
  },
  {
    "length": 3,
    "abbreviation": "CuGdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.775247592988851,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.790915046303354,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.790915046303354
  },
  {
    "length": 3,
    "abbreviation": "CuGdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.422843361940766,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7414809530100888,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7414809530100888
  },
  {
    "length": 3,
    "abbreviation": "CuGeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.401669676154957,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.001877809213435,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.001877809213435
  },
  {
    "length": 3,
    "abbreviation": "CuGiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.089598069244277,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.4720258474282013,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.4720258474282013
  },
  {
    "length": 3,
    "abbreviation": "CuGiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.878416318826094,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.304301100898341,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.304301100898341
  },
  {
    "length": 3,
    "abbreviation": "CuGiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.923095879107399,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.338352938141562,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.338352938141562
  },
  {
    "length": 3,
    "abbreviation": "CuGr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.068421343684462,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.4544809463948423,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.4544809463948423
  },
  {
    "length": 3,
    "abbreviation": "CuGr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.8572395932662795,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2884576922906557,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.2884576922906557
  },
  {
    "length": 3,
    "abbreviation": "CuGr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.901919153547585,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.322109607834101,
    "midpoint_index": 1,
    "midpoint_join_complexity": 3.322109607834101
  },
  {
    "length": 3,
    "abbreviation": "CuGuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND \nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.70184212680263,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7776405605111543,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7776405605111543
  },
  {
    "length": 3,
    "abbreviation": "CuGuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.395290737268766,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.738900870353191,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.738900870353191
  },
  {
    "length": 3,
    "abbreviation": "CuGuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.646239568421472,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7687536702346205,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7687536702346205
  },
  {
    "length": 3,
    "abbreviation": "CuGuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n3:Disease(identifier)\nUSING JOIN ON n1\nWHERE n0.identifier = { source }\nAND n3.identifier = { target }\nAND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.467522922222071,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.7459918974151525,
    "midpoint_index": 1,
    "midpoint_join_complexity": 2.7459918974151525
  },
  {
    "length": 4,
    "abbreviation": "CbG<rG<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.9197150729695185,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.814284596596723,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.814284596596723
  },
  {
    "length": 4,
    "abbreviation": "CbG<rG<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.708533322551336,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.7672503448990984,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.7672503448990984
  },
  {
    "length": 4,
    "abbreviation": "CbG<rG<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.753212882832641,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.775761793390674,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.775761793390674
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGaDrD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.616204430301046,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6874334427980275,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6874334427980275
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGbCpD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.0479332638484475,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.7003589650119273,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.7003589650119273
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGbCtD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.2988820950011535,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.715890457546935,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.715890457546935
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGcGaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.28682261418449,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.71493738951449,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.71493738951449
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGcGdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.075640863766307,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.701688741337133,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.701688741337133
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGcGuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.120320424047613,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.7040102698039905,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.7040102698039905
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGdAlD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.790080187219026,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6912117483122557,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6912117483122557
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGdCpD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.506478079778242,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.685709280905452,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.685709280905452
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGdCtD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.757426910930948,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6903850879489615,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6903850879489615
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGdDrD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.405022679882864,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.684455351270328,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.684455351270328
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGeAlD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.383848994097055,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.7233383091823837,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.7233383091823837
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGiGaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.071777387186374,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8602927960834834,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8602927960834834
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGiGdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.860595636768191,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.7992963131136284,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.7992963131136284
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGiGuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.905275197049496,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.810482381164727,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.810482381164727
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.050600661626559,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8532022200135185,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8532022200135185
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.8394189112083765,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.7942907126171375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.7942907126171375
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.884098471489682,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8050729551344316,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8050729551344316
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGuAlD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.684021444744727,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.688734067025102,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.688734067025102
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGuCpD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.377470055210863,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6841619131518235,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6841619131518235
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGuCtD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.628418886363569,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6876532286630246,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6876532286630246
  },
  {
    "length": 4,
    "abbreviation": "CbG<rGuDrD",
    "edges": [
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "G<rG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.449702240164168,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6849721150825006,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6849721150825006
  },
  {
    "length": 4,
    "abbreviation": "CbGaDaGaD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.305284539312513,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.252739069651583,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.252739069651583
  },
  {
    "length": 4,
    "abbreviation": "CbGaDaGdD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.094102788894331,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0595751221734373,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0595751221734373
  },
  {
    "length": 4,
    "abbreviation": "CbGaDaGuD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.138782349175636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.099750677217061,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.099750677217061
  },
  {
    "length": 4,
    "abbreviation": "CbGaDdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.395830923766529,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.315417964114789,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.315417964114789
  },
  {
    "length": 4,
    "abbreviation": "CbGaDdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.184649173348347,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.105825740954175,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.105825740954175
  },
  {
    "length": 4,
    "abbreviation": "CbGaDdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.229328733629652,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1501023062022195,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1501023062022195
  },
  {
    "length": 4,
    "abbreviation": "CbGaDlAlD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.781889135943598,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7930906939675,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7930906939675
  },
  {
    "length": 4,
    "abbreviation": "CbGaDpCpD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7043163657101332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.211832053500305,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.211832053500305
  },
  {
    "length": 4,
    "abbreviation": "CbGaDpCtD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.95526519686284,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.291312389409879,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.291312389409879
  },
  {
    "length": 4,
    "abbreviation": "CbGaDpSpD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.852929286483213,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.851164802950587,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.851164802950587
  },
  {
    "length": 4,
    "abbreviation": "CbGaDrDrD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.312693787632574,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.463547488655185,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.463547488655185
  },
  {
    "length": 4,
    "abbreviation": "CbGaDtCpD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8595776922715355,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.257288828637349,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.257288828637349
  },
  {
    "length": 4,
    "abbreviation": "CbGaDtCtD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.110526523424242,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3571760390632894,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3571760390632894
  },
  {
    "length": 4,
    "abbreviation": "CbGaDuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.403607132971698,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.323149044542478,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.323149044542478
  },
  {
    "length": 4,
    "abbreviation": "CbGaDuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.192425382553515,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.113528826184721,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.113528826184721
  },
  {
    "length": 4,
    "abbreviation": "CbGaDuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GaD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DaG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.23710494283482,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.157812479571427,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.157812479571427
  },
  {
    "length": 4,
    "abbreviation": "CbGbCbGaD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.285717619205885,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.234523882456666,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.234523882456666
  },
  {
    "length": 4,
    "abbreviation": "CbGbCbGdD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.074535868787702,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.222563591681815,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.222563591681815
  },
  {
    "length": 4,
    "abbreviation": "CbGbCbGuD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.1192154290690075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2246567937226485,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2246567937226485
  },
  {
    "length": 4,
    "abbreviation": "CbGbCdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.72941685781584,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.695260853385664,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.695260853385664
  },
  {
    "length": 4,
    "abbreviation": "CbGbCdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.518235107397658,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5637947752440042,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5637947752440042
  },
  {
    "length": 4,
    "abbreviation": "CbGbCdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.562914667678963,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5895799368840557,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5895799368840557
  },
  {
    "length": 4,
    "abbreviation": "CbGbCpDrD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.744422621179975,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2121299487488235,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2121299487488235
  },
  {
    "length": 4,
    "abbreviation": "CbGbCrCpD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.919784255902706,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.216719848214191,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.216719848214191
  },
  {
    "length": 4,
    "abbreviation": "CbGbCrCtD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.170733087055412,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.227338630169403,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.227338630169403
  },
  {
    "length": 4,
    "abbreviation": "CbGbCtDrD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.995371452332682,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2193247829992777,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2193247829992777
  },
  {
    "length": 4,
    "abbreviation": "CbGbCuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.721914169822146,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6901861866486834,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6901861866486834
  },
  {
    "length": 4,
    "abbreviation": "CbGbCuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.510732419403963,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5595752357788437,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5595752357788437
  },
  {
    "length": 4,
    "abbreviation": "CbGbCuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GbC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CbG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.555411979685268,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.585171815074194,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.585171815074194
  },
  {
    "length": 4,
    "abbreviation": "CbGcG<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.286822614184489,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4551074570772293,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4551074570772293
  },
  {
    "length": 4,
    "abbreviation": "CbGcG<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.075640863766306,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3389425211926276,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3389425211926276
  },
  {
    "length": 4,
    "abbreviation": "CbGcG<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.120320424047612,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3613967673237743,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3613967673237743
  },
  {
    "length": 4,
    "abbreviation": "CbGcGaDrD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.983311971516017,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0792164517036746,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0792164517036746
  },
  {
    "length": 4,
    "abbreviation": "CbGcGbCpD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.415040805063419,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.129427195574279,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.129427195574279
  },
  {
    "length": 4,
    "abbreviation": "CbGcGbCtD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.665989636216125,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1846394281383468,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1846394281383468
  },
  {
    "length": 4,
    "abbreviation": "CbGcGcGaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.65393015539946,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.181392137811694,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.181392137811694
  },
  {
    "length": 4,
    "abbreviation": "CbGcGcGdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.442748404981278,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1343578861140693,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1343578861140693
  },
  {
    "length": 4,
    "abbreviation": "CbGcGcGuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.487427965262583,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.142869334605645,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.142869334605645
  },
  {
    "length": 4,
    "abbreviation": "CbGcGdAlD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.157187728433996,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.094345722283447,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.094345722283447
  },
  {
    "length": 4,
    "abbreviation": "CbGcGdCpD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.873585620993214,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0721784807410666,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0721784807410666
  },
  {
    "length": 4,
    "abbreviation": "CbGcGdCtD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.1245344521459195,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0910691698499897,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0910691698499897
  },
  {
    "length": 4,
    "abbreviation": "CbGcGdDrD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.772130221097834,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0670052577785847,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0670052577785847
  },
  {
    "length": 4,
    "abbreviation": "CbGcGeAlD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.750956535312025,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2094450128685255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2094450128685255
  },
  {
    "length": 4,
    "abbreviation": "CbGcGiGaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.438884928401345,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.553933194992778,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.553933194992778
  },
  {
    "length": 4,
    "abbreviation": "CbGcGiGdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.227703177983162,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4200426969292246,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4200426969292246
  },
  {
    "length": 4,
    "abbreviation": "CbGcGiGuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.272382738264468,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4463640945509484,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4463640945509484
  },
  {
    "length": 4,
    "abbreviation": "CbGcGr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.41770820284153,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5394548229599385,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5394548229599385
  },
  {
    "length": 4,
    "abbreviation": "CbGcGr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.206526452423348,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4079579441599726,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4079579441599726
  },
  {
    "length": 4,
    "abbreviation": "CbGcGr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.251206012704653,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.433749903711111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.433749903711111
  },
  {
    "length": 4,
    "abbreviation": "CbGcGuAlD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.051128985959698,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0844692443989126,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0844692443989126
  },
  {
    "length": 4,
    "abbreviation": "CbGcGuCpD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.7445775964258345,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0657878713299715,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0657878713299715
  },
  {
    "length": 4,
    "abbreviation": "CbGcGuCtD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.9955264275785405,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.080107458604024,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.080107458604024
  },
  {
    "length": 4,
    "abbreviation": "CbGcGuDrD",
    "edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GcG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GcG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.816809781379139,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0691428819119504,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0691428819119504
  },
  {
    "length": 4,
    "abbreviation": "CbGdAdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.64146960597026,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.3561073152261525,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.3561073152261525
  },
  {
    "length": 4,
    "abbreviation": "CbGdAdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.430287855552077,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.147250162602482,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.147250162602482
  },
  {
    "length": 4,
    "abbreviation": "CbGdAdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.474967415833382,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.191340736500958,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.191340736500958
  },
  {
    "length": 4,
    "abbreviation": "CbGdAeGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.050429326800821,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.762790573778996,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.762790573778996
  },
  {
    "length": 4,
    "abbreviation": "CbGdAeGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.839247576382639,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.55252161342741,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.55252161342741
  },
  {
    "length": 4,
    "abbreviation": "CbGdAeGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.883927136663944,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.596969618200694,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.596969618200694
  },
  {
    "length": 4,
    "abbreviation": "CbGdAlDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.486569544550553,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5467269380438053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5467269380438053
  },
  {
    "length": 4,
    "abbreviation": "CbGdAuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.595616682320506,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.310668659268475,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.310668659268475
  },
  {
    "length": 4,
    "abbreviation": "CbGdAuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.384434931902323,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.10206713956453,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.10206713956453
  },
  {
    "length": 4,
    "abbreviation": "CbGdAuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AdG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.429114492183628,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.14609308699447,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.14609308699447
  },
  {
    "length": 4,
    "abbreviation": "CbGdCbGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.7442624351356795,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.763058770250971,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.763058770250971
  },
  {
    "length": 4,
    "abbreviation": "CbGdCbGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.533080684717497,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7266402365593216,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7266402365593216
  },
  {
    "length": 4,
    "abbreviation": "CbGdCbGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.577760244998802,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.733164258777137,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.733164258777137
  },
  {
    "length": 4,
    "abbreviation": "CbGdCdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.187961673745635,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5821724568913713,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5821724568913713
  },
  {
    "length": 4,
    "abbreviation": "CbGdCdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.976779923327452,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4024549403907356,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4024549403907356
  },
  {
    "length": 4,
    "abbreviation": "CbGdCdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.021459483608758,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4393597521457986,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4393597521457986
  },
  {
    "length": 4,
    "abbreviation": "CbGdCpDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.20296743710977,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6930799999511423,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6930799999511423
  },
  {
    "length": 4,
    "abbreviation": "CbGdCrCpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.378329071832501,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.708064297985068,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.708064297985068
  },
  {
    "length": 4,
    "abbreviation": "CbGdCrCtD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.629277902985207,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7414270821603126,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7414270821603126
  },
  {
    "length": 4,
    "abbreviation": "CbGdCtDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.453916268262477,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7164121532443968,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7164121532443968
  },
  {
    "length": 4,
    "abbreviation": "CbGdCuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.18045898575194,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5755768511153287,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5755768511153287
  },
  {
    "length": 4,
    "abbreviation": "CbGdCuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.969277235333758,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.396323550768082,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.396323550768082
  },
  {
    "length": 4,
    "abbreviation": "CbGdCuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CdG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.013956795615063,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4331168100497504,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4331168100497504
  },
  {
    "length": 4,
    "abbreviation": "CbGdDaGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.09410278889433,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2412765850143743,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2412765850143743
  },
  {
    "length": 4,
    "abbreviation": "CbGdDaGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.882921038476147,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0415573192334002,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0415573192334002
  },
  {
    "length": 4,
    "abbreviation": "CbGdDaGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.9276005987574525,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0833553381578533,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0833553381578533
  },
  {
    "length": 4,
    "abbreviation": "CbGdDdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.184649173348347,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.3144376363407115,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.3144376363407115
  },
  {
    "length": 4,
    "abbreviation": "CbGdDdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.973467422930164,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.104236213696606,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.104236213696606
  },
  {
    "length": 4,
    "abbreviation": "CbGdDdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.018146983211469,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1486671000125765,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1486671000125765
  },
  {
    "length": 4,
    "abbreviation": "CbGdDlAlD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.570707385525416,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7592029865909593,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7592029865909593
  },
  {
    "length": 4,
    "abbreviation": "CbGdDpCpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4931346152919507,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.065403302347951,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.065403302347951
  },
  {
    "length": 4,
    "abbreviation": "CbGdDpCtD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7440834464446575,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.173071796796193,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.173071796796193
  },
  {
    "length": 4,
    "abbreviation": "CbGdDpSpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.64174753606503,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.821666286586599,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.821666286586599
  },
  {
    "length": 4,
    "abbreviation": "CbGdDrDrD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.101512037214391,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3876651743484945,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3876651743484945
  },
  {
    "length": 4,
    "abbreviation": "CbGdDtCpD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6483959418533525,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.127829524740311,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.127829524740311
  },
  {
    "length": 4,
    "abbreviation": "CbGdDtCtD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8993447730060593,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2576501191057763,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2576501191057763
  },
  {
    "length": 4,
    "abbreviation": "CbGdDuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.192425382553515,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.322186032824302,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.322186032824302
  },
  {
    "length": 4,
    "abbreviation": "CbGdDuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.981243632135333,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1119672941242955,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1119672941242955
  },
  {
    "length": 4,
    "abbreviation": "CbGdDuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GdD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DdG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.025923192416638,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.156402569268077,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.156402569268077
  },
  {
    "length": 4,
    "abbreviation": "CbGeAdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.235238412848288,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.366857647115939,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.366857647115939
  },
  {
    "length": 4,
    "abbreviation": "CbGeAdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.024056662430105,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.164508834241285,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.164508834241285
  },
  {
    "length": 4,
    "abbreviation": "CbGeAdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.0687362227114106,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.206962865722869,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.206962865722869
  },
  {
    "length": 4,
    "abbreviation": "CbGeAeGaD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.6441981336788505,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.7670367698054665,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7670367698054665
  },
  {
    "length": 4,
    "abbreviation": "CbGeAeGdD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.433016383260668,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.5593915751743905,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.5593915751743905
  },
  {
    "length": 4,
    "abbreviation": "CbGeAeGuD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.477695943541973,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.603176006355129,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.603176006355129
  },
  {
    "length": 4,
    "abbreviation": "CbGeAlDrD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.080338351428582,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.96434172013828,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.96434172013828
  },
  {
    "length": 4,
    "abbreviation": "CbGeAuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.189385489198535,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.32258857519728,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.32258857519728
  },
  {
    "length": 4,
    "abbreviation": "CbGeAuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.978203738780352,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.12117703531213,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.12117703531213
  },
  {
    "length": 4,
    "abbreviation": "CbGeAuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GeA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AeG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.022883299061657,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.163396896406601,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.163396896406601
  },
  {
    "length": 4,
    "abbreviation": "CbGiG<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.071777387186374,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.93072909455471,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.93072909455471
  },
  {
    "length": 4,
    "abbreviation": "CbGiG<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.860595636768191,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.895223508189704,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.895223508189704
  },
  {
    "length": 4,
    "abbreviation": "CbGiG<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.905275197049496,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.90157845091364,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.90157845091364
  },
  {
    "length": 4,
    "abbreviation": "CbGiGaDrD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.768266744517902,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.837212990558772,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.837212990558772
  },
  {
    "length": 4,
    "abbreviation": "CbGiGbCpD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.1999955780653035,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8464077809640616,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8464077809640616
  },
  {
    "length": 4,
    "abbreviation": "CbGiGbCtD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.4509444092180095,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.857560099722149,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.857560099722149
  },
  {
    "length": 4,
    "abbreviation": "CbGiGcGaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.438884928401345,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8568725223796863,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8568725223796863
  },
  {
    "length": 4,
    "abbreviation": "CbGiGcGdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.227703177983162,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8473582096538945,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8473582096538945
  },
  {
    "length": 4,
    "abbreviation": "CbGiGcGuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.272382738264468,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.849019459435022,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.849019459435022
  },
  {
    "length": 4,
    "abbreviation": "CbGiGdAlD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.942142501435881,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8398925757269966,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8398925757269966
  },
  {
    "length": 4,
    "abbreviation": "CbGiGdCpD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.658540393995097,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.835992465168505,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.835992465168505
  },
  {
    "length": 4,
    "abbreviation": "CbGiGdCtD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.909489225147803,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8393057266659745,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8393057266659745
  },
  {
    "length": 4,
    "abbreviation": "CbGiGdDrD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.557084994099718,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8351057043956036,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8351057043956036
  },
  {
    "length": 4,
    "abbreviation": "CbGiGeAlD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.53591130831391,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8629476836108867,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8629476836108867
  },
  {
    "length": 4,
    "abbreviation": "CbGiGiGaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.223839701403229,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.966346910813578,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.966346910813578
  },
  {
    "length": 4,
    "abbreviation": "CbGiGiGdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.012657950985046,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9193126591159535,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9193126591159535
  },
  {
    "length": 4,
    "abbreviation": "CbGiGiGuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.0573375112663514,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9278241076075293,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9278241076075293
  },
  {
    "length": 4,
    "abbreviation": "CbGiGr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.202662975843415,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.960802489776971,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.960802489776971
  },
  {
    "length": 4,
    "abbreviation": "CbGiGr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.9914812254252325,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.915520959600119,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.915520959600119
  },
  {
    "length": 4,
    "abbreviation": "CbGiGr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.036160785706538,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9237015455205966,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9237015455205966
  },
  {
    "length": 4,
    "abbreviation": "CbGiGuAlD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.836083758961582,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.838134631723372,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.838134631723372
  },
  {
    "length": 4,
    "abbreviation": "CbGiGuCpD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.529532369427718,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8348982975126233,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8348982975126233
  },
  {
    "length": 4,
    "abbreviation": "CbGiGuCtD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.780481200580424,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.837368677527317,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.837368677527317
  },
  {
    "length": 4,
    "abbreviation": "CbGiGuDrD",
    "edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GiG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GiG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.601764554381024,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8354710614157064,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8354710614157064
  },
  {
    "length": 4,
    "abbreviation": "CbGpBPpGaD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpBP",
      "BPpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpBP",
      "GpBP",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.6284221632643225,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.615565335002388,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.615565335002388
  },
  {
    "length": 4,
    "abbreviation": "CbGpBPpGdD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpBP",
      "BPpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpBP",
      "GpBP",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.41724041284614,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5186673902525367,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5186673902525367
  },
  {
    "length": 4,
    "abbreviation": "CbGpBPpGuD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpBP",
      "BPpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpBP",
      "GpBP",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.461919973127445,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5370564517427256,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5370564517427256
  },
  {
    "length": 4,
    "abbreviation": "CbGpCCpGaD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpCC",
      "CCpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpCC",
      "GpCC",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.744006327662874,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3998550433789694,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3998550433789694
  },
  {
    "length": 4,
    "abbreviation": "CbGpCCpGdD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpCC",
      "CCpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpCC",
      "GpCC",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.532824577244692,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2144021139815195,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2144021139815195
  },
  {
    "length": 4,
    "abbreviation": "CbGpCCpGuD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpCC",
      "CCpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpCC",
      "GpCC",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.577504137525997,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.252692653030107,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.252692653030107
  },
  {
    "length": 4,
    "abbreviation": "CbGpMFpGaD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpMF",
      "MFpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpMF",
      "GpMF",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.705814279864819,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.371852169310362,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.371852169310362
  },
  {
    "length": 4,
    "abbreviation": "CbGpMFpGdD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpMF",
      "MFpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpMF",
      "GpMF",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.494632529446636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.187576992699788,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.187576992699788
  },
  {
    "length": 4,
    "abbreviation": "CbGpMFpGuD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpMF",
      "MFpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpMF",
      "GpMF",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.539312089727941,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2255818429664984,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2255818429664984
  },
  {
    "length": 4,
    "abbreviation": "CbGpPWpGaD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpPW",
      "PWpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpPW",
      "GpPW",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.780316198779093,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2054257029824114,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2054257029824114
  },
  {
    "length": 4,
    "abbreviation": "CbGpPWpGdD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpPW",
      "PWpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpPW",
      "GpPW",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.56913444836091,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0856418039480698,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0856418039480698
  },
  {
    "length": 4,
    "abbreviation": "CbGpPWpGuD",
    "edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GpPW",
      "PWpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GpPW",
      "GpPW",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.6138140086422155,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.108875589933692,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.108875589933692
  },
  {
    "length": 4,
    "abbreviation": "CbGr>G<rGaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.050600661626559,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9139540288653016,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9139540288653016
  },
  {
    "length": 4,
    "abbreviation": "CbGr>G<rGdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.8394189112083765,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.876988975090204,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.876988975090204
  },
  {
    "length": 4,
    "abbreviation": "CbGr>G<rGuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.884098471489682,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8836143524556896,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8836143524556896
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GaDrD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.747090018958087,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.816308966967029,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.816308966967029
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GbCpD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.178818852505489,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.825952159681268,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.825952159681268
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GbCtD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.429767683658195,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.837635157435131,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.837635157435131
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GcGaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.41770820284153,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8369152732241165,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8369152732241165
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GcGdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.206526452423348,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.826948372803596,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.826948372803596
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GcGuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.251206012704653,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8286893972137963,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8286893972137963
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GdAlD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.920965775876066,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.819120257091409,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.819120257091409
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GdCpD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.637363668435284,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.81502816801292,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.81502816801292
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GdCtD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.88831249958799,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8185046365321464,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8185046365321464
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GdDrD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.535908268539904,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8140975044429815,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8140975044429815
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GeAlD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.5147345827540954,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8432740402906735,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8432740402906735
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GiGaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.202662975843415,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9509164728105612,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9509164728105612
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GiGdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.9914812254252325,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.902081794208686,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.902081794208686
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GiGuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.036160785706538,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.910934239949086,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.910934239949086
  },
  {
    "length": 4,
    "abbreviation": "CbGr>Gr>GaD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.1814862502836005,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.945170185253764,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.945170185253764
  },
  {
    "length": 4,
    "abbreviation": "CbGr>Gr>GdD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.970304499865418,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8981359335561394,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8981359335561394
  },
  {
    "length": 4,
    "abbreviation": "CbGr>Gr>GuD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.014984060146723,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9066473820477152,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9066473820477152
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GuAlD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.814907033401768,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8172760041682223,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8172760041682223
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GuCpD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.508355643867905,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.813879815432461,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.813879815432461
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GuCtD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.759304475020611,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8164723294959835,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8164723294959835
  },
  {
    "length": 4,
    "abbreviation": "CbGr>GuDrD",
    "edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "Gr>G",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.58058782882121,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8144809613855277,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8144809613855277
  },
  {
    "length": 4,
    "abbreviation": "CbGrPBrGaD",
    "edges": [
      "compound - binds - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GrPB",
      "PBrG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "PBrG",
      "PBrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.285737439440899,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5307484324673246,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5307484324673246
  },
  {
    "length": 4,
    "abbreviation": "CbGrPBrGdD",
    "edges": [
      "compound - binds - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GrPB",
      "PBrG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "PBrG",
      "PBrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.074555689022716,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.373926486396376,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.373926486396376
  },
  {
    "length": 4,
    "abbreviation": "CbGrPBrGuD",
    "edges": [
      "compound - binds - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GrPB",
      "PBrG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "PBrG",
      "PBrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.119235249304022,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4054363918850443,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4054363918850443
  },
  {
    "length": 4,
    "abbreviation": "CbGuAdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.535410863495962,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.355300094456448,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.355300094456448
  },
  {
    "length": 4,
    "abbreviation": "CbGuAdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.324229113077779,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.145943693921813,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.145943693921813
  },
  {
    "length": 4,
    "abbreviation": "CbGuAdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.368908673359084,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.190160564489209,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.190160564489209
  },
  {
    "length": 4,
    "abbreviation": "CbGuAeGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.944370584326522,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.762474299664288,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.762474299664288
  },
  {
    "length": 4,
    "abbreviation": "CbGuAeGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.73318883390834,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.552008242652306,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.552008242652306
  },
  {
    "length": 4,
    "abbreviation": "CbGuAeGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.777868394189645,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.596506215930119,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.596506215930119
  },
  {
    "length": 4,
    "abbreviation": "CbGuAlDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.380510802076255,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.491345306015307,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.491345306015307
  },
  {
    "length": 4,
    "abbreviation": "CbGuAuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.4895579398462075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.309772313584637,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.309772313584637
  },
  {
    "length": 4,
    "abbreviation": "CbGuAuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.278376189428025,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.10061718721519,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.10061718721519
  },
  {
    "length": 4,
    "abbreviation": "CbGuAuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "AuG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.32305574970933,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.144783127632176,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.144783127632176
  },
  {
    "length": 4,
    "abbreviation": "CbGuCbGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6152544105683,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6643467144398474,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6643467144398474
  },
  {
    "length": 4,
    "abbreviation": "CbGuCbGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.404072660150118,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6181236143764166,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6181236143764166
  },
  {
    "length": 4,
    "abbreviation": "CbGuCbGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.448752220431423,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.626481806500698,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.626481806500698
  },
  {
    "length": 4,
    "abbreviation": "CbGuCdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.058953649178255,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.568569966432304,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.568569966432304
  },
  {
    "length": 4,
    "abbreviation": "CbGuCdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.847771898760072,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3817113970840786,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3817113970840786
  },
  {
    "length": 4,
    "abbreviation": "CbGuCdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.892451459041378,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4203436724820366,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4203436724820366
  },
  {
    "length": 4,
    "abbreviation": "CbGuCpDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.073959412542391,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5745446544389883,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5745446544389883
  },
  {
    "length": 4,
    "abbreviation": "CbGuCrCpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.249321047265122,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5941266810542167,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5941266810542167
  },
  {
    "length": 4,
    "abbreviation": "CbGuCrCtD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.500269878417828,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6370176740071205,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6370176740071205
  },
  {
    "length": 4,
    "abbreviation": "CbGuCtDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.324908243695098,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.604947779725115,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.604947779725115
  },
  {
    "length": 4,
    "abbreviation": "CbGuCuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.051450961184561,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5617628581448413,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5617628581448413
  },
  {
    "length": 4,
    "abbreviation": "CbGuCuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.840269210766379,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3752778098753042,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3752778098753042
  },
  {
    "length": 4,
    "abbreviation": "CbGuCuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "CuG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.884948771047684,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4138191938989957,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4138191938989957
  },
  {
    "length": 4,
    "abbreviation": "CbGuDaGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.138782349175635,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.243281713595745,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.243281713595745
  },
  {
    "length": 4,
    "abbreviation": "CbGuDaGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.9276005987574525,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0447289139150016,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0447289139150016
  },
  {
    "length": 4,
    "abbreviation": "CbGuDaGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.972280159038758,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0862368795147055,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0862368795147055
  },
  {
    "length": 4,
    "abbreviation": "CbGuDdGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.229328733629652,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.314607421306308,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.314607421306308
  },
  {
    "length": 4,
    "abbreviation": "CbGuDdGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.018146983211469,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.10451166689214,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.10451166689214
  },
  {
    "length": 4,
    "abbreviation": "CbGuDdGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.062826543492775,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.148915773977912,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.148915773977912
  },
  {
    "length": 4,
    "abbreviation": "CbGuDlAlD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.61538694580672,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.765259005850844,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.765259005850844
  },
  {
    "length": 4,
    "abbreviation": "CbGuDpCpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5378141755732555,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0945353503173525,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0945353503173525
  },
  {
    "length": 4,
    "abbreviation": "CbGuDpCtD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7887630067259623,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1959725247334494,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1959725247334494
  },
  {
    "length": 4,
    "abbreviation": "CbGuDpSpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6864270963463355,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8269159084413262,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8269159084413262
  },
  {
    "length": 4,
    "abbreviation": "CbGuDrDrD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.1461915974956955,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4017801452882823,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4017801452882823
  },
  {
    "length": 4,
    "abbreviation": "CbGuDtCpD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6930755021346573,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1531725868755602,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1531725868755602
  },
  {
    "length": 4,
    "abbreviation": "CbGuDtCtD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.944024333287364,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2765853083752283,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2765853083752283
  },
  {
    "length": 4,
    "abbreviation": "CbGuDuGaD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.23710494283482,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.322352816037074,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.322352816037074
  },
  {
    "length": 4,
    "abbreviation": "CbGuDuGdD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.025923192416638,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.112237888748321,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.112237888748321
  },
  {
    "length": 4,
    "abbreviation": "CbGuDuGuD",
    "edges": [
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CbG",
      "GuD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CbG",
      "DuG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.070602752697943,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.156646854405601,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.156646854405601
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCbGaD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.85770800012274,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.4709695123106705,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7756268536259725
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCbGdD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.646526249704557,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.262040869104995,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.775287351822503
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCbGuD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.6912058099858625,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.30614952159869,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.77534611496719
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCdGaD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.301407238732695,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.798607185699111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.798607185699111
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCdGdD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.090225488314513,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.7895727582363,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7895727582363
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCdGuD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.134905048595817,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.791149496602337,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.791149496602337
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCpDrD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.31641300209683,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.938521541028283,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7749985165406565
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCrCpD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.491774636819561,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.109780292087728,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7751247482487456
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCrCtD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.742723467972267,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.3570770353067765,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.77542180640053
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCtDrD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.567361833249537,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.184041786736581,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7751969684946625
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCuGaD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.293904550739,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.7982093303109465,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7982093303109465
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCuGdD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.082722800320818,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.789323009167749,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.789323009167749
  },
  {
    "length": 4,
    "abbreviation": "CcSEcCuGuD",
    "edges": [
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CcSE",
      "SEcC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CcSE",
      "CcSE",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:CAUSES_CcSE]-(n1)-[:CAUSES_CcSE]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2\nWITH\n[\nsize((n0)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.127402360602122,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.7908736804273815,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7908736804273815
  },
  {
    "length": 4,
    "abbreviation": "CdG<rG<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.363414311579474,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.129001199967978,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.129001199967978
  },
  {
    "length": 4,
    "abbreviation": "CdG<rG<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.152232561161291,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.126836115601114,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.126836115601114
  },
  {
    "length": 4,
    "abbreviation": "CdG<rG<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.196912121442596,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.127211514216467,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.127211514216467
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.0599036689110015,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.364539952433623,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.12363862369142
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.491632502458403,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.790235727549198,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.124118889370786
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.742581333611109,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.039615406958261,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.124714475165137
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.730521852794444,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.027612512139452,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.124677335155833
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.519340102376262,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.817722692815782,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.124169084159733
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.564019662657567,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.862074624273023,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.124257069629758
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.233779425828981,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.5352664243248135,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.12377759109009
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.950177318388198,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.2575388478498315,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123575594377512
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.201126149540904,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.503114126584409,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123747086635853
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.848721918492819,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.159273776023865,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123529906300108
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.827548232707009,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.124225031302695,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.125007422644035
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.515476625796328,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.131346253409597,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.131346253409597
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.304294875378146,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.128286835508774,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.128286835508774
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.34897443565945,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.128817752333205,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.128817752333205
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.494299900236514,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.130969310084839,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.130969310084839
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.283118149818332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.128053445663549,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.128053445663549
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.327797710099636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.128559381736237,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.128559381736237
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.127720683354682,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.430979756893862,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123686329721728
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.821169293820819,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.132719355845224,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123519232953816
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.0721181249735245,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.37649056064778,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123646675629919
  },
  {
    "length": 4,
    "abbreviation": "CdG<rGuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "G<rG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.893401478774123,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.202459117799534,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123548719667612
  },
  {
    "length": 4,
    "abbreviation": "CdGaDaGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.748983777922468,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.7016528447265844,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.7016528447265844
  },
  {
    "length": 4,
    "abbreviation": "CdGaDaGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.537802027504285,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.642314469585322,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.642314469585322
  },
  {
    "length": 4,
    "abbreviation": "CdGaDaGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.5824815877855904,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6531792621531465,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6531792621531465
  },
  {
    "length": 4,
    "abbreviation": "CdGaDdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.839530162376484,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.378672943708305,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.378672943708305
  },
  {
    "length": 4,
    "abbreviation": "CdGaDdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.628348411958301,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.20413952649225,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.20413952649225
  },
  {
    "length": 4,
    "abbreviation": "CdGaDdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.673027972239606,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.2398037168418785,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.2398037168418785
  },
  {
    "length": 4,
    "abbreviation": "CdGaDlAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.225588374553553,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.5823949826189985,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.586863015475589
  },
  {
    "length": 4,
    "abbreviation": "CdGaDpCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.148015604320088,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.8944945669274276,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.532030273446224
  },
  {
    "length": 4,
    "abbreviation": "CdGaDpCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.398964435472794,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.0005470157360694,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5361829637580424
  },
  {
    "length": 4,
    "abbreviation": "CdGaDpSpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.296628525093167,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.596739968204266,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.596739968204266
  },
  {
    "length": 4,
    "abbreviation": "CdGaDrDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.756393026242529,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.212890922190907,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.548047889628081
  },
  {
    "length": 4,
    "abbreviation": "CdGaDtCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.30327693088149,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.955936098597683,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.534316836769638
  },
  {
    "length": 4,
    "abbreviation": "CdGaDtCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.554225762034196,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.0841058244100052,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5402111312169975
  },
  {
    "length": 4,
    "abbreviation": "CdGaDuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.847306371581652,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.385364183149043,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.385364183149043
  },
  {
    "length": 4,
    "abbreviation": "CdGaDuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.63612462116347,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.210293104791268,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.210293104791268
  },
  {
    "length": 4,
    "abbreviation": "CdGaDuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GaD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DaG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.680804181444775,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.246085441190807,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.246085441190807
  },
  {
    "length": 4,
    "abbreviation": "CdGbCbGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.729416857815839,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.044765850538066,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.647638476023384
  },
  {
    "length": 4,
    "abbreviation": "CdGbCbGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.518235107397657,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.845846807297261,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.647182556002912
  },
  {
    "length": 4,
    "abbreviation": "CdGbCbGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.562914667678962,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.887445779944354,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.647261478305017
  },
  {
    "length": 4,
    "abbreviation": "CdGbCdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.173116096425794,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.678223121066621,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.678223121066621
  },
  {
    "length": 4,
    "abbreviation": "CdGbCdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.961934346007611,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.66626283029177,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.66626283029177
  },
  {
    "length": 4,
    "abbreviation": "CdGbCdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.006613906288916,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.6683560323326025,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.6683560323326025
  },
  {
    "length": 4,
    "abbreviation": "CdGbCpDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.188121859789931,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.550086866020548,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.646794580234668
  },
  {
    "length": 4,
    "abbreviation": "CdGbCrCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.363483494512661,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.7043326403509997,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.646964150900107
  },
  {
    "length": 4,
    "abbreviation": "CdGbCrCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.6144323256653665,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.9357602154134987,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.647363130880167
  },
  {
    "length": 4,
    "abbreviation": "CdGbCtDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.439070690942636,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.7729158116872714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.6470611588141395
  },
  {
    "length": 4,
    "abbreviation": "CdGbCuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.165613408432101,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.677698104656641,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.677698104656641
  },
  {
    "length": 4,
    "abbreviation": "CdGbCuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.954431658013918,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.665931046766138,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.665931046766138
  },
  {
    "length": 4,
    "abbreviation": "CdGbCuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GbC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CbG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.999111218295223,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.667990051557698,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.667990051557698
  },
  {
    "length": 4,
    "abbreviation": "CdGcG<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.730521852794444,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.514202391518766,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.514202391518766
  },
  {
    "length": 4,
    "abbreviation": "CdGcG<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.519340102376262,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.505214083575265,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.505214083575265
  },
  {
    "length": 4,
    "abbreviation": "CdGcG<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.564019662657567,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.506782703997812,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.506782703997812
  },
  {
    "length": 4,
    "abbreviation": "CdGcGaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.427011210125972,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.7619008454478933,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.4916751137608575
  },
  {
    "length": 4,
    "abbreviation": "CdGcGbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.858740043673374,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.168943830363063,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.493729384484953
  },
  {
    "length": 4,
    "abbreviation": "CdGcGbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.10968887482608,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.41329381929146,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.496266629583666
  },
  {
    "length": 4,
    "abbreviation": "CdGcGcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.097629394009416,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.401473636549911,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.496108741182949
  },
  {
    "length": 4,
    "abbreviation": "CdGcGcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.886447643591233,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.195728185533066,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.493943656816086
  },
  {
    "length": 4,
    "abbreviation": "CdGcGcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.9311272038725384,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.239034021809957,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.494319055431438
  },
  {
    "length": 4,
    "abbreviation": "CdGcGdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.600886967043952,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.9230228298886978,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.492270293720412
  },
  {
    "length": 4,
    "abbreviation": "CdGcGdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.317284859603169,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.6629885824480994,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.491404960854058
  },
  {
    "length": 4,
    "abbreviation": "CdGcGdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.568233690755875,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.892417360168575,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.492139700509663
  },
  {
    "length": 4,
    "abbreviation": "CdGcGdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.215829459707789,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.57394290630813,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.49120905445492
  },
  {
    "length": 4,
    "abbreviation": "CdGcGeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.194655773921981,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.496747499762679,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.497510462448107
  },
  {
    "length": 4,
    "abbreviation": "CdGcGiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.8825841670113,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.523781525258803,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.523781525258803
  },
  {
    "length": 4,
    "abbreviation": "CdGcGiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.671402416593118,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.511252298388032,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.511252298388032
  },
  {
    "length": 4,
    "abbreviation": "CdGcGiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.716081976874423,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.513446260219956,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.513446260219956
  },
  {
    "length": 4,
    "abbreviation": "CdGcGr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.861407441451486,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.522252493103178,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.522252493103178
  },
  {
    "length": 4,
    "abbreviation": "CdGcGr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.650225691033303,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.510285171902556,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.510285171902556
  },
  {
    "length": 4,
    "abbreviation": "CdGcGr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.694905251314609,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.51237961838399,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.51237961838399
  },
  {
    "length": 4,
    "abbreviation": "CdGcGuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.494828224569654,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.824175187174892,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.4918795031963565
  },
  {
    "length": 4,
    "abbreviation": "CdGcGuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.18827683503579,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.550219705761874,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.491163278332361
  },
  {
    "length": 4,
    "abbreviation": "CdGcGuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.439225666188496,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.7730575357078457,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.491709616274289
  },
  {
    "length": 4,
    "abbreviation": "CdGcGuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GcG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GcG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.260509019989096,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.612843042110453,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.4912897327028105
  },
  {
    "length": 4,
    "abbreviation": "CdGdAdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.085168844580215,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.445833360580411,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.445833360580411
  },
  {
    "length": 4,
    "abbreviation": "CdGdAdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.8739870941620325,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.284355988238632,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.284355988238632
  },
  {
    "length": 4,
    "abbreviation": "CdGdAdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.918666654443338,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.316945297757815,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.316945297757815
  },
  {
    "length": 4,
    "abbreviation": "CdGdAeGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.494128565410776,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.800204159616911,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.800204159616911
  },
  {
    "length": 4,
    "abbreviation": "CdGdAeGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.282946814992593,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.611706512390977,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.611706512390977
  },
  {
    "length": 4,
    "abbreviation": "CdGdAeGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.327626375273898,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.650738335321918,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.650738335321918
  },
  {
    "length": 4,
    "abbreviation": "CdGdAlDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.930268783160509,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.3398263538163913,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.745279136973845
  },
  {
    "length": 4,
    "abbreviation": "CdGdAuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.039315920930461,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.409244914517415,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.409244914517415
  },
  {
    "length": 4,
    "abbreviation": "CdGdAuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.8281341705122784,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.251876254973369,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.251876254973369
  },
  {
    "length": 4,
    "abbreviation": "CdGdAuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AdG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.872813730793584,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.283512460829502,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.283512460829502
  },
  {
    "length": 4,
    "abbreviation": "CdGdCbGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.187961673745634,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.5499495668691736,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.109106933447689
  },
  {
    "length": 4,
    "abbreviation": "CdGdCbGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.9767799233274514,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.375990210809969,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.107529391929431
  },
  {
    "length": 4,
    "abbreviation": "CdGdCbGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.021459483608757,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.411517712874373,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.107802764966061
  },
  {
    "length": 4,
    "abbreviation": "CdGdCdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.6316609123555885,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.206758008860925,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.206758008860925
  },
  {
    "length": 4,
    "abbreviation": "CdGdCdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.420479161937406,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.170339475169276,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.170339475169276
  },
  {
    "length": 4,
    "abbreviation": "CdGdCdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.465158722218711,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1768634973870915,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1768634973870915
  },
  {
    "length": 4,
    "abbreviation": "CdGdCpDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.646666675719725,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.14029423225534,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.106183728498577
  },
  {
    "length": 4,
    "abbreviation": "CdGdCrCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.822028310442455,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2591862036296346,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.106772236100675
  },
  {
    "length": 4,
    "abbreviation": "CdGdCrCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.072977141595161,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.4533808018607406,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.108154691449989
  },
  {
    "length": 4,
    "abbreviation": "CdGdCtDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.89761550687243,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.3149643475205743,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.107108654210014
  },
  {
    "length": 4,
    "abbreviation": "CdGdCuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.624158224361895,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.205201493059574,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.205201493059574
  },
  {
    "length": 4,
    "abbreviation": "CdGdCuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.412976473943712,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1692992381469045,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1692992381469045
  },
  {
    "length": 4,
    "abbreviation": "CdGdCuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CdG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.4576560342250175,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.175727609024429,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.175727609024429
  },
  {
    "length": 4,
    "abbreviation": "CdGdDaGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.537802027504284,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.572424169871975,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.572424169871975
  },
  {
    "length": 4,
    "abbreviation": "CdGdDaGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.326620277086102,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.490471094308401,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.490471094308401
  },
  {
    "length": 4,
    "abbreviation": "CdGdDaGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.371299837367407,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.505803828748044,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.505803828748044
  },
  {
    "length": 4,
    "abbreviation": "CdGdDdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.628348411958301,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.3544984908272,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.3544984908272
  },
  {
    "length": 4,
    "abbreviation": "CdGdDdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.417166661540119,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.167491193290123,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.167491193290123
  },
  {
    "length": 4,
    "abbreviation": "CdGdDdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.461846221821424,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.206159676177193,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.206159676177193
  },
  {
    "length": 4,
    "abbreviation": "CdGdDlAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.01440662413537,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.40586013307696,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4095302752841405
  },
  {
    "length": 4,
    "abbreviation": "CdGdDpCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.936833853901906,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.8309211506316343,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3241764618838854
  },
  {
    "length": 4,
    "abbreviation": "CdGdDpCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.187782685054612,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9089768936432687,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3308586084730987
  },
  {
    "length": 4,
    "abbreviation": "CdGdDpSpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.085446774674985,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4243041921890756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4243041921890756
  },
  {
    "length": 4,
    "abbreviation": "CdGdDrDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.545211275824347,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.078879557236938,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3497411256215703
  },
  {
    "length": 4,
    "abbreviation": "CdGdDtCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.092095180463308,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.875531975929335,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3278606131220614
  },
  {
    "length": 4,
    "abbreviation": "CdGdDtCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.343044011616014,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.973839557349256,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3373035805679216
  },
  {
    "length": 4,
    "abbreviation": "CdGdDuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.63612462116347,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.361569649176962,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.361569649176962
  },
  {
    "length": 4,
    "abbreviation": "CdGdDuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.424942870745287,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.17418243273086,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.17418243273086
  },
  {
    "length": 4,
    "abbreviation": "CdGdDuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GdD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DdG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.469622431026592,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.212943448479587,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.212943448479587
  },
  {
    "length": 4,
    "abbreviation": "CdGeAdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.678937651458243,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.6406903928928545,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.6406903928928545
  },
  {
    "length": 4,
    "abbreviation": "CdGeAdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.46775590104006,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.544725101058113,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.544725101058113
  },
  {
    "length": 4,
    "abbreviation": "CdGeAdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.512435461321365,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.562920973792189,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.562920973792189
  },
  {
    "length": 4,
    "abbreviation": "CdGeAeGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 9.087897372288806,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.897251499435627,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.897251499435627
  },
  {
    "length": 4,
    "abbreviation": "CdGeAeGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.876715621870623,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.753619238471104,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.753619238471104
  },
  {
    "length": 4,
    "abbreviation": "CdGeAeGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.921395182151928,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.782118945641875,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.782118945641875
  },
  {
    "length": 4,
    "abbreviation": "CdGeAlDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.524037590038537,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.851232365020019,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.329782616036265
  },
  {
    "length": 4,
    "abbreviation": "CdGeAuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.633084727808491,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.617688078493391,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.617688078493391
  },
  {
    "length": 4,
    "abbreviation": "CdGeAuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.421902977390307,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.527192700221953,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.527192700221953
  },
  {
    "length": 4,
    "abbreviation": "CdGeAuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GeA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AeG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.466582537671613,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.544262144918333,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.544262144918333
  },
  {
    "length": 4,
    "abbreviation": "CdGiG<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.515476625796328,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.279403571122307,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.279403571122307
  },
  {
    "length": 4,
    "abbreviation": "CdGiG<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.304294875378146,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.277873346279523,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.277873346279523
  },
  {
    "length": 4,
    "abbreviation": "CdGiG<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.34897443565945,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.278138507836857,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.278138507836857
  },
  {
    "length": 4,
    "abbreviation": "CdGiGaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.211965983127856,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.51378352256131,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.275617539623925
  },
  {
    "length": 4,
    "abbreviation": "CdGiGbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.643694816675258,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.941242491469994,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.275956051199777
  },
  {
    "length": 4,
    "abbreviation": "CdGiGbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.894643647827964,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.191083608789173,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.276375998704454
  },
  {
    "length": 4,
    "abbreviation": "CdGiGcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.8825841670112995,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.17906405335702,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.276349806321558
  },
  {
    "length": 4,
    "abbreviation": "CdGiGcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.671402416593117,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.968794267314216,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.275991436988105
  },
  {
    "length": 4,
    "abbreviation": "CdGiGcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.716081976874422,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.013242481383773,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.276053466959901
  },
  {
    "length": 4,
    "abbreviation": "CdGiGdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.385841740045835,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.685428227154743,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.27571547836729
  },
  {
    "length": 4,
    "abbreviation": "CdGiGdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.102239632605053,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.405991623698899,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.275573122098654
  },
  {
    "length": 4,
    "abbreviation": "CdGiGdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.353188463757759,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.6531295441714144,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2756939792381
  },
  {
    "length": 4,
    "abbreviation": "CdGiGdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.000784232709673,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.30680527184791,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.275540926344005
  },
  {
    "length": 4,
    "abbreviation": "CdGiGeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.9796105469238645,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.275798460894575,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.276582618253522
  },
  {
    "length": 4,
    "abbreviation": "CdGiGiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.667538940013184,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.281063514184833,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.281063514184833
  },
  {
    "length": 4,
    "abbreviation": "CdGiGiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.456357189595002,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.2788984298179695,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2788984298179695
  },
  {
    "length": 4,
    "abbreviation": "CdGiGiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.501036749876306,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.279273828433322,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.279273828433322
  },
  {
    "length": 4,
    "abbreviation": "CdGiGr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.646362214453369,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.2807965187541885,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2807965187541885
  },
  {
    "length": 4,
    "abbreviation": "CdGiGr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.435180464035186,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.278733447971346,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.278733447971346
  },
  {
    "length": 4,
    "abbreviation": "CdGiGr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.479860024316492,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.279091123959168,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.279091123959168
  },
  {
    "length": 4,
    "abbreviation": "CdGiGuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.279782997571537,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.580624297906474,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.275651159910175
  },
  {
    "length": 4,
    "abbreviation": "CdGiGuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.973231608037674,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.2799635851381295,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2755334051289955
  },
  {
    "length": 4,
    "abbreviation": "CdGiGuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.22418043919038,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.525810879559458,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.275623214060182
  },
  {
    "length": 4,
    "abbreviation": "CdGiGuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GiG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GiG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.045463792990979,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.350421504067027,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.275554183742087
  },
  {
    "length": 4,
    "abbreviation": "CdGpBPpGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpBP",
      "BPpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpBP",
      "GpBP",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.072121401874277,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.757696650953521,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.757696650953521
  },
  {
    "length": 4,
    "abbreviation": "CdGpBPpGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpBP",
      "BPpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpBP",
      "GpBP",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.860939651456095,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.751390213136297,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.751390213136297
  },
  {
    "length": 4,
    "abbreviation": "CdGpBPpGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpBP",
      "BPpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpBP",
      "GpBP",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.905619211737401,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.752487991610665,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.752487991610665
  },
  {
    "length": 4,
    "abbreviation": "CdGpCCpGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpCC",
      "CCpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpCC",
      "GpCC",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.187705566272829,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.957337678992089,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.957337678992089
  },
  {
    "length": 4,
    "abbreviation": "CdGpCCpGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpCC",
      "CCpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpCC",
      "GpCC",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.976523815854646,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9133716914171037,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9133716914171037
  },
  {
    "length": 4,
    "abbreviation": "CdGpCCpGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpCC",
      "CCpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpCC",
      "GpCC",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.021203376135952,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9213046522595416,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9213046522595416
  },
  {
    "length": 4,
    "abbreviation": "CdGpMFpGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpMF",
      "MFpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpMF",
      "GpMF",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.149513518474773,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.943910330548807,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.943910330548807
  },
  {
    "length": 4,
    "abbreviation": "CdGpMFpGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpMF",
      "MFpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpMF",
      "GpMF",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.938331768056591,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9016959575410697,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9016959575410697
  },
  {
    "length": 4,
    "abbreviation": "CdGpMFpGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpMF",
      "MFpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpMF",
      "GpMF",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.983011328337896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.909300155336833,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.909300155336833
  },
  {
    "length": 4,
    "abbreviation": "CdGpPWpGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpPW",
      "PWpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpPW",
      "GpPW",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.224015437389048,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.2474500611837565,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.2474500611837565
  },
  {
    "length": 4,
    "abbreviation": "CdGpPWpGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpPW",
      "PWpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpPW",
      "GpPW",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.012833686970866,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.237841613894616,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.237841613894616
  },
  {
    "length": 4,
    "abbreviation": "CdGpPWpGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GpPW",
      "PWpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GpPW",
      "GpPW",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.057513247252171,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.239519450510314,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.239519450510314
  },
  {
    "length": 4,
    "abbreviation": "CdGr>G<rGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.494299900236514,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.258425019072659,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.258425019072659
  },
  {
    "length": 4,
    "abbreviation": "CdGr>G<rGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.283118149818332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.256818922284778,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.256818922284778
  },
  {
    "length": 4,
    "abbreviation": "CdGr>G<rGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.327797710099636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.257097251247221,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.257097251247221
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GaDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.190789257568042,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.492943710630841,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254450754721616
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GbCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.6225180911154435,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.920191706321437,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.25480616653432
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GbCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.8734669222681495,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.1699777351349265,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.25524706076368
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GcGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.861407441451485,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.157960167823931,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.255219562542444
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GcGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.650225691033302,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.947735741679606,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254843318164676
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GcGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.694905251314608,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.992172458358773,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254908443227453
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GdAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.364665014486022,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.6644784509033155,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254553584492147
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GdCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.081062907045238,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.385246678652606,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254404118618674
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GdCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.332011738197944,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.632197284792169,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.25453101180304
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GdDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.97960750714986,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.286171039144635,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254370314593476
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GeAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.95843382136405,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.254680031899117,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.255463978567005
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GiGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.646362214453369,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.2601669491714516,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2601669491714516
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GiGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.435180464035186,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.257894862758306,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.257894862758306
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GiGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.47986002431649,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.258288854333772,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.258288854333772
  },
  {
    "length": 4,
    "abbreviation": "CdGr>Gr>GaD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.625185488893555,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.2598867886250185,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2598867886250185
  },
  {
    "length": 4,
    "abbreviation": "CdGr>Gr>GdD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.414003738475373,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.257721704258155,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.257721704258155
  },
  {
    "length": 4,
    "abbreviation": "CdGr>Gr>GuD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.458683298756677,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.258097102873507,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.258097102873507
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GuAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.258606272011723,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.559736441939731,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254486054123939
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GuCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.952054882477859,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.2593639161947685,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254362417654106
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GuCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.203003713630565,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.504961868624638,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254456712568876
  },
  {
    "length": 4,
    "abbreviation": "CdGr>GuDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "Gr>G",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.024287067431164,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.3297354645445765,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.254384234251885
  },
  {
    "length": 4,
    "abbreviation": "CdGrPBrGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GrPB",
      "PBrG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "PBrG",
      "PBrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.729436678050854,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.356929685032734,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.356929685032734
  },
  {
    "length": 4,
    "abbreviation": "CdGrPBrGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GrPB",
      "PBrG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "PBrG",
      "PBrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.518254927632672,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.3368303137677495,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.3368303137677495
  },
  {
    "length": 4,
    "abbreviation": "CdGrPBrGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GrPB",
      "PBrG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "PBrG",
      "PBrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.562934487913977,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.340375342496591,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.340375342496591
  },
  {
    "length": 4,
    "abbreviation": "CdGuAdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.979110102105916,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.427219534771677,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.427219534771677
  },
  {
    "length": 4,
    "abbreviation": "CdGuAdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.7679283516877335,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.257091310573396,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.257091310573396
  },
  {
    "length": 4,
    "abbreviation": "CdGuAdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.812607911969039,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.2917101103295705,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.2917101103295705
  },
  {
    "length": 4,
    "abbreviation": "CdGuAeGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.388069822936478,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.7920711491122026,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.7920711491122026
  },
  {
    "length": 4,
    "abbreviation": "CdGuAeGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.176888072518295,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.599088747546847,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.599088747546847
  },
  {
    "length": 4,
    "abbreviation": "CdGuAeGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.2215676327996,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.639219631248717,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.639219631248717
  },
  {
    "length": 4,
    "abbreviation": "CdGuAlDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.824210040686211,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2607600666690453,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6426099961463985
  },
  {
    "length": 4,
    "abbreviation": "CdGuAuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.933257178456163,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.388956163962816,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.388956163962816
  },
  {
    "length": 4,
    "abbreviation": "CdGuAuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.72207542803798,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.222420952047353,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.222420952047353
  },
  {
    "length": 4,
    "abbreviation": "CdGuAuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "AuG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.766754988319286,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.256193072990081,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.256193072990081
  },
  {
    "length": 4,
    "abbreviation": "CdGuCbGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.058953649178255,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.441893708331295,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9815110122128163
  },
  {
    "length": 4,
    "abbreviation": "CdGuCbGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.847771898760072,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2778963645663515,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9793933993640804
  },
  {
    "length": 4,
    "abbreviation": "CdGuCbGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.892451459041378,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.311073667966642,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9797605504142295
  },
  {
    "length": 4,
    "abbreviation": "CdGuCdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.50265288778821,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1080459530498015,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1080459530498015
  },
  {
    "length": 4,
    "abbreviation": "CdGuCdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.291471137370028,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.061822852986372,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.061822852986372
  },
  {
    "length": 4,
    "abbreviation": "CdGuCdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.336150697651333,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.070181045110653,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.070181045110653
  },
  {
    "length": 4,
    "abbreviation": "CdGuCpDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.517658651152345,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.063189215959255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9775849610883847
  },
  {
    "length": 4,
    "abbreviation": "CdGuCrCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.693020285875076,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.1702043203138506,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9783760940971544
  },
  {
    "length": 4,
    "abbreviation": "CdGuCrCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.943969117027782,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.3503889187948785,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.980233085272495
  },
  {
    "length": 4,
    "abbreviation": "CdGuCtDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.768607482305052,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2213491894768445,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9788281765668727
  },
  {
    "length": 4,
    "abbreviation": "CdGuCuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.495150199794516,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.106091323263724,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.106091323263724
  },
  {
    "length": 4,
    "abbreviation": "CdGuCuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.283968449376333,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.060486882919398,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.060486882919398
  },
  {
    "length": 4,
    "abbreviation": "CdGuCuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "CuG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.3286480096576385,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.068728343458679,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.068728343458679
  },
  {
    "length": 4,
    "abbreviation": "CdGuDaGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.5824815877855904,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.597716525599495,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.597716525599495
  },
  {
    "length": 4,
    "abbreviation": "CdGuDaGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.371299837367408,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5208364768111298,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5208364768111298
  },
  {
    "length": 4,
    "abbreviation": "CdGuDaGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.415979397648713,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5351506545897067,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5351506545897067
  },
  {
    "length": 4,
    "abbreviation": "CdGuDdGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.673027972239606,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.358778853530603,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.358778853530603
  },
  {
    "length": 4,
    "abbreviation": "CdGuDdGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.461846221821424,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1740578204300816,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1740578204300816
  },
  {
    "length": 4,
    "abbreviation": "CdGuDdGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.506525782102729,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.212170753571428,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.212170753571428
  },
  {
    "length": 4,
    "abbreviation": "CdGuDlAlD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.0590861844166755,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.4420019571269993,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4458629802573006
  },
  {
    "length": 4,
    "abbreviation": "CdGuDpCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.981513414183211,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.842608492017654,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3680135445788673
  },
  {
    "length": 4,
    "abbreviation": "CdGuDpCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.232462245335917,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9262667734222267,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.374058571700577
  },
  {
    "length": 4,
    "abbreviation": "CdGuDpSpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.13012633495629,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4594695853800497,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4594695853800497
  },
  {
    "length": 4,
    "abbreviation": "CdGuDrDrD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.589890836105651,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.1052277493828977,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.391187986745891
  },
  {
    "length": 4,
    "abbreviation": "CdGuDtCpD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.136774740744613,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.8905527044288717,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3713453281963894
  },
  {
    "length": 4,
    "abbreviation": "CdGuDtCtD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.387723571897319,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9950340923294743,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.379897388782896
  },
  {
    "length": 4,
    "abbreviation": "CdGuDuGaD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.680804181444775,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.365781217650399,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.365781217650399
  },
  {
    "length": 4,
    "abbreviation": "CdGuDuGdD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.469622431026592,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.180649406052835,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.180649406052835
  },
  {
    "length": 4,
    "abbreviation": "CdGuDuGuD",
    "edges": [
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CdG",
      "GuD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CdG",
      "DuG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:DOWNREGULATES_CdG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.514301991307898,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.218861993012165,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.218861993012165
  },
  {
    "length": 4,
    "abbreviation": "CpDaG<rGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.067500183955076,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.382043337652782,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.382043337652782
  },
  {
    "length": 4,
    "abbreviation": "CpDaG<rGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.856318433536893,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2407646421835543,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2407646421835543
  },
  {
    "length": 4,
    "abbreviation": "CpDaG<rGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.900997993818199,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2687346005300304,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2687346005300304
  },
  {
    "length": 4,
    "abbreviation": "CpDaGaDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.763989541286604,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8799667060429894,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8799667060429894
  },
  {
    "length": 4,
    "abbreviation": "CpDaGbCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.195718374834005,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9569397750135376,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9569397750135376
  },
  {
    "length": 4,
    "abbreviation": "CpDaGbCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.446667205986711,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0367242660766607,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0367242660766607
  },
  {
    "length": 4,
    "abbreviation": "CpDaGcGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.434607725170046,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.032152356875935,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.032152356875935
  },
  {
    "length": 4,
    "abbreviation": "CpDaGcGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.223425974751864,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9642545391853705,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9642545391853705
  },
  {
    "length": 4,
    "abbreviation": "CpDaGcGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.268105535033169,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9767884747265407,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9767884747265407
  },
  {
    "length": 4,
    "abbreviation": "CpDaGdAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.937865298204583,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.9036668174359432,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.9036668174359432
  },
  {
    "length": 4,
    "abbreviation": "CpDaGdCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6542631907638,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.868778379410024,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.868778379410024
  },
  {
    "length": 4,
    "abbreviation": "CpDaGdCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.905212021916506,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8985734739681623,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8985734739681623
  },
  {
    "length": 4,
    "abbreviation": "CpDaGdDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.552807790868421,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.860485273559689,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.860485273559689
  },
  {
    "length": 4,
    "abbreviation": "CpDaGeAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.531634105082611,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.071204658629201,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.071204658629201
  },
  {
    "length": 4,
    "abbreviation": "CpDaGiGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.21956249817193,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4967685857801176,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4967685857801176
  },
  {
    "length": 4,
    "abbreviation": "CpDaGiGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.008380747753748,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3402355909937196,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3402355909937196
  },
  {
    "length": 4,
    "abbreviation": "CpDaGiGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.053060308035053,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.371678793060031,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.371678793060031
  },
  {
    "length": 4,
    "abbreviation": "CpDaGr>GaD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.1983857726121165,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.480214079726312,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.480214079726312
  },
  {
    "length": 4,
    "abbreviation": "CpDaGr>GdD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.987204022193934,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3256716765699554,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3256716765699554
  },
  {
    "length": 4,
    "abbreviation": "CpDaGr>GuD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.031883582475239,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.356656284084439,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.356656284084439
  },
  {
    "length": 4,
    "abbreviation": "CpDaGuAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.831806555730284,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8882484462005675,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8882484462005675
  },
  {
    "length": 4,
    "abbreviation": "CpDaGuCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.525255166196421,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.858524986508737,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.858524986508737
  },
  {
    "length": 4,
    "abbreviation": "CpDaGuCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.776203997349127,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8813755787822064,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8813755787822064
  },
  {
    "length": 4,
    "abbreviation": "CpDaGuDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DaG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DaG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.597487351149725,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.863919290543406,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.863919290543406
  },
  {
    "length": 4,
    "abbreviation": "CpDdG<rGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.158046568409092,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.000747888644304,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.000747888644304
  },
  {
    "length": 4,
    "abbreviation": "CpDdG<rGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.946864817990909,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9707165144082444,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9707165144082444
  },
  {
    "length": 4,
    "abbreviation": "CpDdG<rGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.991544378272215,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.976063680255392,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.976063680255392
  },
  {
    "length": 4,
    "abbreviation": "CpDdGaDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.85453592574062,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9224975679450163,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9224975679450163
  },
  {
    "length": 4,
    "abbreviation": "CpDdGbCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.286264759288022,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.930067159910634,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.930067159910634
  },
  {
    "length": 4,
    "abbreviation": "CpDdGbCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.537213590440728,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9392860006615398,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9392860006615398
  },
  {
    "length": 4,
    "abbreviation": "CpDdGcGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.525154109624063,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9387164443618206,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9387164443618206
  },
  {
    "length": 4,
    "abbreviation": "CpDdGcGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.313972359205881,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.930851209218852,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.930851209218852
  },
  {
    "length": 4,
    "abbreviation": "CpDdGcGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.358651919487186,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.932222365849413,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.932222365849413
  },
  {
    "length": 4,
    "abbreviation": "CpDdGdAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.028411682658599,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9247006033967526,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9247006033967526
  },
  {
    "length": 4,
    "abbreviation": "CpDdGdCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.744809575217816,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9214949087189703,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9214949087189703
  },
  {
    "length": 4,
    "abbreviation": "CpDdGdCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.995758406370522,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.924217915603073,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.924217915603073
  },
  {
    "length": 4,
    "abbreviation": "CpDdGdDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.643354175322436,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9207667521829412,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9207667521829412
  },
  {
    "length": 4,
    "abbreviation": "CpDdGeAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.622180489536628,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9437541607593576,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9437541607593576
  },
  {
    "length": 4,
    "abbreviation": "CpDdGiGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.310108882625947,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.031243821440063,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.031243821440063
  },
  {
    "length": 4,
    "abbreviation": "CpDdGiGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.0989271322077645,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9910504799381403,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9910504799381403
  },
  {
    "length": 4,
    "abbreviation": "CpDdGiGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.14360669248907,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.998276683929537,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.998276683929537
  },
  {
    "length": 4,
    "abbreviation": "CpDdGr>GaD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.288932157066133,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.026473219855469,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.026473219855469
  },
  {
    "length": 4,
    "abbreviation": "CpDdGr>GdD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.077750406647951,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9878382490983353,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9878382490983353
  },
  {
    "length": 4,
    "abbreviation": "CpDdGr>GuD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.122429966929256,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9947739660436477,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9947739660436477
  },
  {
    "length": 4,
    "abbreviation": "CpDdGuAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.9223529401843,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.92325502742251,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.92325502742251
  },
  {
    "length": 4,
    "abbreviation": "CpDdGuCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.615801550650437,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9205964800599618,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9205964800599618
  },
  {
    "length": 4,
    "abbreviation": "CpDdGuCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.866750381803143,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.922625500644183,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.922625500644183
  },
  {
    "length": 4,
    "abbreviation": "CpDdGuDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DdG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DdG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.688033735603742,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9210667299737656,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9210667299737656
  },
  {
    "length": 4,
    "abbreviation": "CpDlAdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.395494199337395,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.354494842550112,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.354494842550112
  },
  {
    "length": 4,
    "abbreviation": "CpDlAdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.184312448919212,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.14463891231512,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.14463891231512
  },
  {
    "length": 4,
    "abbreviation": "CpDlAdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.2289920092005175,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.188982259416971,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.188982259416971
  },
  {
    "length": 4,
    "abbreviation": "CpDlAeGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.804453920167957,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.762159153114805,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.762159153114805
  },
  {
    "length": 4,
    "abbreviation": "CpDlAeGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.593272169749774,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.551496470193137,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.551496470193137
  },
  {
    "length": 4,
    "abbreviation": "CpDlAeGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.637951730031079,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.596044309498792,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.596044309498792
  },
  {
    "length": 4,
    "abbreviation": "CpDlAlDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.2405941379176895,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4281478492305273,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4281478492305273
  },
  {
    "length": 4,
    "abbreviation": "CpDlAuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.349641275687642,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.308877970664216,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.308877970664216
  },
  {
    "length": 4,
    "abbreviation": "CpDlAuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.138459525269459,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.099168628233418,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.099168628233418
  },
  {
    "length": 4,
    "abbreviation": "CpDlAuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DlA",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.183139085550764,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.143474849327031,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.143474849327031
  },
  {
    "length": 4,
    "abbreviation": "CpDpCbGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7043163657101332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.211832053500305,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.211832053500305
  },
  {
    "length": 4,
    "abbreviation": "CpDpCbGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4931346152919502,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.065403302347951,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.065403302347951
  },
  {
    "length": 4,
    "abbreviation": "CpDpCbGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5378141755732555,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0945353503173525,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0945353503173525
  },
  {
    "length": 4,
    "abbreviation": "CpDpCdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.148015604320088,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.532030273446224,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.532030273446224
  },
  {
    "length": 4,
    "abbreviation": "CpDpCdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.936833853901906,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3241764618838854,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3241764618838854
  },
  {
    "length": 4,
    "abbreviation": "CpDpCdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.981513414183211,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3680135445788673,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3680135445788673
  },
  {
    "length": 4,
    "abbreviation": "CpDpCpDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1630213676842236,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8843656978944043,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8843656978944043
  },
  {
    "length": 4,
    "abbreviation": "CpDpCrCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3383830024069545,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.972850941171181,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.972850941171181
  },
  {
    "length": 4,
    "abbreviation": "CpDpCrCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5893318335596613,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1293969989820907,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1293969989820907
  },
  {
    "length": 4,
    "abbreviation": "CpDpCtDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4139701988369304,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0164032096390683,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0164032096390683
  },
  {
    "length": 4,
    "abbreviation": "CpDpCuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.140512916326394,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.524620535563232,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.524620535563232
  },
  {
    "length": 4,
    "abbreviation": "CpDpCuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.929331165908211,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3168237683434882,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3168237683434882
  },
  {
    "length": 4,
    "abbreviation": "CpDpCuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CpD",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.974010726189516,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3606464520975723,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3606464520975723
  },
  {
    "length": 4,
    "abbreviation": "CpDpSpDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - presents - symptom",
      "disease - presents - symptom",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DpS",
      "SpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DpS",
      "DpS",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:PRESENTS_DpS]-(n2)-[:PRESENTS_DpS]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.311634288457304,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4771841348221555,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4771841348221555
  },
  {
    "length": 4,
    "abbreviation": "CpDrDaGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.763989541286604,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.231288061670476,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.231288061670476
  },
  {
    "length": 4,
    "abbreviation": "CpDrDaGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.55280779086842,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0256287858498347,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0256287858498347
  },
  {
    "length": 4,
    "abbreviation": "CpDrDaGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.597487351149725,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0689129494672085,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0689129494672085
  },
  {
    "length": 4,
    "abbreviation": "CpDrDdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.8545359257406195,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.313602469843363,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.313602469843363
  },
  {
    "length": 4,
    "abbreviation": "CpDrDdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.643354175322437,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.102880291546621,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.102880291546621
  },
  {
    "length": 4,
    "abbreviation": "CpDrDdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.688033735603742,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.147443222713937,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.147443222713937
  },
  {
    "length": 4,
    "abbreviation": "CpDrDlAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.240594137917689,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.728155869438955,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.728155869438955
  },
  {
    "length": 4,
    "abbreviation": "CpDrDpCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.1630213676842236,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.8843656978944043,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.8843656978944043
  },
  {
    "length": 4,
    "abbreviation": "CpDrDpCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4139701988369304,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.038747763776714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.038747763776714
  },
  {
    "length": 4,
    "abbreviation": "CpDrDpSpD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.311634288457303,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.79490933148208,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.79490933148208
  },
  {
    "length": 4,
    "abbreviation": "CpDrDrDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n1 <> n4 AND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.771398789606664,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.310748811351895,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.310748811351895
  },
  {
    "length": 4,
    "abbreviation": "CpDrDtCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.318282694245626,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9758690324082335,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9758690324082335
  },
  {
    "length": 4,
    "abbreviation": "CpDrDtCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5692315253983327,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1503250860051284,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1503250860051284
  },
  {
    "length": 4,
    "abbreviation": "CpDrDuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.862312134945788,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.321365648640478,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.321365648640478
  },
  {
    "length": 4,
    "abbreviation": "CpDrDuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.6511303845276055,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.110635332535554,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.110635332535554
  },
  {
    "length": 4,
    "abbreviation": "CpDrDuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DrD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.695809944808911,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.15520032809548,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.15520032809548
  },
  {
    "length": 4,
    "abbreviation": "CpDtCbGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8595776922715355,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.257288828637349,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.257288828637349
  },
  {
    "length": 4,
    "abbreviation": "CpDtCbGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6483959418533525,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.127829524740311,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.127829524740311
  },
  {
    "length": 4,
    "abbreviation": "CpDtCbGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6930755021346577,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1531725868755602,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1531725868755602
  },
  {
    "length": 4,
    "abbreviation": "CpDtCdGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.30327693088149,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.534316836769638,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.534316836769638
  },
  {
    "length": 4,
    "abbreviation": "CpDtCdGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.092095180463308,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3278606131220614,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3278606131220614
  },
  {
    "length": 4,
    "abbreviation": "CpDtCdGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.136774740744613,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3713453281963894,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3713453281963894
  },
  {
    "length": 4,
    "abbreviation": "CpDtCpDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.318282694245626,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.9758690324082335,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.9758690324082335
  },
  {
    "length": 4,
    "abbreviation": "CpDtCrCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4936443289683567,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0488732178407756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0488732178407756
  },
  {
    "length": 4,
    "abbreviation": "CpDtCrCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7445931601210636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1837825789662904,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1837825789662904
  },
  {
    "length": 4,
    "abbreviation": "CpDtCtDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5692315253983327,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.085719462823468,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.085719462823468
  },
  {
    "length": 4,
    "abbreviation": "CpDtCuGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.295774242887797,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.52694634073927,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.52694634073927
  },
  {
    "length": 4,
    "abbreviation": "CpDtCuGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.084592492469614,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3205705534228303,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3205705534228303
  },
  {
    "length": 4,
    "abbreviation": "CpDtCuGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DtC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "CtD",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.1292720527509195,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3640350142439694,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3640350142439694
  },
  {
    "length": 4,
    "abbreviation": "CpDuG<rGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.1658227776142605,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.007184836699218,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.007184836699218
  },
  {
    "length": 4,
    "abbreviation": "CpDuG<rGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.954641027196078,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9776106874742245,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9776106874742245
  },
  {
    "length": 4,
    "abbreviation": "CpDuG<rGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.999320587477383,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9828741485894437,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9828741485894437
  },
  {
    "length": 4,
    "abbreviation": "CpDuGaDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.862312134945789,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9301941657439063,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9301941657439063
  },
  {
    "length": 4,
    "abbreviation": "CpDuGbCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.29404096849319,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9376319226400947,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9376319226400947
  },
  {
    "length": 4,
    "abbreviation": "CpDuGbCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.544989799645896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9466932244499953,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9466932244499953
  },
  {
    "length": 4,
    "abbreviation": "CpDuGcGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.532930318829232,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9461333062065282,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9461333062065282
  },
  {
    "length": 4,
    "abbreviation": "CpDuGcGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.321748568411049,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.938402445235111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.938402445235111
  },
  {
    "length": 4,
    "abbreviation": "CpDuGcGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.3664281286923545,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.939750003764701,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.939750003764701
  },
  {
    "length": 4,
    "abbreviation": "CpDuGdAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.036187891863768,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9323585990362053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9323585990362053
  },
  {
    "length": 4,
    "abbreviation": "CpDuGdCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.752585784422984,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9292091391776993,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9292091391776993
  },
  {
    "length": 4,
    "abbreviation": "CpDuGdCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.00353461557569,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9318843525728253,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9318843525728253
  },
  {
    "length": 4,
    "abbreviation": "CpDuGdDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.651130384527605,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9284938130169094,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9284938130169094
  },
  {
    "length": 4,
    "abbreviation": "CpDuGeAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.629956698741797,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.951086203745225,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.951086203745225
  },
  {
    "length": 4,
    "abbreviation": "CpDuGiGaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.317885091831116,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.037247277482532,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.037247277482532
  },
  {
    "length": 4,
    "abbreviation": "CpDuGiGdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.106703341412933,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9976316802087504,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9976316802087504
  },
  {
    "length": 4,
    "abbreviation": "CpDuGiGuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.151382901694238,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.004750091246721,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.004750091246721
  },
  {
    "length": 4,
    "abbreviation": "CpDuGr>GaD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.296708366271302,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.032542524485103,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.032542524485103
  },
  {
    "length": 4,
    "abbreviation": "CpDuGr>GdD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.085526615853119,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9944679362177506,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9944679362177506
  },
  {
    "length": 4,
    "abbreviation": "CpDuGr>GuD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.130206176134425,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.001299402617467,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.001299402617467
  },
  {
    "length": 4,
    "abbreviation": "CpDuGuAlD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.930129149389469,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9309383311122064,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9309383311122064
  },
  {
    "length": 4,
    "abbreviation": "CpDuGuCpD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.623577759855605,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9283265441987014,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9283265441987014
  },
  {
    "length": 4,
    "abbreviation": "CpDuGuCtD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.874526591008311,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9303198515076714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9303198515076714
  },
  {
    "length": 4,
    "abbreviation": "CpDuGuDrD",
    "edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CpD",
      "DuG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CpD",
      "DuG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:PALLIATES_CpD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.695809944808911,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.928788502533303,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.928788502533303
  },
  {
    "length": 4,
    "abbreviation": "CrCbG<rGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.791566065023776,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.320993423725339,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.320993423725339
  },
  {
    "length": 4,
    "abbreviation": "CrCbG<rGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.580384314605594,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.153753300967769,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.153753300967769
  },
  {
    "length": 4,
    "abbreviation": "CrCbG<rGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.625063874886899,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.187691109317492,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.187691109317492
  },
  {
    "length": 4,
    "abbreviation": "CrCbGaDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.488055422355304,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6458683684655,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6458683684655
  },
  {
    "length": 4,
    "abbreviation": "CrCbGbCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.919784255902706,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7705146274720676,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7705146274720676
  },
  {
    "length": 4,
    "abbreviation": "CrCbGbCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.170733087055412,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8877150474646798,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8877150474646798
  },
  {
    "length": 4,
    "abbreviation": "CrCbGcGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.1586736062387475,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8812577991168387,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8812577991168387
  },
  {
    "length": 4,
    "abbreviation": "CrCbGcGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.947491855820565,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7817008352788375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7817008352788375
  },
  {
    "length": 4,
    "abbreviation": "CrCbGcGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.99217141610187,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.8006424915292927,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.8006424915292927
  },
  {
    "length": 4,
    "abbreviation": "CrCbGdAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.661931179273284,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6857400293465132,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6857400293465132
  },
  {
    "length": 4,
    "abbreviation": "CrCbGdCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.378329071832501,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6265074563163324,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6265074563163324
  },
  {
    "length": 4,
    "abbreviation": "CrCbGdCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.629277902985207,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6772949984652437,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6772949984652437
  },
  {
    "length": 4,
    "abbreviation": "CrCbGdDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.276873671937121,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6119151512428274,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6119151512428274
  },
  {
    "length": 4,
    "abbreviation": "CrCbGeAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.2556999861513125,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.93555556364827,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.93555556364827
  },
  {
    "length": 4,
    "abbreviation": "CrCbGiGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.943628379240632,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4506755763910064,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4506755763910064
  },
  {
    "length": 4,
    "abbreviation": "CrCbGiGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.73244662882245,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.272510777827265,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.272510777827265
  },
  {
    "length": 4,
    "abbreviation": "CrCbGiGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.777126189103755,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.309042822048358,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.309042822048358
  },
  {
    "length": 4,
    "abbreviation": "CrCbGr>GaD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.922451653680818,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.432227561859195,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.432227561859195
  },
  {
    "length": 4,
    "abbreviation": "CrCbGr>GdD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.711269903262635,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.255440182614881,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.255440182614881
  },
  {
    "length": 4,
    "abbreviation": "CrCbGr>GuD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.75594946354394,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2916423909784998,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2916423909784998
  },
  {
    "length": 4,
    "abbreviation": "CrCbGuAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.555872436798985,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.659970898792289,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.659970898792289
  },
  {
    "length": 4,
    "abbreviation": "CrCbGuCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.249321047265122,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.608434591150084,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.608434591150084
  },
  {
    "length": 4,
    "abbreviation": "CrCbGuCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.500269878417828,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.648280871788507,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.648280871788507
  },
  {
    "length": 4,
    "abbreviation": "CrCbGuDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CbG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CbG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.3215532322184265,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6179832566405494,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6179832566405494
  },
  {
    "length": 4,
    "abbreviation": "CrCcSEcCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CcSE",
      "SEcC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CcSE",
      "CcSE",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:CAUSES_CcSE]-(n2)-[:CAUSES_CcSE]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.491774636819562,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.735615113096523,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.735615113096523
  },
  {
    "length": 4,
    "abbreviation": "CrCcSEcCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - causes - side effect",
      "side effect - causes - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - causes - side effect",
      "compound - causes - side effect",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CcSE",
      "SEcC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CcSE",
      "CcSE",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:CAUSES_CcSE]-(n2)-[:CAUSES_CcSE]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n2)),\nsize((n2)-[:CAUSES_CcSE]-()),\nsize(()-[:CAUSES_CcSE]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.742723467972268,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.774268421005975,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.774268421005975
  },
  {
    "length": 4,
    "abbreviation": "CrCdG<rGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.2352653036337315,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.065515571239204,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.065515571239204
  },
  {
    "length": 4,
    "abbreviation": "CrCdG<rGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.024083553215549,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.039770914711081,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.039770914711081
  },
  {
    "length": 4,
    "abbreviation": "CrCdG<rGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.068763113496854,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.044336126966557,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.044336126966557
  },
  {
    "length": 4,
    "abbreviation": "CrCdGaDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.931754660965259,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9989849945419604,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9989849945419604
  },
  {
    "length": 4,
    "abbreviation": "CrCdGbCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.3634834945126615,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.0053411336116165,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.0053411336116165
  },
  {
    "length": 4,
    "abbreviation": "CrCdGbCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.614432325665367,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.013105959391888,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.013105959391888
  },
  {
    "length": 4,
    "abbreviation": "CrCdGcGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.602372844848703,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.012625482870954,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.012625482870954
  },
  {
    "length": 4,
    "abbreviation": "CrCdGcGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.39119109443052,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.006000507518851,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.006000507518851
  },
  {
    "length": 4,
    "abbreviation": "CrCdGcGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.435870654711826,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.007154084582126,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.007154084582126
  },
  {
    "length": 4,
    "abbreviation": "CrCdGdAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.105630417883239,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.000833035934629,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.000833035934629
  },
  {
    "length": 4,
    "abbreviation": "CrCdGdCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.822028310442456,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.99814440318063,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.99814440318063
  },
  {
    "length": 4,
    "abbreviation": "CrCdGdCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.072977141595162,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.000427998591811,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.000427998591811
  },
  {
    "length": 4,
    "abbreviation": "CrCdGdDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.720572910547077,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9975341411840666,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9975341411840666
  },
  {
    "length": 4,
    "abbreviation": "CrCdGeAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.699399224761268,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.016878700692343,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.016878700692343
  },
  {
    "length": 4,
    "abbreviation": "CrCdGiGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.387327617850588,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.091912070294233,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.091912070294233
  },
  {
    "length": 4,
    "abbreviation": "CrCdGiGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.176145867432405,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.057174686830869,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.057174686830869
  },
  {
    "length": 4,
    "abbreviation": "CrCdGiGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.22082542771371,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.063387581226395,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.063387581226395
  },
  {
    "length": 4,
    "abbreviation": "CrCdGr>GaD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.366150892290773,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.087766417182524,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.087766417182524
  },
  {
    "length": 4,
    "abbreviation": "CrCdGr>GdD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.1549691418725905,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.054417569524481,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.054417569524481
  },
  {
    "length": 4,
    "abbreviation": "CrCdGr>GuD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.199648702153896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.060374229089742,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.060374229089742
  },
  {
    "length": 4,
    "abbreviation": "CrCdGuAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.999571675408941,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9996202276231623,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9996202276231623
  },
  {
    "length": 4,
    "abbreviation": "CrCdGuCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.693020285875077,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.997391461425244,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.997391461425244
  },
  {
    "length": 4,
    "abbreviation": "CrCdGuCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.943969117027783,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.999092271009617,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.999092271009617
  },
  {
    "length": 4,
    "abbreviation": "CrCdGuDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CdG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CdG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.765252470828383,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9977855300336267,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9977855300336267
  },
  {
    "length": 4,
    "abbreviation": "CrCpDaGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.939351176009334,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.235680885311098,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.235680885311098
  },
  {
    "length": 4,
    "abbreviation": "CrCpDaGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.728169425591151,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0326608131652546,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0326608131652546
  },
  {
    "length": 4,
    "abbreviation": "CrCpDaGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.772848985872456,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.075282786654542,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.075282786654542
  },
  {
    "length": 4,
    "abbreviation": "CrCpDdGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.0298975604633505,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.313967597765928,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.313967597765928
  },
  {
    "length": 4,
    "abbreviation": "CrCpDdGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.818715810045168,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.103473289601026,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.103473289601026
  },
  {
    "length": 4,
    "abbreviation": "CrCpDdGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.863395370326473,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.147978426578448,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.147978426578448
  },
  {
    "length": 4,
    "abbreviation": "CrCpDlAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.4159557726404195,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7419958617949516,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7419958617949516
  },
  {
    "length": 4,
    "abbreviation": "CrCpDpCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.3383830024069545,
    "optimal_join_index": 2,
    "optimal_join_complexity": 1.972850941171181,
    "midpoint_index": 2,
    "midpoint_join_complexity": 1.972850941171181
  },
  {
    "length": 4,
    "abbreviation": "CrCpDpCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5893318335596613,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1025984970579747,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1025984970579747
  },
  {
    "length": 4,
    "abbreviation": "CrCpDpSpD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.486995923180034,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.806804202884919,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.806804202884919
  },
  {
    "length": 4,
    "abbreviation": "CrCpDrDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.946760424329395,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.346043895999703,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.346043895999703
  },
  {
    "length": 4,
    "abbreviation": "CrCpDtCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4936443289683567,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0488732178407756,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0488732178407756
  },
  {
    "length": 4,
    "abbreviation": "CrCpDtCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7445931601210636,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.200509755822714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.200509755822714
  },
  {
    "length": 4,
    "abbreviation": "CrCpDuGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.037673769668519,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.321724310421633,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.321724310421633
  },
  {
    "length": 4,
    "abbreviation": "CrCpDuGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.826492019250336,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.111217842652646,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.111217842652646
  },
  {
    "length": 4,
    "abbreviation": "CrCpDuGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CpD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.871171579531642,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1557260630715245,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1557260630715245
  },
  {
    "length": 4,
    "abbreviation": "CrCrCbGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.6634170570780356,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.7003890367844066,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.7003890367844066
  },
  {
    "length": 4,
    "abbreviation": "CrCrCbGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.452235306659852,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6580329225133745,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6580329225133745
  },
  {
    "length": 4,
    "abbreviation": "CrCrCbGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.496914866941157,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6656636838905623,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6656636838905623
  },
  {
    "length": 4,
    "abbreviation": "CrCrCdGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.10711629568799,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.573230151078759,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.573230151078759
  },
  {
    "length": 4,
    "abbreviation": "CrCrCdGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.8959345452698075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.388856629430155,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.388856629430155
  },
  {
    "length": 4,
    "abbreviation": "CrCrCdGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.940614105551113,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4268853129101142,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4268853129101142
  },
  {
    "length": 4,
    "abbreviation": "CrCrCpDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.122122059052126,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.618460156117882,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.618460156117882
  },
  {
    "length": 4,
    "abbreviation": "CrCrCrCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n0 <> n3 AND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.297483693774857,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.636196799474925,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.636196799474925
  },
  {
    "length": 4,
    "abbreviation": "CrCrCrCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n0 <> n3 AND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.548432524927563,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6753006342401253,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6753006342401253
  },
  {
    "length": 4,
    "abbreviation": "CrCrCtDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.373070890204833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.6460300503649243,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.6460300503649243
  },
  {
    "length": 4,
    "abbreviation": "CrCrCuGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.099613607694296,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5664962619700993,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5664962619700993
  },
  {
    "length": 4,
    "abbreviation": "CrCrCuGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.888431857276114,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.382528793446324,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.382528793446324
  },
  {
    "length": 4,
    "abbreviation": "CrCrCuGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CrC",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:RESEMBLES_CrC]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n2 AND n1 <> n2\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.933111417557419,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.420459099278244,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.420459099278244
  },
  {
    "length": 4,
    "abbreviation": "CrCtDaGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.19030000716204,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.24585130191489,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.24585130191489
  },
  {
    "length": 4,
    "abbreviation": "CrCtDaGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.979118256743858,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0487809581643184,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0487809581643184
  },
  {
    "length": 4,
    "abbreviation": "CrCtDaGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.023797817025163,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0899211404257145,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0899211404257145
  },
  {
    "length": 4,
    "abbreviation": "CrCtDdGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.280846391616057,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.314826053417581,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.314826053417581
  },
  {
    "length": 4,
    "abbreviation": "CrCtDdGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.069664641197875,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1048662693246385,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1048662693246385
  },
  {
    "length": 4,
    "abbreviation": "CrCtDdGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.11434420147918,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.149235924954783,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.149235924954783
  },
  {
    "length": 4,
    "abbreviation": "CrCtDlAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.666904603793125,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.772938388979007,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.772938388979007
  },
  {
    "length": 4,
    "abbreviation": "CrCtDpCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.589331833559661,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1293969989820907,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1293969989820907
  },
  {
    "length": 4,
    "abbreviation": "CrCtDpCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8402806647123677,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2237997723238876,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2237997723238876
  },
  {
    "length": 4,
    "abbreviation": "CrCtDpSpD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.737944754332741,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.833586665651523,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.833586665651523
  },
  {
    "length": 4,
    "abbreviation": "CrCtDrDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.197709255482101,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.4193130788179897,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.4193130788179897
  },
  {
    "length": 4,
    "abbreviation": "CrCtDtCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7445931601210627,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1837825789662904,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1837825789662904
  },
  {
    "length": 4,
    "abbreviation": "CrCtDtCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9955419912737695,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.299822048993482,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.299822048993482
  },
  {
    "length": 4,
    "abbreviation": "CrCtDuGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.288622600821226,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.322567584488614,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.322567584488614
  },
  {
    "length": 4,
    "abbreviation": "CrCtDuGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.077440850403043,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.112586240993608,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.112586240993608
  },
  {
    "length": 4,
    "abbreviation": "CrCtDuGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CtD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.1221204106843485,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.156961358696148,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.156961358696148
  },
  {
    "length": 4,
    "abbreviation": "CrCuG<rGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.227762615640037,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.059142552140593,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.059142552140593
  },
  {
    "length": 4,
    "abbreviation": "CrCuG<rGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.016580865221854,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.0330056388446005,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.0330056388446005
  },
  {
    "length": 4,
    "abbreviation": "CrCuG<rGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.06126042550316,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.037642141811758,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.037642141811758
  },
  {
    "length": 4,
    "abbreviation": "CrCuGaDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.924251972971565,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.991547846073577,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.991547846073577
  },
  {
    "length": 4,
    "abbreviation": "CrCuGbCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.355980806518967,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.998012956091887,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.998012956091887
  },
  {
    "length": 4,
    "abbreviation": "CrCuGbCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.606929637671673,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.005908721326594,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.005908721326594
  },
  {
    "length": 4,
    "abbreviation": "CrCuGcGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.594870156855008,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.005420211364945,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.005420211364945
  },
  {
    "length": 4,
    "abbreviation": "CrCuGcGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.383688406436826,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.998683541852689,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.998683541852689
  },
  {
    "length": 4,
    "abbreviation": "CrCuGcGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.428367966718131,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9998566925060866,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9998566925060866
  },
  {
    "length": 4,
    "abbreviation": "CrCuGdAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.098127729889544,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.993427738101369,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.993427738101369
  },
  {
    "length": 4,
    "abbreviation": "CrCuGdCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.814525622448762,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.99069272160182,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.99069272160182
  },
  {
    "length": 4,
    "abbreviation": "CrCuGdCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.0654744536014675,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9930157318107264,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9930157318107264
  },
  {
    "length": 4,
    "abbreviation": "CrCuGdDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.713070222553382,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.990071890750682,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.990071890750682
  },
  {
    "length": 4,
    "abbreviation": "CrCuGeAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.691896536767573,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.009744228819415,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.009744228819415
  },
  {
    "length": 4,
    "abbreviation": "CrCuGiGaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.379824929856893,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.085917473754628,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.085917473754628
  },
  {
    "length": 4,
    "abbreviation": "CrCuGiGdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.16864317943871,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.050677158146674,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.050677158146674
  },
  {
    "length": 4,
    "abbreviation": "CrCuGiGuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.213322739720016,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.05698302652785,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.05698302652785
  },
  {
    "length": 4,
    "abbreviation": "CrCuGr>GaD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.358648204297078,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.081713921414316,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.081713921414316
  },
  {
    "length": 4,
    "abbreviation": "CrCuGr>GdD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.147466453878896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.047878346981807,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.047878346981807
  },
  {
    "length": 4,
    "abbreviation": "CrCuGr>GuD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.192146014160201,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.053924749117054,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.053924749117054
  },
  {
    "length": 4,
    "abbreviation": "CrCuGuAlD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.992068987415246,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.992194042827635,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.992194042827635
  },
  {
    "length": 4,
    "abbreviation": "CrCuGuCpD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.685517597881383,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9899267378050514,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9899267378050514
  },
  {
    "length": 4,
    "abbreviation": "CrCuGuCtD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n1 AND n0 <> n3 AND n1 <> n3\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.9364664290340885,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9916569752020763,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9916569752020763
  },
  {
    "length": 4,
    "abbreviation": "CrCuGuDrD",
    "edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - resembles - compound",
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CrC",
      "CuG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CrC",
      "CuG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:RESEMBLES_CrC]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n1\nWITH\n[\nsize((n0)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.757749782834688,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9903276351213286,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9903276351213286
  },
  {
    "length": 4,
    "abbreviation": "CtDaG<rGaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.318449015107783,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.467734085786654,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.467734085786654
  },
  {
    "length": 4,
    "abbreviation": "CtDaG<rGdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.1072672646896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.355368901705065,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.355368901705065
  },
  {
    "length": 4,
    "abbreviation": "CtDaG<rGuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.1519468249709055,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3770101368129497,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3770101368129497
  },
  {
    "length": 4,
    "abbreviation": "CtDaGaDrD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.01493837243931,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.108641123419233,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.108641123419233
  },
  {
    "length": 4,
    "abbreviation": "CtDaGbCpD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.446667205986712,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.155734493118146,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.155734493118146
  },
  {
    "length": 4,
    "abbreviation": "CtDaGbCtD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.697616037139418,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2078886061662444,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2078886061662444
  },
  {
    "length": 4,
    "abbreviation": "CtDaGcGaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.685556556322753,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.204811183771303,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.204811183771303
  },
  {
    "length": 4,
    "abbreviation": "CtDaGcGdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.474374805904571,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1603769175851615,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1603769175851615
  },
  {
    "length": 4,
    "abbreviation": "CtDaGcGuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.519054366185876,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1683979528966737,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1683979528966737
  },
  {
    "length": 4,
    "abbreviation": "CtDaGdAlD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.18881412935729,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1227952677894906,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1227952677894906
  },
  {
    "length": 4,
    "abbreviation": "CtDaGdCpD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.9052120219165065,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1020677072579623,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1020677072579623
  },
  {
    "length": 4,
    "abbreviation": "CtDaGdCtD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.1561608530692125,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.119727210562731,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.119727210562731
  },
  {
    "length": 4,
    "abbreviation": "CtDaGdDrD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.803756622021128,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0972404625744154,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0972404625744154
  },
  {
    "length": 4,
    "abbreviation": "CtDaGeAlD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.782582936235318,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2314355976014864,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2314355976014864
  },
  {
    "length": 4,
    "abbreviation": "CtDaGiGaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.470511329324637,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5640196210434527,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5640196210434527
  },
  {
    "length": 4,
    "abbreviation": "CtDaGiGdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.2593295789064545,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.43371453569563,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.43371453569563
  },
  {
    "length": 4,
    "abbreviation": "CtDaGiGuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.30400913918776,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4592437323192615,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4592437323192615
  },
  {
    "length": 4,
    "abbreviation": "CtDaGr>GaD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.449334603764823,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.549879103454895,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.549879103454895
  },
  {
    "length": 4,
    "abbreviation": "CtDaGr>GdD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.238152853346641,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.42200938534693,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.42200938534693
  },
  {
    "length": 4,
    "abbreviation": "CtDaGr>GuD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.282832413627946,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4470033853434368,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4470033853434368
  },
  {
    "length": 4,
    "abbreviation": "CtDaGuAlD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.082755386882991,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.1135517510808177,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.1135517510808177
  },
  {
    "length": 4,
    "abbreviation": "CtDaGuCpD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.7762039973491275,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.096105053690503,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.096105053690503
  },
  {
    "length": 4,
    "abbreviation": "CtDaGuCtD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.027152828501833,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.109473817661444,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.109473817661444
  },
  {
    "length": 4,
    "abbreviation": "CtDaGuDrD",
    "edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DaG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DaG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.848436182302432,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.09923465889166,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.09923465889166
  },
  {
    "length": 4,
    "abbreviation": "CtDdG<rGaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.408995399561798,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.217298849171035,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.217298849171035
  },
  {
    "length": 4,
    "abbreviation": "CtDdG<rGdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.197813649143615,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.199307670445411,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.199307670445411
  },
  {
    "length": 4,
    "abbreviation": "CtDdG<rGuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.242493209424921,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.20247449824234,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.20247449824234
  },
  {
    "length": 4,
    "abbreviation": "CtDdGaDrD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.1054847568933255,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.171473194844833,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.171473194844833
  },
  {
    "length": 4,
    "abbreviation": "CtDdGbCpD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.537213590440728,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.17575615364565,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.17575615364565
  },
  {
    "length": 4,
    "abbreviation": "CtDdGbCtD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.788162421593434,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.18101599106334,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.18101599106334
  },
  {
    "length": 4,
    "abbreviation": "CtDdGcGaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.776102940776769,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.180689639958169,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.180689639958169
  },
  {
    "length": 4,
    "abbreviation": "CtDdGcGdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.564921190358587,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1762016290278705,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1762016290278705
  },
  {
    "length": 4,
    "abbreviation": "CtDdGcGuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.609600750639892,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.176981517326935,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.176981517326935
  },
  {
    "length": 4,
    "abbreviation": "CtDdGdAlD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.279360513811305,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.172716352233322,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.172716352233322
  },
  {
    "length": 4,
    "abbreviation": "CtDdGdCpD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.9957584063705225,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.170908311323922,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.170908311323922
  },
  {
    "length": 4,
    "abbreviation": "CtDdGdCtD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.246707237523228,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.172443739871676,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.172443739871676
  },
  {
    "length": 4,
    "abbreviation": "CtDdGdDrD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.894303006475143,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.170498435555468,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.170498435555468
  },
  {
    "length": 4,
    "abbreviation": "CtDdGeAlD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.873129320689334,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.183582547512894,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.183582547512894
  },
  {
    "length": 4,
    "abbreviation": "CtDdGiGaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.561057713778654,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.23607498670769,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.23607498670769
  },
  {
    "length": 4,
    "abbreviation": "CtDdGiGdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.349875963360471,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.211434851938988,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.211434851938988
  },
  {
    "length": 4,
    "abbreviation": "CtDdGiGuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.394555523641777,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.215799605745837,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.215799605745837
  },
  {
    "length": 4,
    "abbreviation": "CtDdGr>GaD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.539880988218839,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.233104392595349,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.233104392595349
  },
  {
    "length": 4,
    "abbreviation": "CtDdGr>GdD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.328699237800657,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.209503851411593,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.209503851411593
  },
  {
    "length": 4,
    "abbreviation": "CtDdGr>GuD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.373378798081962,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.21368031143349,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.21368031143349
  },
  {
    "length": 4,
    "abbreviation": "CtDdGuAlD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.173301771337007,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.171900313937014,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.171900313937014
  },
  {
    "length": 4,
    "abbreviation": "CtDdGuCpD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.8667503818031435,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.170402633542516,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.170402633542516
  },
  {
    "length": 4,
    "abbreviation": "CtDdGuCtD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.117699212955849,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.171545311212668,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.171545311212668
  },
  {
    "length": 4,
    "abbreviation": "CtDdGuDrD",
    "edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DdG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DdG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.938982566756449,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.170667255208773,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.170667255208773
  },
  {
    "length": 4,
    "abbreviation": "CtDlAdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.646443030490101,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.356150181546773,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.356150181546773
  },
  {
    "length": 4,
    "abbreviation": "CtDlAdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.435261280071918,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.147319498816704,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.147319498816704
  },
  {
    "length": 4,
    "abbreviation": "CtDlAdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.4799408403532235,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1914033795514465,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1914033795514465
  },
  {
    "length": 4,
    "abbreviation": "CtDlAeGaD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.055402751320663,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.762807379067789,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.762807379067789
  },
  {
    "length": 4,
    "abbreviation": "CtDlAeGdD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.844221000902481,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.552548884970197,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.552548884970197
  },
  {
    "length": 4,
    "abbreviation": "CtDlAeGuD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.888900561183786,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.596994236782382,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.596994236782382
  },
  {
    "length": 4,
    "abbreviation": "CtDlAlDrD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.4915429690703945,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.54948205305314,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.54948205305314
  },
  {
    "length": 4,
    "abbreviation": "CtDlAuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.600590106840348,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.310716253300668,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.310716253300668
  },
  {
    "length": 4,
    "abbreviation": "CtDlAuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.389408356422165,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.102144077290803,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.102144077290803
  },
  {
    "length": 4,
    "abbreviation": "CtDlAuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - localizes - anatomy",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DlA",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:LOCALIZES_DlA]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.43408791670347,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.146162608170243,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.146162608170243
  },
  {
    "length": 4,
    "abbreviation": "CtDpCbGaD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.95526519686284,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.291312389409879,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.291312389409879
  },
  {
    "length": 4,
    "abbreviation": "CtDpCbGdD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.744083446444657,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.173071796796193,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.173071796796193
  },
  {
    "length": 4,
    "abbreviation": "CtDpCbGuD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7887630067259623,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1959725247334494,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1959725247334494
  },
  {
    "length": 4,
    "abbreviation": "CtDpCdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.398964435472795,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5361829637580424,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5361829637580424
  },
  {
    "length": 4,
    "abbreviation": "CtDpCdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.1877826850546125,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3308586084730987,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3308586084730987
  },
  {
    "length": 4,
    "abbreviation": "CtDpCdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.232462245335918,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.374058571700577,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.374058571700577
  },
  {
    "length": 4,
    "abbreviation": "CtDpCpDrD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4139701988369304,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.038747763776714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.038747763776714
  },
  {
    "length": 4,
    "abbreviation": "CtDpCrCpD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5893318335596613,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1025984970579747,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1025984970579747
  },
  {
    "length": 4,
    "abbreviation": "CtDpCrCtD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.840280664712368,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2237997723238876,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2237997723238876
  },
  {
    "length": 4,
    "abbreviation": "CtDpCtDrD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6649190299896373,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.135314529047111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.135314529047111
  },
  {
    "length": 4,
    "abbreviation": "CtDpCuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.3914617474791005,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.528844338705934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.528844338705934
  },
  {
    "length": 4,
    "abbreviation": "CtDpCuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.180279997060918,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3236191201109038,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3236191201109038
  },
  {
    "length": 4,
    "abbreviation": "CtDpCuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - palliates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - palliates - disease",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CpD",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PALLIATES_CpD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.224959557342223,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.36679416929256,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.36679416929256
  },
  {
    "length": 4,
    "abbreviation": "CtDpSpDrD",
    "edges": [
      "compound - treats - disease",
      "disease - presents - symptom",
      "symptom - presents - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - presents - symptom",
      "disease - presents - symptom",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DpS",
      "SpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DpS",
      "DpS",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:PRESENTS_DpS]-(n2)-[:PRESENTS_DpS]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.562583119610011,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.5824042052432246,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.5824042052432246
  },
  {
    "length": 4,
    "abbreviation": "CtDrDaGaD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.01493837243931,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.2381748560537003,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.2381748560537003
  },
  {
    "length": 4,
    "abbreviation": "CtDrDaGdD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.803756622021128,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.0366342906374832,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.0366342906374832
  },
  {
    "length": 4,
    "abbreviation": "CtDrDaGuD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.848436182302433,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.078886365260971,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.078886365260971
  },
  {
    "length": 4,
    "abbreviation": "CtDrDdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.105484756893326,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.314176406093843,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.314176406093843
  },
  {
    "length": 4,
    "abbreviation": "CtDrDdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.894303006475144,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.103812271907226,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.103812271907226
  },
  {
    "length": 4,
    "abbreviation": "CtDrDdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.938982566756449,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.148284403307659,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.148284403307659
  },
  {
    "length": 4,
    "abbreviation": "CtDrDlAlD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.491542969070395,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.749721871129,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.749721871129
  },
  {
    "length": 4,
    "abbreviation": "CtDrDpCpD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.4139701988369304,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.0164032096390683,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.0164032096390683
  },
  {
    "length": 4,
    "abbreviation": "CtDrDpCtD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.6649190299896373,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.135314529047111,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.135314529047111
  },
  {
    "length": 4,
    "abbreviation": "CtDrDpSpD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.56258311961001,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.813467355841577,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.813467355841577
  },
  {
    "length": 4,
    "abbreviation": "CtDrDrDrD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n1 <> n4 AND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.022347620759371,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.365021978499215,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.365021978499215
  },
  {
    "length": 4,
    "abbreviation": "CtDrDtCpD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.5692315253983327,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.085719462823468,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.085719462823468
  },
  {
    "length": 4,
    "abbreviation": "CtDrDtCtD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8201803565510395,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.22681786356094,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.22681786356094
  },
  {
    "length": 4,
    "abbreviation": "CtDrDuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.113260966098495,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.32192942331026,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.32192942331026
  },
  {
    "length": 4,
    "abbreviation": "CtDrDuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.902079215680312,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.111550835934617,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.111550835934617
  },
  {
    "length": 4,
    "abbreviation": "CtDrDuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - resembles - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DrD",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:RESEMBLES_DrD]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n4 AND n2 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.946758775961618,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.156026631572787,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.156026631572787
  },
  {
    "length": 4,
    "abbreviation": "CtDtCbGaD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.110526523424242,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.3571760390632894,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.3571760390632894
  },
  {
    "length": 4,
    "abbreviation": "CtDtCbGdD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.8993447730060593,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2576501191057763,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2576501191057763
  },
  {
    "length": 4,
    "abbreviation": "CtDtCbGuD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.944024333287364,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.2765853083752283,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.2765853083752283
  },
  {
    "length": 4,
    "abbreviation": "CtDtCdGaD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.554225762034196,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5402111312169975,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5402111312169975
  },
  {
    "length": 4,
    "abbreviation": "CtDtCdGdD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.343044011616014,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3373035805679216,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3373035805679216
  },
  {
    "length": 4,
    "abbreviation": "CtDtCdGuD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.387723571897319,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.379897388782896,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.379897388782896
  },
  {
    "length": 4,
    "abbreviation": "CtDtCpDrD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.569231525398332,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.1503250860051284,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.1503250860051284
  },
  {
    "length": 4,
    "abbreviation": "CtDtCrCpD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.7445931601210627,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.200509755822714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.200509755822714
  },
  {
    "length": 4,
    "abbreviation": "CtDtCrCtD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.9955419912737695,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.299822048993482,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.299822048993482
  },
  {
    "length": 4,
    "abbreviation": "CtDtCtDrD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 3.820180356551039,
    "optimal_join_index": 2,
    "optimal_join_complexity": 2.22681786356094,
    "midpoint_index": 2,
    "midpoint_join_complexity": 2.22681786356094
  },
  {
    "length": 4,
    "abbreviation": "CtDtCuGaD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.546723074040503,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.532940828971013,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.532940828971013
  },
  {
    "length": 4,
    "abbreviation": "CtDtCuGdD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.33554132362232,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.330171614151201,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.330171614151201
  },
  {
    "length": 4,
    "abbreviation": "CtDtCuGuD",
    "edges": [
      "compound - treats - disease",
      "disease - treats - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "compound - treats - disease",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DtC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "CtD",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:TREATS_CtD]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.380220883903625,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.3727308029988414,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3727308029988414
  },
  {
    "length": 4,
    "abbreviation": "CtDuG<rGaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.416771608766966,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.224262131931196,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.224262131931196
  },
  {
    "length": 4,
    "abbreviation": "CtDuG<rGdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.205589858348784,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.206563027237791,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.206563027237791
  },
  {
    "length": 4,
    "abbreviation": "CtDuG<rGuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.250269418630089,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.209677576913627,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.209677576913627
  },
  {
    "length": 4,
    "abbreviation": "CtDuGaDrD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.113260966098494,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.179204531339903,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.179204531339903
  },
  {
    "length": 4,
    "abbreviation": "CtDuGbCpD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.544989799645896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1834122842064785,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1834122842064785
  },
  {
    "length": 4,
    "abbreviation": "CtDuGbCtD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.795938630798602,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.188580753792801,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.188580753792801
  },
  {
    "length": 4,
    "abbreviation": "CtDuGcGaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.783879149981938,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.188260040096874,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.188260040096874
  },
  {
    "length": 4,
    "abbreviation": "CtDuGcGdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.572697399563755,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.183849979089565,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.183849979089565
  },
  {
    "length": 4,
    "abbreviation": "CtDuGcGuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.6173769598450605,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.18461626503056,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.18461626503056
  },
  {
    "length": 4,
    "abbreviation": "CtDuGdAlD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.287136723016474,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.180425784600427,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.180425784600427
  },
  {
    "length": 4,
    "abbreviation": "CtDuGdCpD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.003534615575691,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1786496212990105,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1786496212990105
  },
  {
    "length": 4,
    "abbreviation": "CtDuGdCtD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.254483446728397,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.180157970330406,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.180157970330406
  },
  {
    "length": 4,
    "abbreviation": "CtDuGdDrD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.9020792156803115,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.178246990204038,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.178246990204038
  },
  {
    "length": 4,
    "abbreviation": "CtDuGeAlD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.880905529894503,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1911031202040805,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1911031202040805
  },
  {
    "length": 4,
    "abbreviation": "CtDuGiGaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.568833922983822,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.242745887270857,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.242745887270857
  },
  {
    "length": 4,
    "abbreviation": "CtDuGiGdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.35765217256564,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.218492028049725,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.218492028049725
  },
  {
    "length": 4,
    "abbreviation": "CtDuGiGuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.402331732846945,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.22278677557021,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.22278677557021
  },
  {
    "length": 4,
    "abbreviation": "CtDuGr>GaD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.547657197424008,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.239820726608656,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.239820726608656
  },
  {
    "length": 4,
    "abbreviation": "CtDuGr>GdD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.336475447005825,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.216592220403302,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.216592220403302
  },
  {
    "length": 4,
    "abbreviation": "CtDuGr>GuD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n2 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.381155007287131,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.220701386159186,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.220701386159186
  },
  {
    "length": 4,
    "abbreviation": "CtDuGuAlD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.181077980542176,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.179624117751708,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.179624117751708
  },
  {
    "length": 4,
    "abbreviation": "CtDuGuCpD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.874526591008312,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1781528824881615,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1781528824881615
  },
  {
    "length": 4,
    "abbreviation": "CtDuGuCtD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.125475422161018,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.179275375351407,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.179275375351407
  },
  {
    "length": 4,
    "abbreviation": "CtDuGuDrD",
    "edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - treats - disease",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CtD",
      "DuG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CtD",
      "DuG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:TREATS_CtD]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n1 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.946758775961618,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.17841282510734,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.17841282510734
  },
  {
    "length": 4,
    "abbreviation": "CuG<rG<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.35591162358578,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.1215962315647605,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.1215962315647605
  },
  {
    "length": 4,
    "abbreviation": "CuG<rG<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.144729873167597,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.119393820194791,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.119393820194791
  },
  {
    "length": 4,
    "abbreviation": "CuG<rG<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.189409433448901,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.11977570441959,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.11977570441959
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.052400980917307,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.364377025521655,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.11614085473341
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.484129814464708,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.7901745987092434,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116629479123247
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.735078645617414,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.039580983609073,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.117235417645298
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.72301916480075,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.027577124100267,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.117197632474621
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.511837414382567,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.817665313242474,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116680546977027
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.5565169746638725,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.8620228155846466,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.1167700625777535
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.226276737835287,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.535156463022963,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116282241735872
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.942674630394503,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.257330390748597,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.1160767277371955
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.193623461547209,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.502995714399169,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116251206226748
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.841219230499124,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.159012374427213,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116030243881162
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.820045544713315,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.117533451965785,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.117533451965785
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.507973937802634,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.123981501784962,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123981501784962
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.296792187384451,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.120869572067943,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.120869572067943
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.341471747665755,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.121409628547108,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.121409628547108
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.48679721224282,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.123598108914271,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.123598108914271
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.275615461824637,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.120632160853311,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.120632160853311
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.320295022105942,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.12114681155812,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.12114681155812
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.120217995360988,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.430839945854441,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116189391476765
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.813666605827124,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.132441467137715,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116019384618058
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.06461543697983,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.376332056728038,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116149046888167
  },
  {
    "length": 4,
    "abbreviation": "CuG<rGuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "G<rG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)<-[:REGULATES_GrG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.885898790780429,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.202222465613445,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.116049384943502
  },
  {
    "length": 4,
    "abbreviation": "CuGaDaGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.741481089928774,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.6966527489670233,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.6966527489670233
  },
  {
    "length": 4,
    "abbreviation": "CuGaDaGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.5302993395105915,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.636577475700853,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.636577475700853
  },
  {
    "length": 4,
    "abbreviation": "CuGaDaGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.574978899791897,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.647584927791356,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.647584927791356
  },
  {
    "length": 4,
    "abbreviation": "CuGaDdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.83202747438279,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.377625853704896,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.377625853704896
  },
  {
    "length": 4,
    "abbreviation": "CuGaDdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.6208457239646075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.202573580684642,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.202573580684642
  },
  {
    "length": 4,
    "abbreviation": "CuGaDdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.665525284245913,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.2383614329843065,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.2383614329843065
  },
  {
    "length": 4,
    "abbreviation": "CuGaDlAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.218085686559859,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.580338796522967,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.580338796522967
  },
  {
    "length": 4,
    "abbreviation": "CuGaDpCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.1405129163263945,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.889659840871307,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.524620535563232
  },
  {
    "length": 4,
    "abbreviation": "CuGaDpCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.3914617474791005,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9967643823977466,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.528844338705934
  },
  {
    "length": 4,
    "abbreviation": "CuGaDpSpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.289125837099474,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5903635342575027,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5903635342575027
  },
  {
    "length": 4,
    "abbreviation": "CuGaDrDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.7488903382488346,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.210575032733526,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5409086765486992
  },
  {
    "length": 4,
    "abbreviation": "CuGaDtCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.295774242887797,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9517422722397884,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.52694634073927
  },
  {
    "length": 4,
    "abbreviation": "CuGaDtCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.546723074040503,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.0809876266203267,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.532940828971013
  },
  {
    "length": 4,
    "abbreviation": "CuGaDuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.8398036835879585,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.384333121191815,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.384333121191815
  },
  {
    "length": 4,
    "abbreviation": "CuGaDuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.628621933169776,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.208749229839019,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.208749229839019
  },
  {
    "length": 4,
    "abbreviation": "CuGaDuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - associates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GaD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DaG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:ASSOCIATES_DaG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.673301493451081,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.244663902608368,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.244663902608368
  },
  {
    "length": 4,
    "abbreviation": "CuGbCbGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.721914169822146,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.044425555510176,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.640156408006885
  },
  {
    "length": 4,
    "abbreviation": "CuGbCbGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.510732419403963,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.8453086942289834,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.639692561068656
  },
  {
    "length": 4,
    "abbreviation": "CuGbCbGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.555411979685268,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.8869568462337276,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.639772856170507
  },
  {
    "length": 4,
    "abbreviation": "CuGbCdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.165613408432101,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.671253947661769,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.671253947661769
  },
  {
    "length": 4,
    "abbreviation": "CuGbCdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.9544316580139185,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.659097447439537,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.659097447439537
  },
  {
    "length": 4,
    "abbreviation": "CuGbCdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.999111218295224,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.661225386320217,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.661225386320217
  },
  {
    "length": 4,
    "abbreviation": "CuGbCpDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.180619171796236,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.5490229770964525,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.639297833033946
  },
  {
    "length": 4,
    "abbreviation": "CuGbCrCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.355980806518967,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.7035870652232474,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.639470355634358
  },
  {
    "length": 4,
    "abbreviation": "CuGbCrCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.606929637671673,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.935322784169689,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.63987627654909
  },
  {
    "length": 4,
    "abbreviation": "CuGbCtDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.431568002948943,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.7722792305617907,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.6395690517628525
  },
  {
    "length": 4,
    "abbreviation": "CuGbCuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.158110720438406,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.670720433072927,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.670720433072927
  },
  {
    "length": 4,
    "abbreviation": "CuGbCuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.946928970020224,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.6587601422980764,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.6587601422980764
  },
  {
    "length": 4,
    "abbreviation": "CuGbCuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - binds - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - binds - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GbC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CbG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:BINDS_CbG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.991608530301529,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.660853344338909,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.660853344338909
  },
  {
    "length": 4,
    "abbreviation": "CuGcG<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.72301916480075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.507102075853077,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.507102075853077
  },
  {
    "length": 4,
    "abbreviation": "CuGcG<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.511837414382567,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.497964039900336,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.497964039900336
  },
  {
    "length": 4,
    "abbreviation": "CuGcG<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.5565169746638725,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.499559017991181,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.499559017991181
  },
  {
    "length": 4,
    "abbreviation": "CuGcGaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.419508522132277,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.761247899991542,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.4841935040585215
  },
  {
    "length": 4,
    "abbreviation": "CuGcGbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.85123735567968,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.168688186540379,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.486283384625178
  },
  {
    "length": 4,
    "abbreviation": "CuGcGbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.102186186832386,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.413148196179406,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.488864375847488
  },
  {
    "length": 4,
    "abbreviation": "CuGcGcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.090126706015721,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.4013239948959075,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.488703772779732
  },
  {
    "length": 4,
    "abbreviation": "CuGcGcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.878944955597539,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.195487835989668,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.486501361409761
  },
  {
    "length": 4,
    "abbreviation": "CuGcGcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.923624515878844,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.238816488354723,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.486883245634561
  },
  {
    "length": 4,
    "abbreviation": "CuGcGdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.593384279050257,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.922572372518508,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.484799018827873
  },
  {
    "length": 4,
    "abbreviation": "CuGcGdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.309782171609474,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.6621684712794997,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.483918655412305
  },
  {
    "length": 4,
    "abbreviation": "CuGcGdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.56073100276218,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.891933994703889,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.484666159207382
  },
  {
    "length": 4,
    "abbreviation": "CuGcGdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.208326771714095,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.57293594729481,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.483719341951116
  },
  {
    "length": 4,
    "abbreviation": "CuGcGeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.187153085928286,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.490129559584295,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.490129559584295
  },
  {
    "length": 4,
    "abbreviation": "CuGcGiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.875081479017606,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.516837350156157,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.516837350156157
  },
  {
    "length": 4,
    "abbreviation": "CuGcGiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.663899728599423,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.504103186708483,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.504103186708483
  },
  {
    "length": 4,
    "abbreviation": "CuGcGiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.7085792888807285,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.506333469859917,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.506333469859917
  },
  {
    "length": 4,
    "abbreviation": "CuGcGr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.853904753457791,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.515283628814635,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.515283628814635
  },
  {
    "length": 4,
    "abbreviation": "CuGcGr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.642723003039609,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.503119989989234,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.503119989989234
  },
  {
    "length": 4,
    "abbreviation": "CuGcGr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.687402563320914,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.505249192928789,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.505249192928789
  },
  {
    "length": 4,
    "abbreviation": "CuGcGuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.487325536575959,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.8236095226644937,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.484401444172846
  },
  {
    "length": 4,
    "abbreviation": "CuGcGuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.180774147042095,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.5491561426035645,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.483672769498031
  },
  {
    "length": 4,
    "abbreviation": "CuGcGuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.431722978194801,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.7724211624372694,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.484228606073205
  },
  {
    "length": 4,
    "abbreviation": "CuGcGuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GcG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GcG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:COVARIES_GcG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.253006331995401,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.611922447365072,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.483801423485975
  },
  {
    "length": 4,
    "abbreviation": "CuGdAdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.07766615658652,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.444390719543933,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.444390719543933
  },
  {
    "length": 4,
    "abbreviation": "CuGdAdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.866484406168338,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.282262063466075,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.282262063466075
  },
  {
    "length": 4,
    "abbreviation": "CuGdAdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.911163966449643,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.315003088739855,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.315003088739855
  },
  {
    "length": 4,
    "abbreviation": "CuGdAeGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.486625877417083,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.799566799325103,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.799566799325103
  },
  {
    "length": 4,
    "abbreviation": "CuGdAeGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.275444126998899,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.6107223744276995,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.6107223744276995
  },
  {
    "length": 4,
    "abbreviation": "CuGdAeGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.320123687280205,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.64983887535519,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.64983887535519
  },
  {
    "length": 4,
    "abbreviation": "CuGdAlDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.922766095166814,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.338098573318104,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.7379907659377607
  },
  {
    "length": 4,
    "abbreviation": "CuGdAuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.031813232936766,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.407675237827725,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.407675237827725
  },
  {
    "length": 4,
    "abbreviation": "CuGdAuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.820631482518584,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.249619303332922,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.249619303332922
  },
  {
    "length": 4,
    "abbreviation": "CuGdAuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - downregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AdG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_AdG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.865311042799889,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.281414455239021,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.281414455239021
  },
  {
    "length": 4,
    "abbreviation": "CuGdCbGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.18045898575194,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.548885341138394,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.101675497018854
  },
  {
    "length": 4,
    "abbreviation": "CuGdCbGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.969277235333758,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.374400728841546,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.100070678732072
  },
  {
    "length": 4,
    "abbreviation": "CuGdCbGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.013956795615063,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.4100532930176937,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.100348785797781
  },
  {
    "length": 4,
    "abbreviation": "CuGdCdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.624158224361896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.20083325543465,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.20083325543465
  },
  {
    "length": 4,
    "abbreviation": "CuGdCdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.412976473943713,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.163892600081303,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.163892600081303
  },
  {
    "length": 4,
    "abbreviation": "CuGdCdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.457656034225018,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.1705134504098496,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.1705134504098496
  },
  {
    "length": 4,
    "abbreviation": "CuGdCpDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.639163987726031,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.1375556508398175,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.098701668068079
  },
  {
    "length": 4,
    "abbreviation": "CuGdCrCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.814525622448762,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.257105044549951,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.099300395320784
  },
  {
    "length": 4,
    "abbreviation": "CuGdCrCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.0654744536014675,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.452051158504415,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.100706802167357
  },
  {
    "length": 4,
    "abbreviation": "CuGdCtDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.8901128188787375,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.3131345562785035,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.099642649128324
  },
  {
    "length": 4,
    "abbreviation": "CuGdCuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.616655536368201,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.199255320867231,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.199255320867231
  },
  {
    "length": 4,
    "abbreviation": "CuGdCuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.405473785950019,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.162836787175582,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.162836787175582
  },
  {
    "length": 4,
    "abbreviation": "CuGdCuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CdG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_CdG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.450153346231324,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.169360809393398,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.169360809393398
  },
  {
    "length": 4,
    "abbreviation": "CuGdDaGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.5302993395105915,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.568288041399668,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.568288041399668
  },
  {
    "length": 4,
    "abbreviation": "CuGdDaGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.319117589092409,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.485470998548841,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.485470998548841
  },
  {
    "length": 4,
    "abbreviation": "CuGdDaGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.363797149373714,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5009781484766282,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5009781484766282
  },
  {
    "length": 4,
    "abbreviation": "CuGdDdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.6208457239646075,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.353818045157736,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.353818045157736
  },
  {
    "length": 4,
    "abbreviation": "CuGdDdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.409663973546425,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.166444103286714,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.166444103286714
  },
  {
    "length": 4,
    "abbreviation": "CuGdDdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.45434353382773,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.205201884854065,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.205201884854065
  },
  {
    "length": 4,
    "abbreviation": "CuGdDlAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.0069039361416765,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.4034986575411486,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.4034986575411486
  },
  {
    "length": 4,
    "abbreviation": "CuGdDpCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.929331165908212,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.825319344695934,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3168237683434882
  },
  {
    "length": 4,
    "abbreviation": "CuGdDpCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.180279997060918,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9043015883020917,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3236191201109038
  },
  {
    "length": 4,
    "abbreviation": "CuGdDpSpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.077944086681291,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.418475668347022,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.418475668347022
  },
  {
    "length": 4,
    "abbreviation": "CuGdDrDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.537708587830652,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.075723471097873,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3428121260446155
  },
  {
    "length": 4,
    "abbreviation": "CuGdDtCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.084592492469614,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.870480215186053,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3205705534228303
  },
  {
    "length": 4,
    "abbreviation": "CuGdDtCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.33554132362232,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.969815890261591,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.330171614151201
  },
  {
    "length": 4,
    "abbreviation": "CuGdDuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.628621933169776,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.36090020125368,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.36090020125368
  },
  {
    "length": 4,
    "abbreviation": "CuGdDuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.4174401827515934,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.173151370773632,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.173151370773632
  },
  {
    "length": 4,
    "abbreviation": "CuGdDuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - downregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GdD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DdG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:DOWNREGULATES_DdG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.462119743032899,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.212000517947641,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.212000517947641
  },
  {
    "length": 4,
    "abbreviation": "CuGeAdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.671434963464549,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.637066631814206,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.637066631814206
  },
  {
    "length": 4,
    "abbreviation": "CuGeAdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.460253213046366,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.5402005599984605,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.5402005599984605
  },
  {
    "length": 4,
    "abbreviation": "CuGeAdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.50493277332767,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.558583013932556,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.558583013932556
  },
  {
    "length": 4,
    "abbreviation": "CuGeAeGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 9.080394684295111,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.895248000143062,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.895248000143062
  },
  {
    "length": 4,
    "abbreviation": "CuGeAeGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.869212933876929,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.750827883813255,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.750827883813255
  },
  {
    "length": 4,
    "abbreviation": "CuGeAeGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.913892494158233,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.779505421661375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.779505421661375
  },
  {
    "length": 4,
    "abbreviation": "CuGeAlDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.516534902044842,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.8507008877883364,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.322335727801048
  },
  {
    "length": 4,
    "abbreviation": "CuGeAuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.625582039814795,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.6138663421997546,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.6138663421997546
  },
  {
    "length": 4,
    "abbreviation": "CuGeAuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.414400289396612,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.522480752408042,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.522480752408042
  },
  {
    "length": 4,
    "abbreviation": "CuGeAuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - expresses - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - expresses - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GeA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AeG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:EXPRESSES_AeG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.459079849677918,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.5397327528926965,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.5397327528926965
  },
  {
    "length": 4,
    "abbreviation": "CuGiG<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.507973937802635,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.271970001511414,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.271970001511414
  },
  {
    "length": 4,
    "abbreviation": "CuGiG<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.296792187384453,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.270413311844916,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.270413311844916
  },
  {
    "length": 4,
    "abbreviation": "CuGiG<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.341471747665757,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.270683066096859,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.270683066096859
  },
  {
    "length": 4,
    "abbreviation": "CuGiGaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.204463295134163,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.513667984370433,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268118318214671
  },
  {
    "length": 4,
    "abbreviation": "CuGiGbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.636192128681564,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.9411993166621375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2684627234929415
  },
  {
    "length": 4,
    "abbreviation": "CuGiGbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.88714095983427,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.191059321454767,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268889976058864
  },
  {
    "length": 4,
    "abbreviation": "CuGiGcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.875081479017606,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.179039084437544,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268863328264934
  },
  {
    "length": 4,
    "abbreviation": "CuGiGcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.663899728599423,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.968753746579566,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268498725100632
  },
  {
    "length": 4,
    "abbreviation": "CuGiGcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.7085792888807285,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.013205902779887,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268561834457715
  },
  {
    "length": 4,
    "abbreviation": "CuGiGdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.378339052052143,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.685350412392046,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.26821796261455
  },
  {
    "length": 4,
    "abbreviation": "CuGiGdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.094736944611359,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.405843530969195,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268073127005028
  },
  {
    "length": 4,
    "abbreviation": "CuGiGdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.345685775764065,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.653045721077925,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268196089099849
  },
  {
    "length": 4,
    "abbreviation": "CuGiGdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.99328154471598,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.306619174968361,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268040370399959
  },
  {
    "length": 4,
    "abbreviation": "CuGiGeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.972107858930171,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.269100187154658,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.269100187154658
  },
  {
    "length": 4,
    "abbreviation": "CuGiGiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.66003625201949,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.2736585457816165,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2736585457816165
  },
  {
    "length": 4,
    "abbreviation": "CuGiGiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.448854501601307,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.271456134411646,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.271456134411646
  },
  {
    "length": 4,
    "abbreviation": "CuGiGiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.493534061882611,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.271838018636446,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.271838018636446
  },
  {
    "length": 4,
    "abbreviation": "CuGiGr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.638859526459676,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.2733869574585475,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2733869574585475
  },
  {
    "length": 4,
    "abbreviation": "CuGiGr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.427677776041493,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.271288300436218,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.271288300436218
  },
  {
    "length": 4,
    "abbreviation": "CuGiGr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.472357336322798,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.271652158363637,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.271652158363637
  },
  {
    "length": 4,
    "abbreviation": "CuGiGuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.272280309577844,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.5805252428736125,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268152524060615
  },
  {
    "length": 4,
    "abbreviation": "CuGiGuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.96572892004398,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.279765620914551,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2680327181592
  },
  {
    "length": 4,
    "abbreviation": "CuGiGuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.216677751196686,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.525698497592785,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268124091485006
  },
  {
    "length": 4,
    "abbreviation": "CuGiGuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - interacts - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GiG",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GiG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:INTERACTS_GiG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.037961104997285,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.350253192498716,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.268053858747193
  },
  {
    "length": 4,
    "abbreviation": "CuGpBPpGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpBP",
      "BPpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpBP",
      "GpBP",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.064618713880584,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.750477187487961,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.750477187487961
  },
  {
    "length": 4,
    "abbreviation": "CuGpBPpGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpBP",
      "BPpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpBP",
      "GpBP",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.853436963462401,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.744064254542016,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.744064254542016
  },
  {
    "length": 4,
    "abbreviation": "CuGpBPpGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "biological process - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - biological process",
      "gene - participates - biological process",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpBP",
      "BPpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpBP",
      "GpBP",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpBP]-(n2)-[:PARTICIPATES_GpBP]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n2)),\nsize((n2)-[:PARTICIPATES_GpBP]-()),\nsize(()-[:PARTICIPATES_GpBP]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.898116523743706,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.745180684135184,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.745180684135184
  },
  {
    "length": 4,
    "abbreviation": "CuGpCCpGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpCC",
      "CCpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpCC",
      "GpCC",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.180202878279135,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9517230374717154,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9517230374717154
  },
  {
    "length": 4,
    "abbreviation": "CuGpCCpGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpCC",
      "CCpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpCC",
      "GpCC",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.969021127860953,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.907154581136992,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.907154581136992
  },
  {
    "length": 4,
    "abbreviation": "CuGpCCpGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "cellular component - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - cellular component",
      "gene - participates - cellular component",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpCC",
      "CCpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpCC",
      "GpCC",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpCC]-(n2)-[:PARTICIPATES_GpCC]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n2)),\nsize((n2)-[:PARTICIPATES_GpCC]-()),\nsize(()-[:PARTICIPATES_GpCC]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.013700688142258,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.9152008693275206,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9152008693275206
  },
  {
    "length": 4,
    "abbreviation": "CuGpMFpGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpMF",
      "MFpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpMF",
      "GpMF",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.142010830481079,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.938224217327389,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.938224217327389
  },
  {
    "length": 4,
    "abbreviation": "CuGpMFpGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpMF",
      "MFpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpMF",
      "GpMF",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.930829080062897,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.8954251779157767,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.8954251779157767
  },
  {
    "length": 4,
    "abbreviation": "CuGpMFpGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "molecular function - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - molecular function",
      "gene - participates - molecular function",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpMF",
      "MFpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpMF",
      "GpMF",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpMF]-(n2)-[:PARTICIPATES_GpMF]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n2)),\nsize((n2)-[:PARTICIPATES_GpMF]-()),\nsize(()-[:PARTICIPATES_GpMF]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.975508640344202,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.903138992843198,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.903138992843198
  },
  {
    "length": 4,
    "abbreviation": "CuGpPWpGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpPW",
      "PWpG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpPW",
      "GpPW",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.216512749395354,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.240377187319653,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.240377187319653
  },
  {
    "length": 4,
    "abbreviation": "CuGpPWpGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpPW",
      "PWpG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpPW",
      "GpPW",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.005330998977171,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.230609189260604,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.230609189260604
  },
  {
    "length": 4,
    "abbreviation": "CuGpPWpGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "pathway - participates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene - participates - pathway",
      "gene - participates - pathway",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GpPW",
      "PWpG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GpPW",
      "GpPW",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:PARTICIPATES_GpPW]-(n2)-[:PARTICIPATES_GpPW]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n2)),\nsize((n2)-[:PARTICIPATES_GpPW]-()),\nsize(()-[:PARTICIPATES_GpPW]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.050010559258476,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.232315146036837,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.232315146036837
  },
  {
    "length": 4,
    "abbreviation": "CuGr>G<rGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "G<rG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.48679721224282,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.25099486988617,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.25099486988617
  },
  {
    "length": 4,
    "abbreviation": "CuGr>G<rGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "G<rG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.275615461824637,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.249361006512201,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.249361006512201
  },
  {
    "length": 4,
    "abbreviation": "CuGr>G<rGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene < regulates < gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "G<rG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)<-[:REGULATES_GrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)<-[:REGULATES_GrG]-()),\nsize(()<-[:REGULATES_GrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.320295022105942,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.249644154778296,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.249644154778296
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GaDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - associates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - associates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GaD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DaG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:ASSOCIATES_DaG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.1832865695743475,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.492822492323643,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.246951706452168
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GbCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GbC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CbG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.61501540312175,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.920146387117685,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.247313305944615
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GbCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - binds - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - binds - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GbC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CbG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:BINDS_CbG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.865964234274456,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.169952238296553,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.247761868936855
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GcGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GcG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.853904753457791,
    "optimal_join_index": 1,
    "optimal_join_complexity": 5.157933955576673,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.247733892652561
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GcGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GcG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.642723003039609,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.947693207619261,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.247351104083318
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GcGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - covaries - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GcG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GcG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:COVARIES_GcG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:COVARIES_GcG]-()),\nsize(()-[:COVARIES_GcG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.687402563320914,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.992134061291228,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.247417362309096
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GdAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - downregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AdG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_AdG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.357162326492327,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.664396790090838,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.247056327007148
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GdCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CdG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.0735602190515445,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.385091339008229,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.246904258037479
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GdCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - downregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CdG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_CdG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.3245090502042505,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.632109322201138,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.247033361250739
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GdDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - downregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - downregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GdD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DdG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:DOWNREGULATES_DdG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.972104819156165,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.285975884967259,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.246869865155313
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GeAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - expresses - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - expresses - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GeA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AeG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:EXPRESSES_AeG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.950931133370356,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.24798255682788,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.24798255682788
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GiGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GiG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.638859526459676,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.252766797041704,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.252766797041704
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GiGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GiG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.427677776041493,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.2504555596496765,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.2504555596496765
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GiGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - interacts - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GiG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GiG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:INTERACTS_GiG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:INTERACTS_GiG]-()),\nsize(()-[:INTERACTS_GiG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.472357336322798,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.250856355149186,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.250856355149186
  },
  {
    "length": 4,
    "abbreviation": "CuGr>Gr>GaD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "Gr>G",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.61768280089986,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.252481820221802,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.252481820221802
  },
  {
    "length": 4,
    "abbreviation": "CuGr>Gr>GdD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "Gr>G",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.406501050481678,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.250279408851832,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.250279408851832
  },
  {
    "length": 4,
    "abbreviation": "CuGr>Gr>GuD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene > regulates > gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "Gr>G",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "GrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:REGULATES_GrG]->(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n1 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.451180610762984,
    "optimal_join_index": 2,
    "optimal_join_complexity": 5.250661293076631,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.250661293076631
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GuAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "AuG",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_AuG]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.251103584018029,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.559632505737754,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.246987620643582
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GuCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CuG",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.9445521944841655,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.259156333479335,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.246861830646677
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GuCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "compound - upregulates - gene",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "CuG",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_CuG]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n2 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.195501025636871,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.504843959231951,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.246957768067343
  },
  {
    "length": 4,
    "abbreviation": "CuGr>GuDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "gene - upregulates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "gene > regulates > gene",
      "disease - upregulates - gene",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "Gr>G",
      "GuD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "GrG",
      "DuG",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_GrG]->(n2)-[:UPREGULATES_DuG]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n1 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_GrG]->()),\nsize(()-[:REGULATES_GrG]->(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.016784379437471,
    "optimal_join_index": 1,
    "optimal_join_complexity": 4.329558940401363,
    "midpoint_index": 2,
    "midpoint_join_complexity": 5.24688402729605
  },
  {
    "length": 4,
    "abbreviation": "CuGrPBrGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GrPB",
      "PBrG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "PBrG",
      "PBrG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.72193399005716,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.350314899551864,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.350314899551864
  },
  {
    "length": 4,
    "abbreviation": "CuGrPBrGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GrPB",
      "PBrG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "PBrG",
      "PBrG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.510752239638977,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.329899684838983,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.329899684838983
  },
  {
    "length": 4,
    "abbreviation": "CuGrPBrGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - regulates - perturbation",
      "perturbation - regulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "perturbation - regulates - gene",
      "perturbation - regulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GrPB",
      "PBrG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "PBrG",
      "PBrG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:REGULATES_PBrG]-(n2)-[:REGULATES_PBrG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n2)),\nsize((n2)-[:REGULATES_PBrG]-()),\nsize(()-[:REGULATES_PBrG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.5554317999202825,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.333501504410544,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.333501504410544
  },
  {
    "length": 4,
    "abbreviation": "CuGuAdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.971607414112222,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.4260403504316885,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.4260403504316885
  },
  {
    "length": 4,
    "abbreviation": "CuGuAdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.76042566369404,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.2553455162655816,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.2553455162655816
  },
  {
    "length": 4,
    "abbreviation": "CuGuAdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:DOWNREGULATES_AdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_AdG]-()),\nsize(()-[:DOWNREGULATES_AdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.805105223975345,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.29009832457783,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.29009832457783
  },
  {
    "length": 4,
    "abbreviation": "CuGuAeGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AeG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AeG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.380567134942783,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.791562527376147,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.791562527376147
  },
  {
    "length": 4,
    "abbreviation": "CuGuAeGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AeG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AeG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.1693853845246,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.598295297306305,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.598295297306305
  },
  {
    "length": 4,
    "abbreviation": "CuGuAeGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - expresses - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - expresses - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AeG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AeG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:EXPRESSES_AeG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:EXPRESSES_AeG]-()),\nsize(()-[:EXPRESSES_AeG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 8.214064944805905,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.638496272435902,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.638496272435902
  },
  {
    "length": 4,
    "abbreviation": "CuGuAlDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - localizes - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AlD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "DlA",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.816707352692516,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2586864539652067,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.635378762689815
  },
  {
    "length": 4,
    "abbreviation": "CuGuAuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.925754490462468,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.387668212693388,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.387668212693388
  },
  {
    "length": 4,
    "abbreviation": "CuGuAuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.714572740044286,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.220529758049919,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.220529758049919
  },
  {
    "length": 4,
    "abbreviation": "CuGuAuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - anatomy",
      "anatomy - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "anatomy - upregulates - gene",
      "anatomy - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuA",
      "AuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "AuG",
      "AuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_AuG]-(n2)-[:UPREGULATES_AuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n2)),\nsize((n2)-[:UPREGULATES_AuG]-()),\nsize(()-[:UPREGULATES_AuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.759252300325591,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.2544436568846296,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.2544436568846296
  },
  {
    "length": 4,
    "abbreviation": "CuGuCbGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CbG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CbG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.051450961184561,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.440528370577234,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.974103906670015
  },
  {
    "length": 4,
    "abbreviation": "CuGuCbGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CbG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CbG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.840269210766379,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2759031632162374,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.971949776652676
  },
  {
    "length": 4,
    "abbreviation": "CuGuCbGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - binds - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - binds - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CbG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CbG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:BINDS_CbG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:BINDS_CbG]-()),\nsize(()-[:BINDS_CbG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.884948771047684,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.3092273756223203,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9723232720246946
  },
  {
    "length": 4,
    "abbreviation": "CuGuCdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.495150199794516,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.102522967981133,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.102522967981133
  },
  {
    "length": 4,
    "abbreviation": "CuGuCdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.283968449376333,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.055675210569561,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.055675210569561
  },
  {
    "length": 4,
    "abbreviation": "CuGuCdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:DOWNREGULATES_CdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_CdG]-()),\nsize(()-[:DOWNREGULATES_CdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.3286480096576385,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.064151402879038,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.064151402879038
  },
  {
    "length": 4,
    "abbreviation": "CuGuCpDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - palliates - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CpD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CpD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.5101559631586525,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.059916582313375,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.9701100090506793
  },
  {
    "length": 4,
    "abbreviation": "CuGuCrCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CrC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CrC",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.685517597881383,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.167648535630803,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.970914863953872
  },
  {
    "length": 4,
    "abbreviation": "CuGuCrCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - resembles - compound",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CrC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CrC",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:RESEMBLES_CrC]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n0 <> n2 AND n0 <> n3 AND n2 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:RESEMBLES_CrC]-()),\nsize(()-[:RESEMBLES_CrC]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.9364664290340885,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.348702733806275,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.972803964197327
  },
  {
    "length": 4,
    "abbreviation": "CuGuCtDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - treats - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CtD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CtD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:TREATS_CtD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n3 <> n4 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.761104794311358,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.2190780846211897,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.971374776208129
  },
  {
    "length": 4,
    "abbreviation": "CuGuCuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.487647511800822,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.100543265056108,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.100543265056108
  },
  {
    "length": 4,
    "abbreviation": "CuGuCuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.27646576138264,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.054320164992678,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.054320164992678
  },
  {
    "length": 4,
    "abbreviation": "CuGuCuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - compound",
      "compound - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "compound - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuC",
      "CuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "CuG",
      "CuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_CuG]-(n2)-[:UPREGULATES_CuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n1 <> n3 AND n0 <> n2\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n2)),\nsize((n2)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.321145321663945,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.062678357116959,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.062678357116959
  },
  {
    "length": 4,
    "abbreviation": "CuGuDaGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DaG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DaG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.574978899791896,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5933906308014434,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5933906308014434
  },
  {
    "length": 4,
    "abbreviation": "CuGuDaGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DaG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DaG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.363797149373713,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.515667832943607,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.515667832943607
  },
  {
    "length": 4,
    "abbreviation": "CuGuDaGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - associates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DaG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DaG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:ASSOCIATES_DaG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.408476709655019,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.5301505588301456,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.5301505588301456
  },
  {
    "length": 4,
    "abbreviation": "CuGuDdGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DdG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DdG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.665525284245913,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.358032016508463,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.358032016508463
  },
  {
    "length": 4,
    "abbreviation": "CuGuDdGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DdG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DdG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.45434353382773,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.172914560423452,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.172914560423452
  },
  {
    "length": 4,
    "abbreviation": "CuGuDdGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - downregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DdG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DdG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:DOWNREGULATES_DdG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.4990230941090354,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.211123663568019,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.211123663568019
  },
  {
    "length": 4,
    "abbreviation": "CuGuDlAlD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - localizes - anatomy",
      "anatomy - localizes - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - localizes - anatomy",
      "disease - localizes - anatomy"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DlA",
      "AlD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DlA",
      "DlA"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:LOCALIZES_DlA]-(n3)-[:LOCALIZES_DlA]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n3)),\nsize((n3)-[:LOCALIZES_DlA]-()),\nsize(()-[:LOCALIZES_DlA]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.051583496422981,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.439713485064298,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.439713485064298
  },
  {
    "length": 4,
    "abbreviation": "CuGuDpCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DpC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "CpD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 4.974010726189517,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.837156364086507,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3606464520975723
  },
  {
    "length": 4,
    "abbreviation": "CuGuDpCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - palliates - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "compound - palliates - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DpC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "CpD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PALLIATES_CpD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.224959557342223,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.921774889233649,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.36679416929256
  },
  {
    "length": 4,
    "abbreviation": "CuGuDpSpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - presents - symptom",
      "symptom - presents - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - presents - symptom",
      "disease - presents - symptom"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DpS",
      "SpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DpS",
      "DpS"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:PRESENTS_DpS]-(n3)-[:PRESENTS_DpS]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n3)),\nsize((n3)-[:PRESENTS_DpS]-()),\nsize(()-[:PRESENTS_DpS]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 6.122623646962596,
    "optimal_join_index": 2,
    "optimal_join_complexity": 3.453511076513459,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.453511076513459
  },
  {
    "length": 4,
    "abbreviation": "CuGuDrDrD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - resembles - disease",
      "disease - resembles - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DrD",
      "DrD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DrD",
      "DrD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:RESEMBLES_DrD]-(n3)-[:RESEMBLES_DrD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n3 AND n2 <> n4 AND n3 <> n4\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n3)),\nsize((n3)-[:RESEMBLES_DrD]-()),\nsize(()-[:RESEMBLES_DrD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.582388148111956,
    "optimal_join_index": 1,
    "optimal_join_complexity": 3.1022580837360856,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3842067999606744
  },
  {
    "length": 4,
    "abbreviation": "CuGuDtCpD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - palliates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - palliates - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DtC",
      "CpD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "CtD",
      "CpD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:PALLIATES_CpD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:PALLIATES_CpD]-()),\nsize(()-[:PALLIATES_CpD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.129272052750919,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.885673647812124,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3640350142439694
  },
  {
    "length": 4,
    "abbreviation": "CuGuDtCtD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - treats - compound",
      "compound - treats - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "compound - treats - disease",
      "compound - treats - disease"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DtC",
      "CtD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "CtD",
      "CtD"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:TREATS_CtD]-(n3)-[:TREATS_CtD]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n0 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n3)),\nsize((n3)-[:TREATS_CtD]-()),\nsize(()-[:TREATS_CtD]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 5.3802208839036245,
    "optimal_join_index": 1,
    "optimal_join_complexity": 2.9912029225165835,
    "midpoint_index": 2,
    "midpoint_join_complexity": 3.3727308029988414
  },
  {
    "length": 4,
    "abbreviation": "CuGuDuGaD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - associates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - associates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DuG",
      "GaD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DuG",
      "DaG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:ASSOCIATES_DaG]-()),\nsize(()-[:ASSOCIATES_DaG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.673301493451081,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.3650463358389455,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.3650463358389455
  },
  {
    "length": 4,
    "abbreviation": "CuGuDuGdD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - downregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - downregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DuG",
      "GdD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DuG",
      "DdG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:DOWNREGULATES_DdG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:DOWNREGULATES_DdG]-()),\nsize(()-[:DOWNREGULATES_DdG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.462119743032899,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.179523389414619,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.179523389414619
  },
  {
    "length": 4,
    "abbreviation": "CuGuDuGuD",
    "edges": [
      "compound - upregulates - gene",
      "gene - upregulates - disease",
      "disease - upregulates - gene",
      "gene - upregulates - disease"
    ],
    "standard_edges": [
      "compound - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene",
      "disease - upregulates - gene"
    ],
    "edge_abbreviations": [
      "CuG",
      "GuD",
      "DuG",
      "GuD"
    ],
    "standard_edge_abbreviations": [
      "CuG",
      "DuG",
      "DuG",
      "DuG"
    ],
    "dwpc_query": "MATCH path = (n0:Compound)-[:UPREGULATES_CuG]-(n1)-[:UPREGULATES_DuG]-(n2)-[:UPREGULATES_DuG]-(n3)-[:UPREGULATES_DuG]-(n4:Disease)\nUSING INDEX n0:Compound(identifier)\nUSING INDEX n4:Disease(identifier)\nUSING JOIN ON n2\nWHERE n0.identifier = { source }\nAND n4.identifier = { target }\nAND n2 <> n4 AND n1 <> n3\nWITH\n[\nsize((n0)-[:UPREGULATES_CuG]-()),\nsize(()-[:UPREGULATES_CuG]-(n1)),\nsize((n1)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n2)),\nsize((n2)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n3)),\nsize((n3)-[:UPREGULATES_DuG]-()),\nsize(()-[:UPREGULATES_DuG]-(n4))\n] AS degrees, path\nRETURN\ncount(path) AS PC,\nsum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -{ w })) AS DWPC",
    "sequential_complexity": 7.506799303314204,
    "optimal_join_index": 2,
    "optimal_join_complexity": 4.217830931054937,
    "midpoint_index": 2,
    "midpoint_join_complexity": 4.217830931054937
  }
]